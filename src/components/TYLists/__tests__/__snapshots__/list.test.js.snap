// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`List Component basic render 1`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  contentContainerStyle={
    Array [
      Object {
        "backgroundColor": "#f8f8f8",
      },
      undefined,
    ]
  }
  data={
    Array [
      Object {
        "Icon": <Image
          source={1}
          style={Object {}}
        />,
        "key": 1,
        "onPress": [MockFunction],
        "styles": Object {
          "container": Object {
            "height": 64,
          },
          "content": Object {
            "backgroundColor": "red",
          },
          "contentCenter": Object {
            "backgroundColor": "blue",
          },
          "contentLeft": Object {
            "height": 48,
            "width": 48,
          },
          "contentRight": Object {
            "height": 48,
            "width": 48,
          },
          "subTitle": Object {
            "color": "#000",
          },
          "title": Object {
            "color": "yellow",
          },
          "valueText": Object {
            "color": "pink",
          },
        },
        "subTitle": "subTitle_1",
        "title": "title_1",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  showsVerticalScrollIndicator={false}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  useART={false}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "height": 64,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          disabled={false}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                Object {
                  "backgroundColor": "red",
                },
              ],
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "marginRight": 20,
                },
                Object {
                  "height": 48,
                  "width": 48,
                },
              ]
            }
          >
            <Image
              source={1}
              style={Object {}}
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
                Object {
                  "backgroundColor": "blue",
                },
              ]
            }
          >
            <Text
              accessible={true}
              align={null}
              allowFontScaling={false}
              color={null}
              ellipsizeMode="tail"
              size="small"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#333",
                    "fontSize": 17,
                    "lineHeight": 24,
                  },
                  Array [
                    Object {
                      "color": "#333",
                    },
                    Array [
                      undefined,
                      Object {
                        "color": "yellow",
                      },
                    ],
                  ],
                ]
              }
              type="title"
              weight={null}
            >
              title_1
            </Text>
            <Text
              accessible={true}
              align={null}
              allowFontScaling={false}
              color={null}
              ellipsizeMode="tail"
              size="large"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#333",
                    "fontSize": 17,
                    "lineHeight": 24,
                  },
                  Array [
                    Object {
                      "color": "rgba(51, 51, 51, 0.5)",
                      "marginTop": 4,
                    },
                    Array [
                      undefined,
                      Object {
                        "color": "#000",
                      },
                    ],
                  ],
                ]
              }
              type="paragraph"
              weight={null}
            >
              subTitle_1
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 48,
                "marginLeft": 20,
                "opacity": 1,
                "width": 48,
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`List Component should able to use FlatList props 1`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  ListHeaderComponent={<View />}
  contentContainerStyle={
    Array [
      Object {
        "backgroundColor": "#f8f8f8",
      },
      undefined,
    ]
  }
  data={
    Array [
      Object {
        "Action": [Function],
        "key": 1,
        "title": "title_1",
        "value": "1",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  showsVerticalScrollIndicator={false}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  useART={false}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          disabled={false}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                undefined,
              ],
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              align={null}
              allowFontScaling={false}
              color={null}
              ellipsizeMode="tail"
              size="small"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#333",
                    "fontSize": 17,
                    "lineHeight": 24,
                  },
                  Array [
                    Object {
                      "color": "#333",
                    },
                    Array [
                      undefined,
                      undefined,
                    ],
                  ],
                ]
              }
              type="title"
              weight={null}
            >
              title_1
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "marginLeft": 20,
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Text
                accessible={true}
                align={null}
                allowFontScaling={false}
                color={null}
                ellipsizeMode="tail"
                size="large"
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#333",
                      "fontSize": 17,
                      "lineHeight": 24,
                    },
                    Array [
                      Object {
                        "color": "rgba(51, 51, 51, 0.5)",
                      },
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                  ]
                }
                type="paragraph"
                weight={null}
              >
                1
              </Text>
              <View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                >
                  Action
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`List Component should render with Checkbox 1`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  contentContainerStyle={
    Array [
      Object {
        "backgroundColor": "#f8f8f8",
      },
      undefined,
    ]
  }
  data={
    Array [
      Object {
        "Action": "清扫成功",
        "checked": true,
        "key": 1,
        "onChange": [MockFunction],
        "renderItem": [Function],
        "subTitle": "清扫 0平方米 | 工作 5分钟",
        "theme": Object {
          "descFontColor": "#7ED321",
        },
        "title": "title_1",
      },
      Object {
        "Action": "清扫成功",
        "checked": true,
        "key": 2,
        "onChange": [MockFunction],
        "renderItem": [Function],
        "subTitle": "清扫 0平方米 | 工作 5分钟",
        "theme": Object {
          "descFontColor": "#7ED321",
        },
        "title": "title_2",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  showsVerticalScrollIndicator={false}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  useART={false}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          disabled={false}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                undefined,
              ],
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "marginRight": 20,
                },
                Object {
                  "alignSelf": "flex-start",
                  "marginTop": 4,
                },
              ]
            }
          >
            <View
              accessibilityLabel="Checkbox"
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "backgroundColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                      },
                      Object {
                        "height": 17,
                        "width": 17,
                      },
                      false,
                      Array [
                        Object {},
                        false,
                      ],
                    ]
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        undefined,
                        false,
                        Object {
                          "flex": 0,
                          "height": 17,
                          "width": 17,
                        },
                      ]
                    }
                    vbHeight={1024}
                    vbWidth={1024}
                  >
                    <RNSVGPath
                      d="M512 0c282.7776 0 512 229.2224 512 512s-229.2224 512-512 512S0 794.7776 0 512 229.2224 0 512 0z m279.04 362.8032a51.2 51.2 0 0 0-72.3968 0l-253.44 253.3888-108.6464-108.544a51.2 51.2 0 0 0-72.3968 72.3456l144.2304 144.1792 0.6144 0.6656a51.2 51.2 0 0 0 72.3968 0L791.04 435.2a51.2 51.2 0 0 0 0-72.3968z"
                      fill={
                        Array [
                          0,
                          0.2,
                          0.5333333333333333,
                          1,
                          1,
                        ]
                      }
                      fillOpacity={1}
                      fillRule={1}
                      matrix={
                        Array [
                          1,
                          0,
                          0,
                          1,
                          0,
                          0,
                        ]
                      }
                      opacity={1}
                      propList={
                        Array [
                          "stroke",
                          "strokeWidth",
                          "fill",
                        ]
                      }
                      stroke={
                        Array [
                          0,
                          0.2,
                          0.5333333333333333,
                          1,
                          1,
                        ]
                      }
                      strokeDasharray={null}
                      strokeDashoffset={null}
                      strokeLinecap={0}
                      strokeLinejoin={0}
                      strokeMiterlimit={4}
                      strokeOpacity={1}
                      strokeWidth={1}
                    />
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              align={null}
              allowFontScaling={false}
              color={null}
              ellipsizeMode="tail"
              size="small"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#333",
                    "fontSize": 17,
                    "lineHeight": 24,
                  },
                  Array [
                    Object {
                      "color": "#333",
                    },
                    Array [
                      undefined,
                      undefined,
                    ],
                  ],
                ]
              }
              type="title"
              weight={null}
            >
              title_1
            </Text>
            <Text
              accessible={true}
              align={null}
              allowFontScaling={false}
              color={null}
              ellipsizeMode="tail"
              size="large"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#333",
                    "fontSize": 17,
                    "lineHeight": 24,
                  },
                  Array [
                    Object {
                      "color": "rgba(51, 51, 51, 0.5)",
                      "marginTop": 4,
                    },
                    Array [
                      undefined,
                      undefined,
                    ],
                  ],
                ]
              }
              type="paragraph"
              weight={null}
            >
              清扫 0平方米 | 工作 5分钟
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "marginLeft": 20,
                "opacity": 1,
              }
            }
          >
            <Text
              accessible={true}
              align={null}
              allowFontScaling={false}
              color={null}
              ellipsizeMode="tail"
              size="large"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#333",
                    "fontSize": 17,
                    "lineHeight": 24,
                  },
                  Array [
                    Object {
                      "color": "rgba(51, 51, 51, 0.5)",
                    },
                    Array [
                      Object {
                        "color": "#7ED321",
                      },
                      undefined,
                    ],
                  ],
                ]
              }
              type="paragraph"
              weight={null}
            >
              清扫成功
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(51, 51, 51, 0.1)",
              "height": 0.5,
              "marginLeft": 32,
            },
            null,
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          disabled={false}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                undefined,
              ],
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "marginRight": 20,
                },
                Object {
                  "alignSelf": "flex-start",
                  "marginTop": 4,
                },
              ]
            }
          >
            <View
              accessibilityLabel="Checkbox"
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "backgroundColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                      },
                      Object {
                        "height": 17,
                        "width": 17,
                      },
                      false,
                      Array [
                        Object {},
                        false,
                      ],
                    ]
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        undefined,
                        false,
                        Object {
                          "flex": 0,
                          "height": 17,
                          "width": 17,
                        },
                      ]
                    }
                    vbHeight={1024}
                    vbWidth={1024}
                  >
                    <RNSVGPath
                      d="M512 0c282.7776 0 512 229.2224 512 512s-229.2224 512-512 512S0 794.7776 0 512 229.2224 0 512 0z m279.04 362.8032a51.2 51.2 0 0 0-72.3968 0l-253.44 253.3888-108.6464-108.544a51.2 51.2 0 0 0-72.3968 72.3456l144.2304 144.1792 0.6144 0.6656a51.2 51.2 0 0 0 72.3968 0L791.04 435.2a51.2 51.2 0 0 0 0-72.3968z"
                      fill={
                        Array [
                          0,
                          0.2,
                          0.5333333333333333,
                          1,
                          1,
                        ]
                      }
                      fillOpacity={1}
                      fillRule={1}
                      matrix={
                        Array [
                          1,
                          0,
                          0,
                          1,
                          0,
                          0,
                        ]
                      }
                      opacity={1}
                      propList={
                        Array [
                          "stroke",
                          "strokeWidth",
                          "fill",
                        ]
                      }
                      stroke={
                        Array [
                          0,
                          0.2,
                          0.5333333333333333,
                          1,
                          1,
                        ]
                      }
                      strokeDasharray={null}
                      strokeDashoffset={null}
                      strokeLinecap={0}
                      strokeLinejoin={0}
                      strokeMiterlimit={4}
                      strokeOpacity={1}
                      strokeWidth={1}
                    />
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              align={null}
              allowFontScaling={false}
              color={null}
              ellipsizeMode="tail"
              size="small"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#333",
                    "fontSize": 17,
                    "lineHeight": 24,
                  },
                  Array [
                    Object {
                      "color": "#333",
                    },
                    Array [
                      undefined,
                      undefined,
                    ],
                  ],
                ]
              }
              type="title"
              weight={null}
            >
              title_2
            </Text>
            <Text
              accessible={true}
              align={null}
              allowFontScaling={false}
              color={null}
              ellipsizeMode="tail"
              size="large"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#333",
                    "fontSize": 17,
                    "lineHeight": 24,
                  },
                  Array [
                    Object {
                      "color": "rgba(51, 51, 51, 0.5)",
                      "marginTop": 4,
                    },
                    Array [
                      undefined,
                      undefined,
                    ],
                  ],
                ]
              }
              type="paragraph"
              weight={null}
            >
              清扫 0平方米 | 工作 5分钟
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "marginLeft": 20,
                "opacity": 1,
              }
            }
          >
            <Text
              accessible={true}
              align={null}
              allowFontScaling={false}
              color={null}
              ellipsizeMode="tail"
              size="large"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#333",
                    "fontSize": 17,
                    "lineHeight": 24,
                  },
                  Array [
                    Object {
                      "color": "rgba(51, 51, 51, 0.5)",
                    },
                    Array [
                      Object {
                        "color": "#7ED321",
                      },
                      undefined,
                    ],
                  ],
                ]
              }
              type="paragraph"
              weight={null}
            >
              清扫成功
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`List Component should render with InputItem 1`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  contentContainerStyle={
    Array [
      Object {
        "backgroundColor": "#f8f8f8",
      },
      undefined,
    ]
  }
  data={
    Array [
      Object {
        "key": 0,
        "placeholder": "输入名字",
        "renderItem": [Function],
        "title": "名字",
        "value": "TUYA",
      },
      Object {
        "key": 0,
        "placeholder": "输入名字",
        "renderItem": [Function],
        "title": "名字",
        "value": "TUYA",
      },
      Object {
        "key": 0,
        "placeholder": "输入名字",
        "renderItem": [Function],
        "title": "名字",
        "value": "TUYA",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  showsVerticalScrollIndicator={false}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  useART={false}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "#fff",
              "flexDirection": "row",
              "height": 94,
              "justifyContent": "center",
              "paddingHorizontal": 24,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <Text
            accessible={true}
            align={null}
            allowFontScaling={false}
            color={null}
            ellipsizeMode="tail"
            size={14}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#333",
                  "fontSize": 14,
                },
                Array [
                  Object {
                    "color": "#999",
                    "fontSize": 14,
                  },
                  null,
                ],
              ]
            }
            type={null}
            weight={null}
          >
            名字
          </Text>
          <TextInput
            allowFontScaling={true}
            placeholder="输入名字"
            placeholderTextColor="#dbdbdb"
            renderItem={[Function]}
            style={
              Array [
                Object {
                  "alignSelf": "stretch",
                  "color": "#333",
                  "fontSize": 16,
                  "marginTop": 10,
                },
                Object {
                  "padding": null,
                },
                null,
              ]
            }
            underlineColorAndroid="transparent"
            value="TUYA"
          />
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#dbdbdb",
              "borderRadius": 3,
              "height": 6,
              "width": 6,
            }
          }
        />
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
                "backgroundColor": "#DBDBDB",
              },
              null,
              Object {
                "height": 0.5,
              },
            ]
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(51, 51, 51, 0.1)",
              "height": 0.5,
              "marginLeft": 32,
            },
            null,
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "#fff",
              "flexDirection": "row",
              "height": 94,
              "justifyContent": "center",
              "paddingHorizontal": 24,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <Text
            accessible={true}
            align={null}
            allowFontScaling={false}
            color={null}
            ellipsizeMode="tail"
            size={14}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#333",
                  "fontSize": 14,
                },
                Array [
                  Object {
                    "color": "#999",
                    "fontSize": 14,
                  },
                  null,
                ],
              ]
            }
            type={null}
            weight={null}
          >
            名字
          </Text>
          <TextInput
            allowFontScaling={true}
            placeholder="输入名字"
            placeholderTextColor="#dbdbdb"
            renderItem={[Function]}
            style={
              Array [
                Object {
                  "alignSelf": "stretch",
                  "color": "#333",
                  "fontSize": 16,
                  "marginTop": 10,
                },
                Object {
                  "padding": null,
                },
                null,
              ]
            }
            underlineColorAndroid="transparent"
            value="TUYA"
          />
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#dbdbdb",
              "borderRadius": 3,
              "height": 6,
              "width": 6,
            }
          }
        />
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
                "backgroundColor": "#DBDBDB",
              },
              null,
              Object {
                "height": 0.5,
              },
            ]
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(51, 51, 51, 0.1)",
              "height": 0.5,
              "marginLeft": 32,
            },
            null,
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "#fff",
              "flexDirection": "row",
              "height": 94,
              "justifyContent": "center",
              "paddingHorizontal": 24,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <Text
            accessible={true}
            align={null}
            allowFontScaling={false}
            color={null}
            ellipsizeMode="tail"
            size={14}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#333",
                  "fontSize": 14,
                },
                Array [
                  Object {
                    "color": "#999",
                    "fontSize": 14,
                  },
                  null,
                ],
              ]
            }
            type={null}
            weight={null}
          >
            名字
          </Text>
          <TextInput
            allowFontScaling={true}
            placeholder="输入名字"
            placeholderTextColor="#dbdbdb"
            renderItem={[Function]}
            style={
              Array [
                Object {
                  "alignSelf": "stretch",
                  "color": "#333",
                  "fontSize": 16,
                  "marginTop": 10,
                },
                Object {
                  "padding": null,
                },
                null,
              ]
            }
            underlineColorAndroid="transparent"
            value="TUYA"
          />
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#dbdbdb",
              "borderRadius": 3,
              "height": 6,
              "width": 6,
            }
          }
        />
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
                "backgroundColor": "#DBDBDB",
              },
              null,
              Object {
                "height": 0.5,
              },
            ]
          }
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`List Component should render with SliderItem 1`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  contentContainerStyle={
    Array [
      Object {
        "backgroundColor": "#f8f8f8",
      },
      undefined,
    ]
  }
  data={
    Array [
      Object {
        "Action": <View />,
        "Icon": Object {
          "uri": "https://tuya.com",
        },
        "actionType": "iconfont",
        "canTouchTrack": true,
        "key": "0",
        "maximumValue": 100,
        "minimumValue": 0,
        "onSlidingComplete": [MockFunction],
        "renderItem": [Function],
        "value": 40,
      },
      Object {
        "Action": "volume-sharp-max",
        "Icon": Array [],
        "actionType": "iconfont",
        "canTouchTrack": true,
        "key": "1",
        "maximumValue": 100,
        "minimumValue": 0,
        "onSlidingComplete": [MockFunction],
        "renderItem": [Function],
        "value": 40,
      },
      Object {
        "Action": "volume-sharp-max",
        "Icon": "volume-sharp-off",
        "actionType": "iconfont",
        "canTouchTrack": true,
        "key": "2",
        "maximumValue": 100,
        "minimumValue": 0,
        "onSlidingComplete": [MockFunction],
        "renderItem": [Function],
        "value": 40,
      },
      Object {
        "Action": "volume-sharp-max",
        "Icon": 2,
        "actionType": "iconfont",
        "canTouchTrack": true,
        "key": "3",
        "maximumValue": 100,
        "minimumValue": 0,
        "onSlidingComplete": [MockFunction],
        "renderItem": [Function],
        "value": 40,
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  showsVerticalScrollIndicator={false}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  useART={false}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                null,
              ],
            ]
          }
        >
          <View
            alignLeft={true}
            style={
              Array [
                Object {
                  "alignItems": "flex-start",
                  "width": 80,
                },
                undefined,
              ]
            }
          >
            <Image
              imageFollowIconColor={true}
              size={17}
              source={
                Object {
                  "uri": "https://tuya.com",
                }
              }
              style={
                Array [
                  Object {
                    "height": 17,
                    "width": 17,
                  },
                  Object {
                    "tintColor": "rgba(0, 0, 0, 0.2)",
                  },
                  undefined,
                ]
              }
            />
          </View>
          <View
            accessibilityLabel="Slider"
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "column",
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "column",
                  "height": 40,
                },
                Array [
                  Object {
                    "alignSelf": "stretch",
                    "flex": 1,
                  },
                  null,
                ],
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "#b3b3b3",
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 2,
                    "height": 4,
                  },
                  Object {
                    "borderRadius": undefined,
                    "height": undefined,
                  },
                ]
              }
            />
            <View
              style={
                Object {
                  "backgroundColor": "#3f3f3f",
                  "borderRadius": undefined,
                  "height": undefined,
                  "justifyContent": "center",
                  "opacity": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                }
              }
            />
            <View
              onLayout={[Function]}
              renderToHardwareTextureAndroid={true}
              style={
                Object {
                  "backgroundColor": "#343434",
                  "borderRadius": undefined,
                  "elevation": 2,
                  "height": undefined,
                  "opacity": 0,
                  "position": "absolute",
                  "shadowColor": "rgba(0,0,0,0.3)",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 2,
                  },
                  "shadowOpacity": 1,
                  "shadowRadius": 2,
                  "width": undefined,
                }
              }
            />
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {},
                ]
              }
            />
          </View>
          <View />
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(51, 51, 51, 0.1)",
              "height": 0.5,
              "marginLeft": 32,
            },
            null,
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                null,
              ],
            ]
          }
        >
          <View
            alignLeft={true}
            style={
              Array [
                Object {
                  "alignItems": "flex-start",
                  "width": 80,
                },
                undefined,
              ]
            }
          />
          <View
            accessibilityLabel="Slider"
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "column",
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "column",
                  "height": 40,
                },
                Array [
                  Object {
                    "alignSelf": "stretch",
                    "flex": 1,
                  },
                  null,
                ],
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "#b3b3b3",
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 2,
                    "height": 4,
                  },
                  Object {
                    "borderRadius": undefined,
                    "height": undefined,
                  },
                ]
              }
            />
            <View
              style={
                Object {
                  "backgroundColor": "#3f3f3f",
                  "borderRadius": undefined,
                  "height": undefined,
                  "justifyContent": "center",
                  "opacity": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                }
              }
            />
            <View
              onLayout={[Function]}
              renderToHardwareTextureAndroid={true}
              style={
                Object {
                  "backgroundColor": "#343434",
                  "borderRadius": undefined,
                  "elevation": 2,
                  "height": undefined,
                  "opacity": 0,
                  "position": "absolute",
                  "shadowColor": "rgba(0,0,0,0.3)",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 2,
                  },
                  "shadowOpacity": 1,
                  "shadowRadius": 2,
                  "width": undefined,
                }
              }
            />
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {},
                ]
              }
            />
          </View>
          <View
            alignLeft={false}
            style={
              Array [
                Object {
                  "alignItems": "flex-end",
                  "width": 80,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  Object {
                    "height": 17,
                    "width": 17,
                  },
                  false,
                  null,
                ]
              }
            >
              <RNSVGSvgView
                align="xMidYMid"
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    undefined,
                    false,
                    Object {
                      "flex": 0,
                      "height": 17,
                      "width": 17,
                    },
                  ]
                }
                vbHeight={1024}
                vbWidth={1024}
              >
                <RNSVGPath
                  d="M521.570462 42.062769a39.384615 39.384615 0 0 1 63.566769 31.113846v877.686154a39.384615 39.384615 0 0 1-63.566769 31.113846l-293.218462-228.076307h-155.175385a39.384615 39.384615 0 0 1-39.148307-34.776616l-0.275693-4.568615V309.444923a39.384615 39.384615 0 0 1 39.384616-39.384615h155.214769z m340.676923 172.032A409.6 409.6 0 0 1 990.286769 512a409.6 409.6 0 0 1-128.827077 298.692923 39.384615 39.384615 0 1 1-54.075077-57.265231A330.830769 330.830769 0 0 0 911.478154 512a330.830769 330.830769 0 0 0-103.424-240.758154 39.384615 39.384615 0 0 1 54.232615-57.107692zM708.135385 348.317538A207.832615 207.832615 0 0 1 787.692308 512a207.950769 207.950769 0 0 1-87.158154 169.393231 39.384615 39.384615 0 0 1-45.843692-64.039385A129.181538 129.181538 0 0 0 708.923077 512a129.102769 129.102769 0 0 0-49.467077-101.769846 39.384615 39.384615 0 1 1 48.679385-61.912616z"
                  fill={
                    Array [
                      0,
                      0,
                      0,
                      0,
                      0.2,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                      "strokeWidth",
                      "fill",
                    ]
                  }
                  stroke={
                    Array [
                      0,
                      0,
                      0,
                      0,
                      0.2,
                    ]
                  }
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={1}
                />
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(51, 51, 51, 0.1)",
              "height": 0.5,
              "marginLeft": 32,
            },
            null,
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                null,
              ],
            ]
          }
        >
          <View
            alignLeft={true}
            style={
              Array [
                Object {
                  "alignItems": "flex-start",
                  "width": 80,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  Object {
                    "height": 17,
                    "width": 17,
                  },
                  false,
                  null,
                ]
              }
            >
              <RNSVGSvgView
                align="xMidYMid"
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    undefined,
                    false,
                    Object {
                      "flex": 0,
                      "height": 17,
                      "width": 17,
                    },
                  ]
                }
                vbHeight={1024}
                vbWidth={1024}
              >
                <RNSVGPath
                  d="M541.262769 42.062769a39.384615 39.384615 0 0 1 63.330462 26.702769l0.236307 4.371693v877.725538a39.384615 39.384615 0 0 1-59.943384 33.595077l-3.623385-2.520615-293.218461-228.036923h-155.175385a39.384615 39.384615 0 0 1-38.360615-30.326154l-0.787693-4.450462-0.275692-4.568615V309.444923a39.384615 39.384615 0 0 1 34.816-39.108923l4.568615-0.275692h155.21477l293.218461-228.036923z m225.240616 199.561846l67.623384 167.463385 70.577231-166.242462a39.384615 39.384615 0 1 1 72.507077 30.759385l-101.376 238.788923 97.201231 240.482462a39.384615 39.384615 0 0 1-73.019077 29.499077l-67.702154-167.463385-70.498462 166.242462A39.384615 39.384615 0 1 1 689.230769 750.395077l101.336616-238.788923-97.161847-240.482462a39.384615 39.384615 0 0 1 73.058462-29.499077z"
                  fill={
                    Array [
                      0,
                      0,
                      0,
                      0,
                      0.2,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                      "strokeWidth",
                      "fill",
                    ]
                  }
                  stroke={
                    Array [
                      0,
                      0,
                      0,
                      0,
                      0.2,
                    ]
                  }
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={1}
                />
              </RNSVGSvgView>
            </View>
          </View>
          <View
            accessibilityLabel="Slider"
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "column",
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "column",
                  "height": 40,
                },
                Array [
                  Object {
                    "alignSelf": "stretch",
                    "flex": 1,
                  },
                  null,
                ],
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "#b3b3b3",
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 2,
                    "height": 4,
                  },
                  Object {
                    "borderRadius": undefined,
                    "height": undefined,
                  },
                ]
              }
            />
            <View
              style={
                Object {
                  "backgroundColor": "#3f3f3f",
                  "borderRadius": undefined,
                  "height": undefined,
                  "justifyContent": "center",
                  "opacity": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                }
              }
            />
            <View
              onLayout={[Function]}
              renderToHardwareTextureAndroid={true}
              style={
                Object {
                  "backgroundColor": "#343434",
                  "borderRadius": undefined,
                  "elevation": 2,
                  "height": undefined,
                  "opacity": 0,
                  "position": "absolute",
                  "shadowColor": "rgba(0,0,0,0.3)",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 2,
                  },
                  "shadowOpacity": 1,
                  "shadowRadius": 2,
                  "width": undefined,
                }
              }
            />
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {},
                ]
              }
            />
          </View>
          <View
            alignLeft={false}
            style={
              Array [
                Object {
                  "alignItems": "flex-end",
                  "width": 80,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  Object {
                    "height": 17,
                    "width": 17,
                  },
                  false,
                  null,
                ]
              }
            >
              <RNSVGSvgView
                align="xMidYMid"
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    undefined,
                    false,
                    Object {
                      "flex": 0,
                      "height": 17,
                      "width": 17,
                    },
                  ]
                }
                vbHeight={1024}
                vbWidth={1024}
              >
                <RNSVGPath
                  d="M521.570462 42.062769a39.384615 39.384615 0 0 1 63.566769 31.113846v877.686154a39.384615 39.384615 0 0 1-63.566769 31.113846l-293.218462-228.076307h-155.175385a39.384615 39.384615 0 0 1-39.148307-34.776616l-0.275693-4.568615V309.444923a39.384615 39.384615 0 0 1 39.384616-39.384615h155.214769z m340.676923 172.032A409.6 409.6 0 0 1 990.286769 512a409.6 409.6 0 0 1-128.827077 298.692923 39.384615 39.384615 0 1 1-54.075077-57.265231A330.830769 330.830769 0 0 0 911.478154 512a330.830769 330.830769 0 0 0-103.424-240.758154 39.384615 39.384615 0 0 1 54.232615-57.107692zM708.135385 348.317538A207.832615 207.832615 0 0 1 787.692308 512a207.950769 207.950769 0 0 1-87.158154 169.393231 39.384615 39.384615 0 0 1-45.843692-64.039385A129.181538 129.181538 0 0 0 708.923077 512a129.102769 129.102769 0 0 0-49.467077-101.769846 39.384615 39.384615 0 1 1 48.679385-61.912616z"
                  fill={
                    Array [
                      0,
                      0,
                      0,
                      0,
                      0.2,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                      "strokeWidth",
                      "fill",
                    ]
                  }
                  stroke={
                    Array [
                      0,
                      0,
                      0,
                      0,
                      0.2,
                    ]
                  }
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={1}
                />
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(51, 51, 51, 0.1)",
              "height": 0.5,
              "marginLeft": 32,
            },
            null,
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                null,
              ],
            ]
          }
        >
          <View
            alignLeft={true}
            style={
              Array [
                Object {
                  "alignItems": "flex-start",
                  "width": 80,
                },
                undefined,
              ]
            }
          >
            <Image
              imageFollowIconColor={true}
              size={17}
              source={2}
              style={
                Array [
                  Object {
                    "height": 17,
                    "width": 17,
                  },
                  Object {
                    "tintColor": "rgba(0, 0, 0, 0.2)",
                  },
                  undefined,
                ]
              }
            />
          </View>
          <View
            accessibilityLabel="Slider"
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "column",
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "column",
                  "height": 40,
                },
                Array [
                  Object {
                    "alignSelf": "stretch",
                    "flex": 1,
                  },
                  null,
                ],
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "#b3b3b3",
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 2,
                    "height": 4,
                  },
                  Object {
                    "borderRadius": undefined,
                    "height": undefined,
                  },
                ]
              }
            />
            <View
              style={
                Object {
                  "backgroundColor": "#3f3f3f",
                  "borderRadius": undefined,
                  "height": undefined,
                  "justifyContent": "center",
                  "opacity": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                }
              }
            />
            <View
              onLayout={[Function]}
              renderToHardwareTextureAndroid={true}
              style={
                Object {
                  "backgroundColor": "#343434",
                  "borderRadius": undefined,
                  "elevation": 2,
                  "height": undefined,
                  "opacity": 0,
                  "position": "absolute",
                  "shadowColor": "rgba(0,0,0,0.3)",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 2,
                  },
                  "shadowOpacity": 1,
                  "shadowRadius": 2,
                  "width": undefined,
                }
              }
            />
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {},
                ]
              }
            />
          </View>
          <View
            alignLeft={false}
            style={
              Array [
                Object {
                  "alignItems": "flex-end",
                  "width": 80,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  Object {
                    "height": 17,
                    "width": 17,
                  },
                  false,
                  null,
                ]
              }
            >
              <RNSVGSvgView
                align="xMidYMid"
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    undefined,
                    false,
                    Object {
                      "flex": 0,
                      "height": 17,
                      "width": 17,
                    },
                  ]
                }
                vbHeight={1024}
                vbWidth={1024}
              >
                <RNSVGPath
                  d="M521.570462 42.062769a39.384615 39.384615 0 0 1 63.566769 31.113846v877.686154a39.384615 39.384615 0 0 1-63.566769 31.113846l-293.218462-228.076307h-155.175385a39.384615 39.384615 0 0 1-39.148307-34.776616l-0.275693-4.568615V309.444923a39.384615 39.384615 0 0 1 39.384616-39.384615h155.214769z m340.676923 172.032A409.6 409.6 0 0 1 990.286769 512a409.6 409.6 0 0 1-128.827077 298.692923 39.384615 39.384615 0 1 1-54.075077-57.265231A330.830769 330.830769 0 0 0 911.478154 512a330.830769 330.830769 0 0 0-103.424-240.758154 39.384615 39.384615 0 0 1 54.232615-57.107692zM708.135385 348.317538A207.832615 207.832615 0 0 1 787.692308 512a207.950769 207.950769 0 0 1-87.158154 169.393231 39.384615 39.384615 0 0 1-45.843692-64.039385A129.181538 129.181538 0 0 0 708.923077 512a129.102769 129.102769 0 0 0-49.467077-101.769846 39.384615 39.384615 0 1 1 48.679385-61.912616z"
                  fill={
                    Array [
                      0,
                      0,
                      0,
                      0,
                      0.2,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                      "strokeWidth",
                      "fill",
                    ]
                  }
                  stroke={
                    Array [
                      0,
                      0,
                      0,
                      0,
                      0.2,
                    ]
                  }
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={1}
                />
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`List Component should render with SliderItem 2`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  contentContainerStyle={
    Array [
      Object {
        "backgroundColor": "#f8f8f8",
      },
      undefined,
    ]
  }
  data={
    Array [
      Object {
        "Action": 4,
        "Icon": [Function],
        "actionType": "text",
        "canTouchTrack": true,
        "key": 1,
        "maximumValue": 100,
        "minimumValue": 0,
        "onSlidingComplete": [MockFunction],
        "renderItem": [Function],
        "value": 40,
      },
      Object {
        "Action": 4,
        "Icon": [Function],
        "actionType": "text",
        "canTouchTrack": true,
        "key": 2,
        "maximumValue": 100,
        "minimumValue": 0,
        "onSlidingComplete": [MockFunction],
        "renderItem": [Function],
        "value": 40,
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  showsVerticalScrollIndicator={false}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  useART={false}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                null,
              ],
            ]
          }
        >
          <View
            alignLeft={true}
            style={
              Array [
                Object {
                  "alignItems": "flex-start",
                  "width": 80,
                },
                undefined,
              ]
            }
          >
            <Image
              source={1}
            />
          </View>
          <View
            accessibilityLabel="Slider"
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "column",
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "column",
                  "height": 40,
                },
                Array [
                  Object {
                    "alignSelf": "stretch",
                    "flex": 1,
                  },
                  null,
                ],
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "#b3b3b3",
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 2,
                    "height": 4,
                  },
                  Object {
                    "borderRadius": undefined,
                    "height": undefined,
                  },
                ]
              }
            />
            <View
              style={
                Object {
                  "backgroundColor": "#3f3f3f",
                  "borderRadius": undefined,
                  "height": undefined,
                  "justifyContent": "center",
                  "opacity": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                }
              }
            />
            <View
              onLayout={[Function]}
              renderToHardwareTextureAndroid={true}
              style={
                Object {
                  "backgroundColor": "#343434",
                  "borderRadius": undefined,
                  "elevation": 2,
                  "height": undefined,
                  "opacity": 0,
                  "position": "absolute",
                  "shadowColor": "rgba(0,0,0,0.3)",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 2,
                  },
                  "shadowOpacity": 1,
                  "shadowRadius": 2,
                  "width": undefined,
                }
              }
            />
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {},
                ]
              }
            />
          </View>
          <View
            alignLeft={false}
            style={
              Array [
                Object {
                  "alignItems": "flex-end",
                  "width": 80,
                },
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              align={null}
              allowFontScaling={false}
              color={null}
              ellipsizeMode="tail"
              size="large"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#333",
                    "fontSize": 17,
                    "lineHeight": 24,
                  },
                  Array [
                    Object {
                      "color": "rgba(51, 51, 51, 0.5)",
                    },
                    Array [
                      undefined,
                      null,
                    ],
                  ],
                ]
              }
              type="paragraph"
              weight={null}
            >
              4
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(51, 51, 51, 0.1)",
              "height": 0.5,
              "marginLeft": 32,
            },
            null,
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                null,
              ],
            ]
          }
        >
          <View
            alignLeft={true}
            style={
              Array [
                Object {
                  "alignItems": "flex-start",
                  "width": 80,
                },
                undefined,
              ]
            }
          >
            <Image
              source={1}
            />
          </View>
          <View
            accessibilityLabel="Slider"
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "column",
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "column",
                  "height": 40,
                },
                Array [
                  Object {
                    "alignSelf": "stretch",
                    "flex": 1,
                  },
                  null,
                ],
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "#b3b3b3",
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 2,
                    "height": 4,
                  },
                  Object {
                    "borderRadius": undefined,
                    "height": undefined,
                  },
                ]
              }
            />
            <View
              style={
                Object {
                  "backgroundColor": "#3f3f3f",
                  "borderRadius": undefined,
                  "height": undefined,
                  "justifyContent": "center",
                  "opacity": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                }
              }
            />
            <View
              onLayout={[Function]}
              renderToHardwareTextureAndroid={true}
              style={
                Object {
                  "backgroundColor": "#343434",
                  "borderRadius": undefined,
                  "elevation": 2,
                  "height": undefined,
                  "opacity": 0,
                  "position": "absolute",
                  "shadowColor": "rgba(0,0,0,0.3)",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 2,
                  },
                  "shadowOpacity": 1,
                  "shadowRadius": 2,
                  "width": undefined,
                }
              }
            />
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {},
                ]
              }
            />
          </View>
          <View
            alignLeft={false}
            style={
              Array [
                Object {
                  "alignItems": "flex-end",
                  "width": 80,
                },
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              align={null}
              allowFontScaling={false}
              color={null}
              ellipsizeMode="tail"
              size="large"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#333",
                    "fontSize": 17,
                    "lineHeight": 24,
                  },
                  Array [
                    Object {
                      "color": "rgba(51, 51, 51, 0.5)",
                    },
                    Array [
                      undefined,
                      null,
                    ],
                  ],
                ]
              }
              type="paragraph"
              weight={null}
            >
              4
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`List Component should render with SliderItem 3`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  contentContainerStyle={
    Array [
      Object {
        "backgroundColor": "#f8f8f8",
      },
      undefined,
    ]
  }
  data={
    Array [
      Object {
        "Action": Object {
          "uri": "../../color-picker/color-picker.png",
        },
        "Icon": false,
        "actionType": "image",
        "canTouchTrack": true,
        "key": 1,
        "maximumValue": 100,
        "minimumValue": 0,
        "onSlidingComplete": [MockFunction],
        "renderItem": [Function],
        "value": 40,
      },
      Object {
        "Action": Object {
          "uri": "../../color-picker/color-picker.png",
        },
        "Icon": false,
        "actionType": "image",
        "canTouchTrack": true,
        "key": 2,
        "maximumValue": 100,
        "minimumValue": 0,
        "onSlidingComplete": [MockFunction],
        "renderItem": [Function],
        "value": 40,
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  showsVerticalScrollIndicator={false}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  useART={false}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                null,
              ],
            ]
          }
        >
          <View
            accessibilityLabel="Slider"
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "column",
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "column",
                  "height": 40,
                },
                Array [
                  Object {
                    "alignSelf": "stretch",
                    "flex": 1,
                  },
                  null,
                ],
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "#b3b3b3",
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 2,
                    "height": 4,
                  },
                  Object {
                    "borderRadius": undefined,
                    "height": undefined,
                  },
                ]
              }
            />
            <View
              style={
                Object {
                  "backgroundColor": "#3f3f3f",
                  "borderRadius": undefined,
                  "height": undefined,
                  "justifyContent": "center",
                  "opacity": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                }
              }
            />
            <View
              onLayout={[Function]}
              renderToHardwareTextureAndroid={true}
              style={
                Object {
                  "backgroundColor": "#343434",
                  "borderRadius": undefined,
                  "elevation": 2,
                  "height": undefined,
                  "opacity": 0,
                  "position": "absolute",
                  "shadowColor": "rgba(0,0,0,0.3)",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 2,
                  },
                  "shadowOpacity": 1,
                  "shadowRadius": 2,
                  "width": undefined,
                }
              }
            />
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {},
                ]
              }
            />
          </View>
          <View
            alignLeft={false}
            style={
              Array [
                Object {
                  "alignItems": "flex-end",
                  "width": 80,
                },
                undefined,
              ]
            }
          >
            <Image
              imageFollowIconColor={true}
              size={17}
              source={
                Object {
                  "uri": "../../color-picker/color-picker.png",
                }
              }
              style={
                Array [
                  Object {
                    "height": 17,
                    "width": 17,
                  },
                  Object {
                    "tintColor": "rgba(0, 0, 0, 0.2)",
                  },
                  undefined,
                ]
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(51, 51, 51, 0.1)",
              "height": 0.5,
              "marginLeft": 32,
            },
            null,
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                null,
              ],
            ]
          }
        >
          <View
            accessibilityLabel="Slider"
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "column",
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "column",
                  "height": 40,
                },
                Array [
                  Object {
                    "alignSelf": "stretch",
                    "flex": 1,
                  },
                  null,
                ],
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "#b3b3b3",
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 2,
                    "height": 4,
                  },
                  Object {
                    "borderRadius": undefined,
                    "height": undefined,
                  },
                ]
              }
            />
            <View
              style={
                Object {
                  "backgroundColor": "#3f3f3f",
                  "borderRadius": undefined,
                  "height": undefined,
                  "justifyContent": "center",
                  "opacity": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                }
              }
            />
            <View
              onLayout={[Function]}
              renderToHardwareTextureAndroid={true}
              style={
                Object {
                  "backgroundColor": "#343434",
                  "borderRadius": undefined,
                  "elevation": 2,
                  "height": undefined,
                  "opacity": 0,
                  "position": "absolute",
                  "shadowColor": "rgba(0,0,0,0.3)",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 2,
                  },
                  "shadowOpacity": 1,
                  "shadowRadius": 2,
                  "width": undefined,
                }
              }
            />
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {},
                ]
              }
            />
          </View>
          <View
            alignLeft={false}
            style={
              Array [
                Object {
                  "alignItems": "flex-end",
                  "width": 80,
                },
                undefined,
              ]
            }
          >
            <Image
              imageFollowIconColor={true}
              size={17}
              source={
                Object {
                  "uri": "../../color-picker/color-picker.png",
                }
              }
              style={
                Array [
                  Object {
                    "height": 17,
                    "width": 17,
                  },
                  Object {
                    "tintColor": "rgba(0, 0, 0, 0.2)",
                  },
                  undefined,
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`List Component should render with SwitchButton 1`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  contentContainerStyle={
    Array [
      Object {
        "backgroundColor": "#f8f8f8",
      },
      undefined,
    ]
  }
  data={
    Array [
      Object {
        "key": 1,
        "title": "title_1",
        "value": true,
      },
      Object {
        "key": 2,
        "title": "title_2",
        "value": true,
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  showsVerticalScrollIndicator={false}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  useART={false}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          disabled={false}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                undefined,
              ],
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              align={null}
              allowFontScaling={false}
              color={null}
              ellipsizeMode="tail"
              size="small"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#333",
                    "fontSize": 17,
                    "lineHeight": 24,
                  },
                  Array [
                    Object {
                      "color": "#333",
                    },
                    Array [
                      undefined,
                      undefined,
                    ],
                  ],
                ]
              }
              type="title"
              weight={null}
            >
              title_1
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "marginLeft": 20,
                "opacity": 1,
              }
            }
          >
            <View
              needsOffscreenAlphaCompositing={true}
              style={
                Array [
                  undefined,
                  false,
                ]
              }
            >
              <View
                accessibilityLabel="SwitchButton"
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "height": NaN,
                    "justifyContent": "center",
                    "opacity": 1,
                    "width": NaN,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "borderRadius": NaN,
                        "height": undefined,
                        "justifyContent": "center",
                        "width": undefined,
                      },
                      Object {
                        "backgroundColor": "#44DB5E",
                        "borderColor": "#44DB5E",
                      },
                    ]
                  }
                />
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-start",
                      "backgroundColor": "#fff",
                      "borderRadius": NaN,
                      "elevation": 2,
                      "height": undefined,
                      "justifyContent": "center",
                      "position": "absolute",
                      "shadowColor": "rgba(0, 0, 0, 0.3)",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 3,
                      "transform": Array [
                        Object {
                          "translateX": NaN,
                        },
                      ],
                      "width": undefined,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(51, 51, 51, 0.1)",
              "height": 0.5,
              "marginLeft": 32,
            },
            null,
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          disabled={false}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                undefined,
              ],
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              align={null}
              allowFontScaling={false}
              color={null}
              ellipsizeMode="tail"
              size="small"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#333",
                    "fontSize": 17,
                    "lineHeight": 24,
                  },
                  Array [
                    Object {
                      "color": "#333",
                    },
                    Array [
                      undefined,
                      undefined,
                    ],
                  ],
                ]
              }
              type="title"
              weight={null}
            >
              title_2
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "marginLeft": 20,
                "opacity": 1,
              }
            }
          >
            <View
              needsOffscreenAlphaCompositing={true}
              style={
                Array [
                  undefined,
                  false,
                ]
              }
            >
              <View
                accessibilityLabel="SwitchButton"
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "height": NaN,
                    "justifyContent": "center",
                    "opacity": 1,
                    "width": NaN,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "borderRadius": NaN,
                        "height": undefined,
                        "justifyContent": "center",
                        "width": undefined,
                      },
                      Object {
                        "backgroundColor": "#44DB5E",
                        "borderColor": "#44DB5E",
                      },
                    ]
                  }
                />
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-start",
                      "backgroundColor": "#fff",
                      "borderRadius": NaN,
                      "elevation": 2,
                      "height": undefined,
                      "justifyContent": "center",
                      "position": "absolute",
                      "shadowColor": "rgba(0, 0, 0, 0.3)",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 3,
                      "transform": Array [
                        Object {
                          "translateX": NaN,
                        },
                      ],
                      "width": undefined,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`List Component should render with custom item 1`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  contentContainerStyle={
    Array [
      Object {
        "backgroundColor": "#f8f8f8",
      },
      undefined,
    ]
  }
  data={
    Array [
      Object {
        "key": 1,
        "renderItem": null,
        "title": "title_1",
        "value": true,
      },
      Object {
        "key": 2,
        "renderItem": null,
        "title": "title_2",
        "value": true,
      },
      Object {
        "key": 3,
        "renderItem": [Function],
        "title": "title_3",
        "value": true,
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  showsVerticalScrollIndicator={false}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  useART={false}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          disabled={false}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                undefined,
              ],
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              align={null}
              allowFontScaling={false}
              color={null}
              ellipsizeMode="tail"
              size="small"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#333",
                    "fontSize": 17,
                    "lineHeight": 24,
                  },
                  Array [
                    Object {
                      "color": "#333",
                    },
                    Array [
                      undefined,
                      undefined,
                    ],
                  ],
                ]
              }
              type="title"
              weight={null}
            >
              title_1
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "marginLeft": 20,
                "opacity": 1,
              }
            }
          >
            <View
              needsOffscreenAlphaCompositing={true}
              style={
                Array [
                  undefined,
                  false,
                ]
              }
            >
              <View
                accessibilityLabel="SwitchButton"
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "height": NaN,
                    "justifyContent": "center",
                    "opacity": 1,
                    "width": NaN,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "borderRadius": NaN,
                        "height": undefined,
                        "justifyContent": "center",
                        "width": undefined,
                      },
                      Object {
                        "backgroundColor": "#44DB5E",
                        "borderColor": "#44DB5E",
                      },
                    ]
                  }
                />
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-start",
                      "backgroundColor": "#fff",
                      "borderRadius": NaN,
                      "elevation": 2,
                      "height": undefined,
                      "justifyContent": "center",
                      "position": "absolute",
                      "shadowColor": "rgba(0, 0, 0, 0.3)",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 3,
                      "transform": Array [
                        Object {
                          "translateX": NaN,
                        },
                      ],
                      "width": undefined,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(51, 51, 51, 0.1)",
              "height": 0.5,
              "marginLeft": 32,
            },
            null,
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRadius": 0,
            "flexGrow": 0,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "minHeight": 48,
            "opacity": 1,
          }
        }
      >
        <View
          disabled={false}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 0,
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 12,
                "paddingLeft": 28,
                "paddingRight": 28,
                "paddingTop": 12,
              },
              Array [
                false,
                undefined,
                undefined,
              ],
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              align={null}
              allowFontScaling={false}
              color={null}
              ellipsizeMode="tail"
              size="small"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#333",
                    "fontSize": 17,
                    "lineHeight": 24,
                  },
                  Array [
                    Object {
                      "color": "#333",
                    },
                    Array [
                      undefined,
                      undefined,
                    ],
                  ],
                ]
              }
              type="title"
              weight={null}
            >
              title_2
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "marginLeft": 20,
                "opacity": 1,
              }
            }
          >
            <View
              needsOffscreenAlphaCompositing={true}
              style={
                Array [
                  undefined,
                  false,
                ]
              }
            >
              <View
                accessibilityLabel="SwitchButton"
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "height": NaN,
                    "justifyContent": "center",
                    "opacity": 1,
                    "width": NaN,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "borderRadius": NaN,
                        "height": undefined,
                        "justifyContent": "center",
                        "width": undefined,
                      },
                      Object {
                        "backgroundColor": "#44DB5E",
                        "borderColor": "#44DB5E",
                      },
                    ]
                  }
                />
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-start",
                      "backgroundColor": "#fff",
                      "borderRadius": NaN,
                      "elevation": 2,
                      "height": undefined,
                      "justifyContent": "center",
                      "position": "absolute",
                      "shadowColor": "rgba(0, 0, 0, 0.3)",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 3,
                      "transform": Array [
                        Object {
                          "translateX": NaN,
                        },
                      ],
                      "width": undefined,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(51, 51, 51, 0.1)",
              "height": 0.5,
              "marginLeft": 32,
            },
            null,
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          custom item
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`TYList basic render 1`] = `
<TYFlatList
  data={
    Array [
      Object {
        "Action": "清扫成功",
        "checked": true,
        "key": 1,
        "onChange": [MockFunction],
        "renderItem": [Function],
        "subTitle": "清扫 0平方米 | 工作 5分钟",
        "theme": Object {
          "descFontColor": "#7ED321",
        },
        "title": "title_1",
        "value": 1,
      },
      Object {
        "Action": "清扫成功",
        "checked": true,
        "key": 2,
        "onChange": [MockFunction],
        "renderItem": [Function],
        "subTitle": "清扫 0平方米 | 工作 5分钟",
        "theme": Object {
          "descFontColor": "#7ED321",
        },
        "title": "title_2",
        "value": 1,
      },
    ]
  }
  flatListRef={null}
  separatorStyle={null}
  useART={false}
>
  <WithTheme(ThemeConsumer)>
    <ThemeConsumer
      theme={null}
    >
      <FlatList
        ItemSeparatorComponent={[Function]}
        contentContainerStyle={
          Array [
            Object {
              "backgroundColor": "#f8f8f8",
            },
            undefined,
          ]
        }
        data={
          Array [
            Object {
              "Action": "清扫成功",
              "checked": true,
              "key": 1,
              "onChange": [MockFunction],
              "renderItem": [Function],
              "subTitle": "清扫 0平方米 | 工作 5分钟",
              "theme": Object {
                "descFontColor": "#7ED321",
              },
              "title": "title_1",
              "value": 1,
            },
            Object {
              "Action": "清扫成功",
              "checked": true,
              "key": 2,
              "onChange": [MockFunction],
              "renderItem": [Function],
              "subTitle": "清扫 0平方米 | 工作 5分钟",
              "theme": Object {
                "descFontColor": "#7ED321",
              },
              "title": "title_2",
              "value": 1,
            },
          ]
        }
        disableVirtualization={false}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        renderItem={[Function]}
        scrollEventThrottle={50}
        showsVerticalScrollIndicator={false}
        updateCellsBatchingPeriod={50}
        useART={false}
        windowSize={21}
      >
        <VirtualizedList
          ItemSeparatorComponent={[Function]}
          contentContainerStyle={
            Array [
              Object {
                "backgroundColor": "#f8f8f8",
              },
              undefined,
            ]
          }
          data={
            Array [
              Object {
                "Action": "清扫成功",
                "checked": true,
                "key": 1,
                "onChange": [MockFunction],
                "renderItem": [Function],
                "subTitle": "清扫 0平方米 | 工作 5分钟",
                "theme": Object {
                  "descFontColor": "#7ED321",
                },
                "title": "title_1",
                "value": 1,
              },
              Object {
                "Action": "清扫成功",
                "checked": true,
                "key": 2,
                "onChange": [MockFunction],
                "renderItem": [Function],
                "subTitle": "清扫 0平方米 | 工作 5分钟",
                "theme": Object {
                  "descFontColor": "#7ED321",
                },
                "title": "title_2",
                "value": 1,
              },
            ]
          }
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onEndReachedThreshold={2}
          renderItem={[Function]}
          scrollEventThrottle={50}
          showsVerticalScrollIndicator={false}
          updateCellsBatchingPeriod={50}
          useART={false}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <ScrollViewMock
            ItemSeparatorComponent={[Function]}
            contentContainerStyle={
              Array [
                Object {
                  "backgroundColor": "#f8f8f8",
                },
                undefined,
              ]
            }
            data={
              Array [
                Object {
                  "Action": "清扫成功",
                  "checked": true,
                  "key": 1,
                  "onChange": [MockFunction],
                  "renderItem": [Function],
                  "subTitle": "清扫 0平方米 | 工作 5分钟",
                  "theme": Object {
                    "descFontColor": "#7ED321",
                  },
                  "title": "title_1",
                  "value": 1,
                },
                Object {
                  "Action": "清扫成功",
                  "checked": true,
                  "key": 2,
                  "onChange": [MockFunction],
                  "renderItem": [Function],
                  "subTitle": "清扫 0平方米 | 工作 5分钟",
                  "theme": Object {
                    "descFontColor": "#7ED321",
                  },
                  "title": "title_2",
                  "value": 1,
                },
              ]
            }
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            renderItem={[Function]}
            scrollEventThrottle={50}
            showsVerticalScrollIndicator={false}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            useART={false}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <_class
              ItemSeparatorComponent={[Function]}
              contentContainerStyle={
                Array [
                  Object {
                    "backgroundColor": "#f8f8f8",
                  },
                  undefined,
                ]
              }
              data={
                Array [
                  Object {
                    "Action": "清扫成功",
                    "checked": true,
                    "key": 1,
                    "onChange": [MockFunction],
                    "renderItem": [Function],
                    "subTitle": "清扫 0平方米 | 工作 5分钟",
                    "theme": Object {
                      "descFontColor": "#7ED321",
                    },
                    "title": "title_1",
                    "value": 1,
                  },
                  Object {
                    "Action": "清扫成功",
                    "checked": true,
                    "key": 2,
                    "onChange": [MockFunction],
                    "renderItem": [Function],
                    "subTitle": "清扫 0平方米 | 工作 5分钟",
                    "theme": Object {
                      "descFontColor": "#7ED321",
                    },
                    "title": "title_2",
                    "value": 1,
                  },
                ]
              }
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              numColumns={1}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={2}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              renderItem={[Function]}
              scrollEventThrottle={50}
              showsVerticalScrollIndicator={false}
              stickyHeaderIndices={Array []}
              updateCellsBatchingPeriod={50}
              useART={false}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <RCTScrollView
                ItemSeparatorComponent={[Function]}
                contentContainerStyle={
                  Array [
                    Object {
                      "backgroundColor": "#f8f8f8",
                    },
                    undefined,
                  ]
                }
                data={
                  Array [
                    Object {
                      "Action": "清扫成功",
                      "checked": true,
                      "key": 1,
                      "onChange": [MockFunction],
                      "renderItem": [Function],
                      "subTitle": "清扫 0平方米 | 工作 5分钟",
                      "theme": Object {
                        "descFontColor": "#7ED321",
                      },
                      "title": "title_1",
                      "value": 1,
                    },
                    Object {
                      "Action": "清扫成功",
                      "checked": true,
                      "key": 2,
                      "onChange": [MockFunction],
                      "renderItem": [Function],
                      "subTitle": "清扫 0平方米 | 工作 5分钟",
                      "theme": Object {
                        "descFontColor": "#7ED321",
                      },
                      "title": "title_2",
                      "value": 1,
                    },
                  ]
                }
                disableVirtualization={false}
                getItem={[Function]}
                getItemCount={[Function]}
                horizontal={false}
                initialNumToRender={10}
                keyExtractor={[Function]}
                maxToRenderPerBatch={10}
                numColumns={1}
                onContentSizeChange={[Function]}
                onEndReachedThreshold={2}
                onLayout={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                renderItem={[Function]}
                scrollEventThrottle={50}
                showsVerticalScrollIndicator={false}
                stickyHeaderIndices={Array []}
                updateCellsBatchingPeriod={50}
                useART={false}
                viewabilityConfigCallbackPairs={Array []}
                windowSize={21}
              >
                <View>
                  <View>
                    <CellRenderer
                      ItemSeparatorComponent={[Function]}
                      cellKey={1}
                      fillRateHelper={
                        FillRateHelper {
                          "_anyBlankStartTime": null,
                          "_enabled": false,
                          "_getFrameMetrics": [Function],
                          "_info": Info {
                            "any_blank_count": 0,
                            "any_blank_ms": 0,
                            "any_blank_speed_sum": 0,
                            "mostly_blank_count": 0,
                            "mostly_blank_ms": 0,
                            "pixels_blank": 0,
                            "pixels_sampled": 0,
                            "pixels_scrolled": 0,
                            "sample_count": 0,
                            "total_time_spent": 0,
                          },
                          "_mostlyBlankStartTime": null,
                          "_samplesStartTime": null,
                        }
                      }
                      horizontal={false}
                      index={0}
                      inversionStyle={null}
                      item={
                        Object {
                          "Action": "清扫成功",
                          "checked": true,
                          "key": 1,
                          "onChange": [MockFunction],
                          "renderItem": [Function],
                          "subTitle": "清扫 0平方米 | 工作 5分钟",
                          "theme": Object {
                            "descFontColor": "#7ED321",
                          },
                          "title": "title_1",
                          "value": 1,
                        }
                      }
                      key="1"
                      onLayout={[Function]}
                      onUnmount={[Function]}
                      onUpdateSeparators={[Function]}
                      parentProps={
                        Object {
                          "ItemSeparatorComponent": [Function],
                          "contentContainerStyle": Array [
                            Object {
                              "backgroundColor": "#f8f8f8",
                            },
                            undefined,
                          ],
                          "data": Array [
                            Object {
                              "Action": "清扫成功",
                              "checked": true,
                              "key": 1,
                              "onChange": [MockFunction],
                              "renderItem": [Function],
                              "subTitle": "清扫 0平方米 | 工作 5分钟",
                              "theme": Object {
                                "descFontColor": "#7ED321",
                              },
                              "title": "title_1",
                              "value": 1,
                            },
                            Object {
                              "Action": "清扫成功",
                              "checked": true,
                              "key": 2,
                              "onChange": [MockFunction],
                              "renderItem": [Function],
                              "subTitle": "清扫 0平方米 | 工作 5分钟",
                              "theme": Object {
                                "descFontColor": "#7ED321",
                              },
                              "title": "title_2",
                              "value": 1,
                            },
                          ],
                          "disableVirtualization": false,
                          "getItem": [Function],
                          "getItemCount": [Function],
                          "horizontal": false,
                          "initialNumToRender": 10,
                          "keyExtractor": [Function],
                          "maxToRenderPerBatch": 10,
                          "numColumns": 1,
                          "onEndReachedThreshold": 2,
                          "renderItem": [Function],
                          "scrollEventThrottle": 50,
                          "showsVerticalScrollIndicator": false,
                          "updateCellsBatchingPeriod": 50,
                          "useART": false,
                          "viewabilityConfigCallbackPairs": Array [],
                          "windowSize": 21,
                        }
                      }
                    >
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <CheckboxItem
                            Action="清扫成功"
                            checked={true}
                            key="1"
                            onChange={[MockFunction]}
                            renderItem={[Function]}
                            subTitle="清扫 0平方米 | 工作 5分钟"
                            theme={
                              Object {
                                "descFontColor": "#7ED321",
                              }
                            }
                            title="title_1"
                            value={1}
                          >
                            <TYListItem
                              Action="清扫成功"
                              Icon={
                                <Checkbox
                                  accessibilityLabel="Checkbox"
                                  checked={true}
                                  checkedIcon={null}
                                  color={null}
                                  disabled={false}
                                  disabledColor={null}
                                  hideOnUnselect={false}
                                  onChange={[MockFunction]}
                                  renderItem={[Function]}
                                  reverse={false}
                                  size={17}
                                  style={null}
                                  unCheckedIcon={null}
                                  value={1}
                                />
                              }
                              actionDisabled={false}
                              actionType="auto"
                              arrow={false}
                              arrowColor={null}
                              arrowUseIcon={false}
                              disabled={false}
                              iconColor={null}
                              iconSize={null}
                              iconType="auto"
                              imageFollowIconColor={true}
                              needUpdate={true}
                              onPress={[Function]}
                              styles={
                                Object {
                                  "contentLeft": Object {
                                    "alignSelf": "flex-start",
                                    "marginTop": 4,
                                  },
                                }
                              }
                              subTitle="清扫 0平方米 | 工作 5分钟"
                              theme={
                                Object {
                                  "descFontColor": "#7ED321",
                                }
                              }
                              title="title_1"
                              useART={false}
                            >
                              <Styled(TouchableOpacity)
                                Action="清扫成功"
                                Icon={
                                  <Checkbox
                                    accessibilityLabel="Checkbox"
                                    checked={true}
                                    checkedIcon={null}
                                    color={null}
                                    disabled={false}
                                    disabledColor={null}
                                    hideOnUnselect={false}
                                    onChange={[MockFunction]}
                                    renderItem={[Function]}
                                    reverse={false}
                                    size={17}
                                    style={null}
                                    unCheckedIcon={null}
                                    value={1}
                                  />
                                }
                                actionType="auto"
                                activeOpacity={0.8}
                                arrow={false}
                                arrowColor={null}
                                arrowUseIcon={false}
                                disabled={false}
                                iconColor={null}
                                iconSize={null}
                                iconType="auto"
                                imageFollowIconColor={true}
                                needUpdate={true}
                                onPress={[Function]}
                                style={
                                  Array [
                                    false,
                                    undefined,
                                    undefined,
                                    undefined,
                                  ]
                                }
                                useART={false}
                              >
                                <TouchableOpacity
                                  Action="清扫成功"
                                  Icon={
                                    <Checkbox
                                      accessibilityLabel="Checkbox"
                                      checked={true}
                                      checkedIcon={null}
                                      color={null}
                                      disabled={false}
                                      disabledColor={null}
                                      hideOnUnselect={false}
                                      onChange={[MockFunction]}
                                      renderItem={[Function]}
                                      reverse={false}
                                      size={17}
                                      style={null}
                                      unCheckedIcon={null}
                                      value={1}
                                    />
                                  }
                                  actionType="auto"
                                  activeOpacity={0.8}
                                  arrow={false}
                                  arrowColor={null}
                                  arrowUseIcon={false}
                                  disabled={false}
                                  iconColor={null}
                                  iconSize={null}
                                  iconType="auto"
                                  imageFollowIconColor={true}
                                  needUpdate={true}
                                  onPress={[Function]}
                                  style={
                                    Array [
                                      Object {
                                        "alignSelf": "stretch",
                                        "backgroundColor": "#fff",
                                        "borderRadius": 0,
                                        "flexGrow": 0,
                                        "marginBottom": 0,
                                        "marginLeft": 0,
                                        "marginRight": 0,
                                        "marginTop": 0,
                                        "minHeight": 48,
                                      },
                                      Array [
                                        false,
                                        undefined,
                                        undefined,
                                        undefined,
                                      ],
                                    ]
                                  }
                                  useART={false}
                                >
                                  <AnimatedComponent
                                    accessible={true}
                                    isTVSelectable={true}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      Array [
                                        Array [
                                          Object {
                                            "alignSelf": "stretch",
                                            "backgroundColor": "#fff",
                                            "borderRadius": 0,
                                            "flexGrow": 0,
                                            "marginBottom": 0,
                                            "marginLeft": 0,
                                            "marginRight": 0,
                                            "marginTop": 0,
                                            "minHeight": 48,
                                          },
                                          Array [
                                            false,
                                            undefined,
                                            undefined,
                                            undefined,
                                          ],
                                        ],
                                        Object {
                                          "opacity": 1,
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      accessible={true}
                                      isTVSelectable={true}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        Object {
                                          "alignSelf": "stretch",
                                          "backgroundColor": "#fff",
                                          "borderRadius": 0,
                                          "flexGrow": 0,
                                          "marginBottom": 0,
                                          "marginLeft": 0,
                                          "marginRight": 0,
                                          "marginTop": 0,
                                          "minHeight": 48,
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        accessible={true}
                                        isTVSelectable={true}
                                        onResponderGrant={[Function]}
                                        onResponderMove={[Function]}
                                        onResponderRelease={[Function]}
                                        onResponderTerminate={[Function]}
                                        onResponderTerminationRequest={[Function]}
                                        onStartShouldSetResponder={[Function]}
                                        style={
                                          Object {
                                            "alignSelf": "stretch",
                                            "backgroundColor": "#fff",
                                            "borderRadius": 0,
                                            "flexGrow": 0,
                                            "marginBottom": 0,
                                            "marginLeft": 0,
                                            "marginRight": 0,
                                            "marginTop": 0,
                                            "minHeight": 48,
                                            "opacity": 1,
                                          }
                                        }
                                      >
                                        <Styled(View)
                                          disabled={false}
                                          style={
                                            Array [
                                              false,
                                              undefined,
                                              undefined,
                                            ]
                                          }
                                        >
                                          <View
                                            disabled={false}
                                            style={
                                              Array [
                                                Object {
                                                  "alignItems": "center",
                                                  "borderRadius": 0,
                                                  "flexDirection": "row",
                                                  "opacity": 1,
                                                  "paddingBottom": 12,
                                                  "paddingLeft": 28,
                                                  "paddingRight": 28,
                                                  "paddingTop": 12,
                                                },
                                                Array [
                                                  false,
                                                  undefined,
                                                  undefined,
                                                ],
                                              ]
                                            }
                                          >
                                            <View
                                              disabled={false}
                                              style={
                                                Array [
                                                  Object {
                                                    "alignItems": "center",
                                                    "borderRadius": 0,
                                                    "flexDirection": "row",
                                                    "opacity": 1,
                                                    "paddingBottom": 12,
                                                    "paddingLeft": 28,
                                                    "paddingRight": 28,
                                                    "paddingTop": 12,
                                                  },
                                                  Array [
                                                    false,
                                                    undefined,
                                                    undefined,
                                                  ],
                                                ]
                                              }
                                            >
                                              <Styled(View)
                                                style={
                                                  Object {
                                                    "alignSelf": "flex-start",
                                                    "marginTop": 4,
                                                  }
                                                }
                                              >
                                                <View
                                                  style={
                                                    Array [
                                                      Object {
                                                        "justifyContent": "center",
                                                        "marginRight": 20,
                                                      },
                                                      Object {
                                                        "alignSelf": "flex-start",
                                                        "marginTop": 4,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <View
                                                    style={
                                                      Array [
                                                        Object {
                                                          "justifyContent": "center",
                                                          "marginRight": 20,
                                                        },
                                                        Object {
                                                          "alignSelf": "flex-start",
                                                          "marginTop": 4,
                                                        },
                                                      ]
                                                    }
                                                  >
                                                    <Checkbox
                                                      accessibilityLabel="Checkbox"
                                                      checked={true}
                                                      checkedIcon={null}
                                                      color={null}
                                                      disabled={false}
                                                      disabledColor={null}
                                                      hideOnUnselect={false}
                                                      onChange={[MockFunction]}
                                                      renderItem={[Function]}
                                                      reverse={false}
                                                      size={17}
                                                      style={null}
                                                      unCheckedIcon={null}
                                                      value={1}
                                                    >
                                                      <Styled(TouchableOpacity)
                                                        accessibilityLabel="Checkbox"
                                                        activeOpacity={0.8}
                                                        disabled={false}
                                                        onPress={[Function]}
                                                        style={null}
                                                      >
                                                        <TouchableOpacity
                                                          accessibilityLabel="Checkbox"
                                                          activeOpacity={0.8}
                                                          disabled={false}
                                                          onPress={[Function]}
                                                          style={
                                                            Array [
                                                              Object {
                                                                "alignItems": "center",
                                                                "alignSelf": "stretch",
                                                                "backgroundColor": "transparent",
                                                                "flexDirection": "row",
                                                                "justifyContent": "flex-start",
                                                              },
                                                              null,
                                                            ]
                                                          }
                                                        >
                                                          <AnimatedComponent
                                                            accessibilityLabel="Checkbox"
                                                            accessible={true}
                                                            isTVSelectable={true}
                                                            onResponderGrant={[Function]}
                                                            onResponderMove={[Function]}
                                                            onResponderRelease={[Function]}
                                                            onResponderTerminate={[Function]}
                                                            onResponderTerminationRequest={[Function]}
                                                            onStartShouldSetResponder={[Function]}
                                                            style={
                                                              Array [
                                                                Array [
                                                                  Object {
                                                                    "alignItems": "center",
                                                                    "alignSelf": "stretch",
                                                                    "backgroundColor": "transparent",
                                                                    "flexDirection": "row",
                                                                    "justifyContent": "flex-start",
                                                                  },
                                                                  null,
                                                                ],
                                                                Object {
                                                                  "opacity": 1,
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <View
                                                              accessibilityLabel="Checkbox"
                                                              accessible={true}
                                                              isTVSelectable={true}
                                                              onResponderGrant={[Function]}
                                                              onResponderMove={[Function]}
                                                              onResponderRelease={[Function]}
                                                              onResponderTerminate={[Function]}
                                                              onResponderTerminationRequest={[Function]}
                                                              onStartShouldSetResponder={[Function]}
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "alignSelf": "stretch",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                  "justifyContent": "flex-start",
                                                                  "opacity": 1,
                                                                }
                                                              }
                                                            >
                                                              <View
                                                                accessibilityLabel="Checkbox"
                                                                accessible={true}
                                                                isTVSelectable={true}
                                                                onResponderGrant={[Function]}
                                                                onResponderMove={[Function]}
                                                                onResponderRelease={[Function]}
                                                                onResponderTerminate={[Function]}
                                                                onResponderTerminationRequest={[Function]}
                                                                onStartShouldSetResponder={[Function]}
                                                                style={
                                                                  Object {
                                                                    "alignItems": "center",
                                                                    "alignSelf": "stretch",
                                                                    "backgroundColor": "transparent",
                                                                    "flexDirection": "row",
                                                                    "justifyContent": "flex-start",
                                                                    "opacity": 1,
                                                                  }
                                                                }
                                                              >
                                                                <View
                                                                  style={
                                                                    Object {
                                                                      "alignItems": "center",
                                                                      "flexDirection": "row",
                                                                      "opacity": 1,
                                                                    }
                                                                  }
                                                                >
                                                                  <View
                                                                    style={
                                                                      Object {
                                                                        "alignItems": "center",
                                                                        "flexDirection": "row",
                                                                        "opacity": 1,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Styled(Component)
                                                                      activeColor={null}
                                                                      d="M512 0c282.7776 0 512 229.2224 512 512s-229.2224 512-512 512S0 794.7776 0 512 229.2224 0 512 0z m279.04 362.8032a51.2 51.2 0 0 0-72.3968 0l-253.44 253.3888-108.6464-108.544a51.2 51.2 0 0 0-72.3968 72.3456l144.2304 144.1792 0.6144 0.6656a51.2 51.2 0 0 0 72.3968 0L791.04 435.2a51.2 51.2 0 0 0 0-72.3968z"
                                                                      disabled={false}
                                                                      disabledColor={null}
                                                                      key="checkIcon"
                                                                      size={17}
                                                                      style={false}
                                                                    >
                                                                      <Component
                                                                        activeColor={null}
                                                                        color="#3388FF"
                                                                        d="M512 0c282.7776 0 512 229.2224 512 512s-229.2224 512-512 512S0 794.7776 0 512 229.2224 0 512 0z m279.04 362.8032a51.2 51.2 0 0 0-72.3968 0l-253.44 253.3888-108.6464-108.544a51.2 51.2 0 0 0-72.3968 72.3456l144.2304 144.1792 0.6144 0.6656a51.2 51.2 0 0 0 72.3968 0L791.04 435.2a51.2 51.2 0 0 0 0-72.3968z"
                                                                        disabled={false}
                                                                        disabledColor={null}
                                                                        innerRef={[Function]}
                                                                        size={17}
                                                                        style={
                                                                          Array [
                                                                            Object {},
                                                                            false,
                                                                          ]
                                                                        }
                                                                      >
                                                                        <IconFont
                                                                          activeColor={null}
                                                                          color="#3388FF"
                                                                          d="M512 0c282.7776 0 512 229.2224 512 512s-229.2224 512-512 512S0 794.7776 0 512 229.2224 0 512 0z m279.04 362.8032a51.2 51.2 0 0 0-72.3968 0l-253.44 253.3888-108.6464-108.544a51.2 51.2 0 0 0-72.3968 72.3456l144.2304 144.1792 0.6144 0.6656a51.2 51.2 0 0 0 72.3968 0L791.04 435.2a51.2 51.2 0 0 0 0-72.3968z"
                                                                          disabled={false}
                                                                          disabledColor={null}
                                                                          fill={null}
                                                                          hFlip={false}
                                                                          height={null}
                                                                          innerRef={[Function]}
                                                                          name={null}
                                                                          size={17}
                                                                          stroke={null}
                                                                          strokeCap="round"
                                                                          strokeDash={
                                                                            Array [
                                                                              0,
                                                                              0,
                                                                            ]
                                                                          }
                                                                          strokeJoin="round"
                                                                          strokeWidth={1}
                                                                          style={
                                                                            Array [
                                                                              Object {},
                                                                              false,
                                                                            ]
                                                                          }
                                                                          vFlip={false}
                                                                          viewBox="0 0 1024 1024"
                                                                          width={null}
                                                                        >
                                                                          <View
                                                                            style={
                                                                              Array [
                                                                                Object {
                                                                                  "flexDirection": "row",
                                                                                },
                                                                                Object {
                                                                                  "height": 17,
                                                                                  "width": 17,
                                                                                },
                                                                                false,
                                                                                Array [
                                                                                  Object {},
                                                                                  false,
                                                                                ],
                                                                              ]
                                                                            }
                                                                          >
                                                                            <View
                                                                              style={
                                                                                Array [
                                                                                  Object {
                                                                                    "flexDirection": "row",
                                                                                  },
                                                                                  Object {
                                                                                    "height": 17,
                                                                                    "width": 17,
                                                                                  },
                                                                                  false,
                                                                                  Array [
                                                                                    Object {},
                                                                                    false,
                                                                                  ],
                                                                                ]
                                                                              }
                                                                            >
                                                                              <Svg
                                                                                height={17}
                                                                                key="0"
                                                                                preserveAspectRatio="xMidYMid meet"
                                                                                viewBox="0 0 1024 1024"
                                                                                width={17}
                                                                              >
                                                                                <_class
                                                                                  align="xMidYMid"
                                                                                  meetOrSlice={0}
                                                                                  minX={0}
                                                                                  minY={0}
                                                                                  style={
                                                                                    Array [
                                                                                      Object {
                                                                                        "backgroundColor": "transparent",
                                                                                      },
                                                                                      undefined,
                                                                                      false,
                                                                                      Object {
                                                                                        "flex": 0,
                                                                                        "height": 17,
                                                                                        "width": 17,
                                                                                      },
                                                                                    ]
                                                                                  }
                                                                                  vbHeight={1024}
                                                                                  vbWidth={1024}
                                                                                >
                                                                                  <RNSVGSvgView
                                                                                    align="xMidYMid"
                                                                                    meetOrSlice={0}
                                                                                    minX={0}
                                                                                    minY={0}
                                                                                    style={
                                                                                      Array [
                                                                                        Object {
                                                                                          "backgroundColor": "transparent",
                                                                                        },
                                                                                        undefined,
                                                                                        false,
                                                                                        Object {
                                                                                          "flex": 0,
                                                                                          "height": 17,
                                                                                          "width": 17,
                                                                                        },
                                                                                      ]
                                                                                    }
                                                                                    vbHeight={1024}
                                                                                    vbWidth={1024}
                                                                                  >
                                                                                    <Path
                                                                                      activeColor={null}
                                                                                      d="M512 0c282.7776 0 512 229.2224 512 512s-229.2224 512-512 512S0 794.7776 0 512 229.2224 0 512 0z m279.04 362.8032a51.2 51.2 0 0 0-72.3968 0l-253.44 253.3888-108.6464-108.544a51.2 51.2 0 0 0-72.3968 72.3456l144.2304 144.1792 0.6144 0.6656a51.2 51.2 0 0 0 72.3968 0L791.04 435.2a51.2 51.2 0 0 0 0-72.3968z"
                                                                                      disabled={false}
                                                                                      disabledColor={null}
                                                                                      fill="#3388FF"
                                                                                      height={null}
                                                                                      innerRef={[Function]}
                                                                                      stroke="#3388FF"
                                                                                      strokeCap="round"
                                                                                      strokeDash={
                                                                                        Array [
                                                                                          0,
                                                                                          0,
                                                                                        ]
                                                                                      }
                                                                                      strokeJoin="round"
                                                                                      strokeWidth={1}
                                                                                      width={null}
                                                                                    >
                                                                                      <RNSVGPath
                                                                                        d="M512 0c282.7776 0 512 229.2224 512 512s-229.2224 512-512 512S0 794.7776 0 512 229.2224 0 512 0z m279.04 362.8032a51.2 51.2 0 0 0-72.3968 0l-253.44 253.3888-108.6464-108.544a51.2 51.2 0 0 0-72.3968 72.3456l144.2304 144.1792 0.6144 0.6656a51.2 51.2 0 0 0 72.3968 0L791.04 435.2a51.2 51.2 0 0 0 0-72.3968z"
                                                                                        fill={
                                                                                          Array [
                                                                                            0,
                                                                                            0.2,
                                                                                            0.5333333333333333,
                                                                                            1,
                                                                                            1,
                                                                                          ]
                                                                                        }
                                                                                        fillOpacity={1}
                                                                                        fillRule={1}
                                                                                        matrix={
                                                                                          Array [
                                                                                            1,
                                                                                            0,
                                                                                            0,
                                                                                            1,
                                                                                            0,
                                                                                            0,
                                                                                          ]
                                                                                        }
                                                                                        opacity={1}
                                                                                        propList={
                                                                                          Array [
                                                                                            "stroke",
                                                                                            "strokeWidth",
                                                                                            "fill",
                                                                                          ]
                                                                                        }
                                                                                        stroke={
                                                                                          Array [
                                                                                            0,
                                                                                            0.2,
                                                                                            0.5333333333333333,
                                                                                            1,
                                                                                            1,
                                                                                          ]
                                                                                        }
                                                                                        strokeDasharray={null}
                                                                                        strokeDashoffset={null}
                                                                                        strokeLinecap={0}
                                                                                        strokeLinejoin={0}
                                                                                        strokeMiterlimit={4}
                                                                                        strokeOpacity={1}
                                                                                        strokeWidth={1}
                                                                                      />
                                                                                    </Path>
                                                                                  </RNSVGSvgView>
                                                                                </_class>
                                                                              </Svg>
                                                                            </View>
                                                                          </View>
                                                                        </IconFont>
                                                                      </Component>
                                                                    </Styled(Component)>
                                                                  </View>
                                                                </View>
                                                              </View>
                                                            </View>
                                                          </AnimatedComponent>
                                                        </TouchableOpacity>
                                                      </Styled(TouchableOpacity)>
                                                    </Checkbox>
                                                  </View>
                                                </View>
                                              </Styled(View)>
                                              <Styled(View)>
                                                <View
                                                  style={
                                                    Array [
                                                      Object {
                                                        "flexBasis": 0,
                                                        "flexGrow": 1,
                                                        "flexShrink": 1,
                                                        "justifyContent": "center",
                                                      },
                                                      undefined,
                                                    ]
                                                  }
                                                >
                                                  <View
                                                    style={
                                                      Array [
                                                        Object {
                                                          "flexBasis": 0,
                                                          "flexGrow": 1,
                                                          "flexShrink": 1,
                                                          "justifyContent": "center",
                                                        },
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <Styled(TYText)
                                                      style={
                                                        Array [
                                                          undefined,
                                                          undefined,
                                                        ]
                                                      }
                                                    >
                                                      <TYText
                                                        align={null}
                                                        color={null}
                                                        size="small"
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "#333",
                                                            },
                                                            Array [
                                                              undefined,
                                                              undefined,
                                                            ],
                                                          ]
                                                        }
                                                        type="title"
                                                        weight={null}
                                                      >
                                                        <Styled(Text)
                                                          align={null}
                                                          allowFontScaling={false}
                                                          color={null}
                                                          size="small"
                                                          style={
                                                            Array [
                                                              Object {
                                                                "color": "#333",
                                                              },
                                                              Array [
                                                                undefined,
                                                                undefined,
                                                              ],
                                                            ]
                                                          }
                                                          type="title"
                                                          weight={null}
                                                        >
                                                          <Text
                                                            accessible={true}
                                                            align={null}
                                                            allowFontScaling={false}
                                                            color={null}
                                                            ellipsizeMode="tail"
                                                            size="small"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "backgroundColor": "transparent",
                                                                  "color": "#333",
                                                                  "fontSize": 17,
                                                                  "lineHeight": 24,
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "#333",
                                                                  },
                                                                  Array [
                                                                    undefined,
                                                                    undefined,
                                                                  ],
                                                                ],
                                                              ]
                                                            }
                                                            type="title"
                                                            weight={null}
                                                          >
                                                            <Text
                                                              accessible={true}
                                                              align={null}
                                                              allowFontScaling={false}
                                                              color={null}
                                                              ellipsizeMode="tail"
                                                              size="small"
                                                              style={
                                                                Array [
                                                                  Object {
                                                                    "backgroundColor": "transparent",
                                                                    "color": "#333",
                                                                    "fontSize": 17,
                                                                    "lineHeight": 24,
                                                                  },
                                                                  Array [
                                                                    Object {
                                                                      "color": "#333",
                                                                    },
                                                                    Array [
                                                                      undefined,
                                                                      undefined,
                                                                    ],
                                                                  ],
                                                                ]
                                                              }
                                                              type="title"
                                                              weight={null}
                                                            >
                                                              title_1
                                                            </Text>
                                                          </Text>
                                                        </Styled(Text)>
                                                      </TYText>
                                                    </Styled(TYText)>
                                                    <Styled(TYText)
                                                      style={
                                                        Array [
                                                          undefined,
                                                          undefined,
                                                        ]
                                                      }
                                                    >
                                                      <TYText
                                                        align={null}
                                                        color={null}
                                                        size="large"
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(51, 51, 51, 0.5)",
                                                              "marginTop": 4,
                                                            },
                                                            Array [
                                                              undefined,
                                                              undefined,
                                                            ],
                                                          ]
                                                        }
                                                        type="paragraph"
                                                        weight={null}
                                                      >
                                                        <Styled(Text)
                                                          align={null}
                                                          allowFontScaling={false}
                                                          color={null}
                                                          size="large"
                                                          style={
                                                            Array [
                                                              Object {
                                                                "color": "rgba(51, 51, 51, 0.5)",
                                                                "marginTop": 4,
                                                              },
                                                              Array [
                                                                undefined,
                                                                undefined,
                                                              ],
                                                            ]
                                                          }
                                                          type="paragraph"
                                                          weight={null}
                                                        >
                                                          <Text
                                                            accessible={true}
                                                            align={null}
                                                            allowFontScaling={false}
                                                            color={null}
                                                            ellipsizeMode="tail"
                                                            size="large"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "backgroundColor": "transparent",
                                                                  "color": "#333",
                                                                  "fontSize": 17,
                                                                  "lineHeight": 24,
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "rgba(51, 51, 51, 0.5)",
                                                                    "marginTop": 4,
                                                                  },
                                                                  Array [
                                                                    undefined,
                                                                    undefined,
                                                                  ],
                                                                ],
                                                              ]
                                                            }
                                                            type="paragraph"
                                                            weight={null}
                                                          >
                                                            <Text
                                                              accessible={true}
                                                              align={null}
                                                              allowFontScaling={false}
                                                              color={null}
                                                              ellipsizeMode="tail"
                                                              size="large"
                                                              style={
                                                                Array [
                                                                  Object {
                                                                    "backgroundColor": "transparent",
                                                                    "color": "#333",
                                                                    "fontSize": 17,
                                                                    "lineHeight": 24,
                                                                  },
                                                                  Array [
                                                                    Object {
                                                                      "color": "rgba(51, 51, 51, 0.5)",
                                                                      "marginTop": 4,
                                                                    },
                                                                    Array [
                                                                      undefined,
                                                                      undefined,
                                                                    ],
                                                                  ],
                                                                ]
                                                              }
                                                              type="paragraph"
                                                              weight={null}
                                                            >
                                                              清扫 0平方米 | 工作 5分钟
                                                            </Text>
                                                          </Text>
                                                        </Styled(Text)>
                                                      </TYText>
                                                    </Styled(TYText)>
                                                  </View>
                                                </View>
                                              </Styled(View)>
                                              <Styled(TouchableOpacity)
                                                activeOpacity={0.8}
                                                disabled={false}
                                                onPress={[Function]}
                                              >
                                                <TouchableOpacity
                                                  activeOpacity={0.8}
                                                  disabled={false}
                                                  onPress={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginLeft": 20,
                                                      },
                                                      undefined,
                                                    ]
                                                  }
                                                >
                                                  <AnimatedComponent
                                                    accessible={true}
                                                    isTVSelectable={true}
                                                    onResponderGrant={[Function]}
                                                    onResponderMove={[Function]}
                                                    onResponderRelease={[Function]}
                                                    onResponderTerminate={[Function]}
                                                    onResponderTerminationRequest={[Function]}
                                                    onStartShouldSetResponder={[Function]}
                                                    style={
                                                      Array [
                                                        Array [
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginLeft": 20,
                                                          },
                                                          undefined,
                                                        ],
                                                        Object {
                                                          "opacity": 1,
                                                        },
                                                      ]
                                                    }
                                                  >
                                                    <View
                                                      accessible={true}
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Object {
                                                          "alignItems": "center",
                                                          "flexDirection": "row",
                                                          "marginLeft": 20,
                                                          "opacity": 1,
                                                        }
                                                      }
                                                    >
                                                      <View
                                                        accessible={true}
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginLeft": 20,
                                                            "opacity": 1,
                                                          }
                                                        }
                                                      >
                                                        <Styled(TYText)
                                                          style={
                                                            Array [
                                                              Object {
                                                                "color": "#7ED321",
                                                              },
                                                              undefined,
                                                            ]
                                                          }
                                                        >
                                                          <TYText
                                                            align={null}
                                                            color={null}
                                                            size="large"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "color": "rgba(51, 51, 51, 0.5)",
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "#7ED321",
                                                                  },
                                                                  undefined,
                                                                ],
                                                              ]
                                                            }
                                                            type="paragraph"
                                                            weight={null}
                                                          >
                                                            <Styled(Text)
                                                              align={null}
                                                              allowFontScaling={false}
                                                              color={null}
                                                              size="large"
                                                              style={
                                                                Array [
                                                                  Object {
                                                                    "color": "rgba(51, 51, 51, 0.5)",
                                                                  },
                                                                  Array [
                                                                    Object {
                                                                      "color": "#7ED321",
                                                                    },
                                                                    undefined,
                                                                  ],
                                                                ]
                                                              }
                                                              type="paragraph"
                                                              weight={null}
                                                            >
                                                              <Text
                                                                accessible={true}
                                                                align={null}
                                                                allowFontScaling={false}
                                                                color={null}
                                                                ellipsizeMode="tail"
                                                                size="large"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "color": "#333",
                                                                      "fontSize": 17,
                                                                      "lineHeight": 24,
                                                                    },
                                                                    Array [
                                                                      Object {
                                                                        "color": "rgba(51, 51, 51, 0.5)",
                                                                      },
                                                                      Array [
                                                                        Object {
                                                                          "color": "#7ED321",
                                                                        },
                                                                        undefined,
                                                                      ],
                                                                    ],
                                                                  ]
                                                                }
                                                                type="paragraph"
                                                                weight={null}
                                                              >
                                                                <Text
                                                                  accessible={true}
                                                                  align={null}
                                                                  allowFontScaling={false}
                                                                  color={null}
                                                                  ellipsizeMode="tail"
                                                                  size="large"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "color": "#333",
                                                                        "fontSize": 17,
                                                                        "lineHeight": 24,
                                                                      },
                                                                      Array [
                                                                        Object {
                                                                          "color": "rgba(51, 51, 51, 0.5)",
                                                                        },
                                                                        Array [
                                                                          Object {
                                                                            "color": "#7ED321",
                                                                          },
                                                                          undefined,
                                                                        ],
                                                                      ],
                                                                    ]
                                                                  }
                                                                  type="paragraph"
                                                                  weight={null}
                                                                >
                                                                  清扫成功
                                                                </Text>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TYText>
                                                        </Styled(TYText)>
                                                      </View>
                                                    </View>
                                                  </AnimatedComponent>
                                                </TouchableOpacity>
                                              </Styled(TouchableOpacity)>
                                            </View>
                                          </View>
                                        </Styled(View)>
                                      </View>
                                    </View>
                                  </AnimatedComponent>
                                </TouchableOpacity>
                              </Styled(TouchableOpacity)>
                            </TYListItem>
                          </CheckboxItem>
                          <ItemSeparatorComponent
                            highlighted={false}
                            leadingItem={
                              Object {
                                "Action": "清扫成功",
                                "checked": true,
                                "key": 1,
                                "onChange": [MockFunction],
                                "renderItem": [Function],
                                "subTitle": "清扫 0平方米 | 工作 5分钟",
                                "theme": Object {
                                  "descFontColor": "#7ED321",
                                },
                                "title": "title_1",
                                "value": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(51, 51, 51, 0.1)",
                                    "height": 0.5,
                                    "marginLeft": 32,
                                  },
                                  null,
                                ]
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "rgba(51, 51, 51, 0.1)",
                                      "height": 0.5,
                                      "marginLeft": 32,
                                    },
                                    null,
                                  ]
                                }
                              />
                            </View>
                          </ItemSeparatorComponent>
                        </View>
                      </View>
                    </CellRenderer>
                    <CellRenderer
                      cellKey={2}
                      fillRateHelper={
                        FillRateHelper {
                          "_anyBlankStartTime": null,
                          "_enabled": false,
                          "_getFrameMetrics": [Function],
                          "_info": Info {
                            "any_blank_count": 0,
                            "any_blank_ms": 0,
                            "any_blank_speed_sum": 0,
                            "mostly_blank_count": 0,
                            "mostly_blank_ms": 0,
                            "pixels_blank": 0,
                            "pixels_sampled": 0,
                            "pixels_scrolled": 0,
                            "sample_count": 0,
                            "total_time_spent": 0,
                          },
                          "_mostlyBlankStartTime": null,
                          "_samplesStartTime": null,
                        }
                      }
                      horizontal={false}
                      index={1}
                      inversionStyle={null}
                      item={
                        Object {
                          "Action": "清扫成功",
                          "checked": true,
                          "key": 2,
                          "onChange": [MockFunction],
                          "renderItem": [Function],
                          "subTitle": "清扫 0平方米 | 工作 5分钟",
                          "theme": Object {
                            "descFontColor": "#7ED321",
                          },
                          "title": "title_2",
                          "value": 1,
                        }
                      }
                      key="2"
                      onLayout={[Function]}
                      onUnmount={[Function]}
                      onUpdateSeparators={[Function]}
                      parentProps={
                        Object {
                          "ItemSeparatorComponent": [Function],
                          "contentContainerStyle": Array [
                            Object {
                              "backgroundColor": "#f8f8f8",
                            },
                            undefined,
                          ],
                          "data": Array [
                            Object {
                              "Action": "清扫成功",
                              "checked": true,
                              "key": 1,
                              "onChange": [MockFunction],
                              "renderItem": [Function],
                              "subTitle": "清扫 0平方米 | 工作 5分钟",
                              "theme": Object {
                                "descFontColor": "#7ED321",
                              },
                              "title": "title_1",
                              "value": 1,
                            },
                            Object {
                              "Action": "清扫成功",
                              "checked": true,
                              "key": 2,
                              "onChange": [MockFunction],
                              "renderItem": [Function],
                              "subTitle": "清扫 0平方米 | 工作 5分钟",
                              "theme": Object {
                                "descFontColor": "#7ED321",
                              },
                              "title": "title_2",
                              "value": 1,
                            },
                          ],
                          "disableVirtualization": false,
                          "getItem": [Function],
                          "getItemCount": [Function],
                          "horizontal": false,
                          "initialNumToRender": 10,
                          "keyExtractor": [Function],
                          "maxToRenderPerBatch": 10,
                          "numColumns": 1,
                          "onEndReachedThreshold": 2,
                          "renderItem": [Function],
                          "scrollEventThrottle": 50,
                          "showsVerticalScrollIndicator": false,
                          "updateCellsBatchingPeriod": 50,
                          "useART": false,
                          "viewabilityConfigCallbackPairs": Array [],
                          "windowSize": 21,
                        }
                      }
                      prevCellKey={1}
                    >
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <CheckboxItem
                            Action="清扫成功"
                            checked={true}
                            key="2"
                            onChange={[MockFunction]}
                            renderItem={[Function]}
                            subTitle="清扫 0平方米 | 工作 5分钟"
                            theme={
                              Object {
                                "descFontColor": "#7ED321",
                              }
                            }
                            title="title_2"
                            value={1}
                          >
                            <TYListItem
                              Action="清扫成功"
                              Icon={
                                <Checkbox
                                  accessibilityLabel="Checkbox"
                                  checked={true}
                                  checkedIcon={null}
                                  color={null}
                                  disabled={false}
                                  disabledColor={null}
                                  hideOnUnselect={false}
                                  onChange={[MockFunction]}
                                  renderItem={[Function]}
                                  reverse={false}
                                  size={17}
                                  style={null}
                                  unCheckedIcon={null}
                                  value={1}
                                />
                              }
                              actionDisabled={false}
                              actionType="auto"
                              arrow={false}
                              arrowColor={null}
                              arrowUseIcon={false}
                              disabled={false}
                              iconColor={null}
                              iconSize={null}
                              iconType="auto"
                              imageFollowIconColor={true}
                              needUpdate={true}
                              onPress={[Function]}
                              styles={
                                Object {
                                  "contentLeft": Object {
                                    "alignSelf": "flex-start",
                                    "marginTop": 4,
                                  },
                                }
                              }
                              subTitle="清扫 0平方米 | 工作 5分钟"
                              theme={
                                Object {
                                  "descFontColor": "#7ED321",
                                }
                              }
                              title="title_2"
                              useART={false}
                            >
                              <Styled(TouchableOpacity)
                                Action="清扫成功"
                                Icon={
                                  <Checkbox
                                    accessibilityLabel="Checkbox"
                                    checked={true}
                                    checkedIcon={null}
                                    color={null}
                                    disabled={false}
                                    disabledColor={null}
                                    hideOnUnselect={false}
                                    onChange={[MockFunction]}
                                    renderItem={[Function]}
                                    reverse={false}
                                    size={17}
                                    style={null}
                                    unCheckedIcon={null}
                                    value={1}
                                  />
                                }
                                actionType="auto"
                                activeOpacity={0.8}
                                arrow={false}
                                arrowColor={null}
                                arrowUseIcon={false}
                                disabled={false}
                                iconColor={null}
                                iconSize={null}
                                iconType="auto"
                                imageFollowIconColor={true}
                                needUpdate={true}
                                onPress={[Function]}
                                style={
                                  Array [
                                    false,
                                    undefined,
                                    undefined,
                                    undefined,
                                  ]
                                }
                                useART={false}
                              >
                                <TouchableOpacity
                                  Action="清扫成功"
                                  Icon={
                                    <Checkbox
                                      accessibilityLabel="Checkbox"
                                      checked={true}
                                      checkedIcon={null}
                                      color={null}
                                      disabled={false}
                                      disabledColor={null}
                                      hideOnUnselect={false}
                                      onChange={[MockFunction]}
                                      renderItem={[Function]}
                                      reverse={false}
                                      size={17}
                                      style={null}
                                      unCheckedIcon={null}
                                      value={1}
                                    />
                                  }
                                  actionType="auto"
                                  activeOpacity={0.8}
                                  arrow={false}
                                  arrowColor={null}
                                  arrowUseIcon={false}
                                  disabled={false}
                                  iconColor={null}
                                  iconSize={null}
                                  iconType="auto"
                                  imageFollowIconColor={true}
                                  needUpdate={true}
                                  onPress={[Function]}
                                  style={
                                    Array [
                                      Object {
                                        "alignSelf": "stretch",
                                        "backgroundColor": "#fff",
                                        "borderRadius": 0,
                                        "flexGrow": 0,
                                        "marginBottom": 0,
                                        "marginLeft": 0,
                                        "marginRight": 0,
                                        "marginTop": 0,
                                        "minHeight": 48,
                                      },
                                      Array [
                                        false,
                                        undefined,
                                        undefined,
                                        undefined,
                                      ],
                                    ]
                                  }
                                  useART={false}
                                >
                                  <AnimatedComponent
                                    accessible={true}
                                    isTVSelectable={true}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      Array [
                                        Array [
                                          Object {
                                            "alignSelf": "stretch",
                                            "backgroundColor": "#fff",
                                            "borderRadius": 0,
                                            "flexGrow": 0,
                                            "marginBottom": 0,
                                            "marginLeft": 0,
                                            "marginRight": 0,
                                            "marginTop": 0,
                                            "minHeight": 48,
                                          },
                                          Array [
                                            false,
                                            undefined,
                                            undefined,
                                            undefined,
                                          ],
                                        ],
                                        Object {
                                          "opacity": 1,
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      accessible={true}
                                      isTVSelectable={true}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        Object {
                                          "alignSelf": "stretch",
                                          "backgroundColor": "#fff",
                                          "borderRadius": 0,
                                          "flexGrow": 0,
                                          "marginBottom": 0,
                                          "marginLeft": 0,
                                          "marginRight": 0,
                                          "marginTop": 0,
                                          "minHeight": 48,
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        accessible={true}
                                        isTVSelectable={true}
                                        onResponderGrant={[Function]}
                                        onResponderMove={[Function]}
                                        onResponderRelease={[Function]}
                                        onResponderTerminate={[Function]}
                                        onResponderTerminationRequest={[Function]}
                                        onStartShouldSetResponder={[Function]}
                                        style={
                                          Object {
                                            "alignSelf": "stretch",
                                            "backgroundColor": "#fff",
                                            "borderRadius": 0,
                                            "flexGrow": 0,
                                            "marginBottom": 0,
                                            "marginLeft": 0,
                                            "marginRight": 0,
                                            "marginTop": 0,
                                            "minHeight": 48,
                                            "opacity": 1,
                                          }
                                        }
                                      >
                                        <Styled(View)
                                          disabled={false}
                                          style={
                                            Array [
                                              false,
                                              undefined,
                                              undefined,
                                            ]
                                          }
                                        >
                                          <View
                                            disabled={false}
                                            style={
                                              Array [
                                                Object {
                                                  "alignItems": "center",
                                                  "borderRadius": 0,
                                                  "flexDirection": "row",
                                                  "opacity": 1,
                                                  "paddingBottom": 12,
                                                  "paddingLeft": 28,
                                                  "paddingRight": 28,
                                                  "paddingTop": 12,
                                                },
                                                Array [
                                                  false,
                                                  undefined,
                                                  undefined,
                                                ],
                                              ]
                                            }
                                          >
                                            <View
                                              disabled={false}
                                              style={
                                                Array [
                                                  Object {
                                                    "alignItems": "center",
                                                    "borderRadius": 0,
                                                    "flexDirection": "row",
                                                    "opacity": 1,
                                                    "paddingBottom": 12,
                                                    "paddingLeft": 28,
                                                    "paddingRight": 28,
                                                    "paddingTop": 12,
                                                  },
                                                  Array [
                                                    false,
                                                    undefined,
                                                    undefined,
                                                  ],
                                                ]
                                              }
                                            >
                                              <Styled(View)
                                                style={
                                                  Object {
                                                    "alignSelf": "flex-start",
                                                    "marginTop": 4,
                                                  }
                                                }
                                              >
                                                <View
                                                  style={
                                                    Array [
                                                      Object {
                                                        "justifyContent": "center",
                                                        "marginRight": 20,
                                                      },
                                                      Object {
                                                        "alignSelf": "flex-start",
                                                        "marginTop": 4,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <View
                                                    style={
                                                      Array [
                                                        Object {
                                                          "justifyContent": "center",
                                                          "marginRight": 20,
                                                        },
                                                        Object {
                                                          "alignSelf": "flex-start",
                                                          "marginTop": 4,
                                                        },
                                                      ]
                                                    }
                                                  >
                                                    <Checkbox
                                                      accessibilityLabel="Checkbox"
                                                      checked={true}
                                                      checkedIcon={null}
                                                      color={null}
                                                      disabled={false}
                                                      disabledColor={null}
                                                      hideOnUnselect={false}
                                                      onChange={[MockFunction]}
                                                      renderItem={[Function]}
                                                      reverse={false}
                                                      size={17}
                                                      style={null}
                                                      unCheckedIcon={null}
                                                      value={1}
                                                    >
                                                      <Styled(TouchableOpacity)
                                                        accessibilityLabel="Checkbox"
                                                        activeOpacity={0.8}
                                                        disabled={false}
                                                        onPress={[Function]}
                                                        style={null}
                                                      >
                                                        <TouchableOpacity
                                                          accessibilityLabel="Checkbox"
                                                          activeOpacity={0.8}
                                                          disabled={false}
                                                          onPress={[Function]}
                                                          style={
                                                            Array [
                                                              Object {
                                                                "alignItems": "center",
                                                                "alignSelf": "stretch",
                                                                "backgroundColor": "transparent",
                                                                "flexDirection": "row",
                                                                "justifyContent": "flex-start",
                                                              },
                                                              null,
                                                            ]
                                                          }
                                                        >
                                                          <AnimatedComponent
                                                            accessibilityLabel="Checkbox"
                                                            accessible={true}
                                                            isTVSelectable={true}
                                                            onResponderGrant={[Function]}
                                                            onResponderMove={[Function]}
                                                            onResponderRelease={[Function]}
                                                            onResponderTerminate={[Function]}
                                                            onResponderTerminationRequest={[Function]}
                                                            onStartShouldSetResponder={[Function]}
                                                            style={
                                                              Array [
                                                                Array [
                                                                  Object {
                                                                    "alignItems": "center",
                                                                    "alignSelf": "stretch",
                                                                    "backgroundColor": "transparent",
                                                                    "flexDirection": "row",
                                                                    "justifyContent": "flex-start",
                                                                  },
                                                                  null,
                                                                ],
                                                                Object {
                                                                  "opacity": 1,
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <View
                                                              accessibilityLabel="Checkbox"
                                                              accessible={true}
                                                              isTVSelectable={true}
                                                              onResponderGrant={[Function]}
                                                              onResponderMove={[Function]}
                                                              onResponderRelease={[Function]}
                                                              onResponderTerminate={[Function]}
                                                              onResponderTerminationRequest={[Function]}
                                                              onStartShouldSetResponder={[Function]}
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "alignSelf": "stretch",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                  "justifyContent": "flex-start",
                                                                  "opacity": 1,
                                                                }
                                                              }
                                                            >
                                                              <View
                                                                accessibilityLabel="Checkbox"
                                                                accessible={true}
                                                                isTVSelectable={true}
                                                                onResponderGrant={[Function]}
                                                                onResponderMove={[Function]}
                                                                onResponderRelease={[Function]}
                                                                onResponderTerminate={[Function]}
                                                                onResponderTerminationRequest={[Function]}
                                                                onStartShouldSetResponder={[Function]}
                                                                style={
                                                                  Object {
                                                                    "alignItems": "center",
                                                                    "alignSelf": "stretch",
                                                                    "backgroundColor": "transparent",
                                                                    "flexDirection": "row",
                                                                    "justifyContent": "flex-start",
                                                                    "opacity": 1,
                                                                  }
                                                                }
                                                              >
                                                                <View
                                                                  style={
                                                                    Object {
                                                                      "alignItems": "center",
                                                                      "flexDirection": "row",
                                                                      "opacity": 1,
                                                                    }
                                                                  }
                                                                >
                                                                  <View
                                                                    style={
                                                                      Object {
                                                                        "alignItems": "center",
                                                                        "flexDirection": "row",
                                                                        "opacity": 1,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Styled(Component)
                                                                      activeColor={null}
                                                                      d="M512 0c282.7776 0 512 229.2224 512 512s-229.2224 512-512 512S0 794.7776 0 512 229.2224 0 512 0z m279.04 362.8032a51.2 51.2 0 0 0-72.3968 0l-253.44 253.3888-108.6464-108.544a51.2 51.2 0 0 0-72.3968 72.3456l144.2304 144.1792 0.6144 0.6656a51.2 51.2 0 0 0 72.3968 0L791.04 435.2a51.2 51.2 0 0 0 0-72.3968z"
                                                                      disabled={false}
                                                                      disabledColor={null}
                                                                      key="checkIcon"
                                                                      size={17}
                                                                      style={false}
                                                                    >
                                                                      <Component
                                                                        activeColor={null}
                                                                        color="#3388FF"
                                                                        d="M512 0c282.7776 0 512 229.2224 512 512s-229.2224 512-512 512S0 794.7776 0 512 229.2224 0 512 0z m279.04 362.8032a51.2 51.2 0 0 0-72.3968 0l-253.44 253.3888-108.6464-108.544a51.2 51.2 0 0 0-72.3968 72.3456l144.2304 144.1792 0.6144 0.6656a51.2 51.2 0 0 0 72.3968 0L791.04 435.2a51.2 51.2 0 0 0 0-72.3968z"
                                                                        disabled={false}
                                                                        disabledColor={null}
                                                                        innerRef={[Function]}
                                                                        size={17}
                                                                        style={
                                                                          Array [
                                                                            Object {},
                                                                            false,
                                                                          ]
                                                                        }
                                                                      >
                                                                        <IconFont
                                                                          activeColor={null}
                                                                          color="#3388FF"
                                                                          d="M512 0c282.7776 0 512 229.2224 512 512s-229.2224 512-512 512S0 794.7776 0 512 229.2224 0 512 0z m279.04 362.8032a51.2 51.2 0 0 0-72.3968 0l-253.44 253.3888-108.6464-108.544a51.2 51.2 0 0 0-72.3968 72.3456l144.2304 144.1792 0.6144 0.6656a51.2 51.2 0 0 0 72.3968 0L791.04 435.2a51.2 51.2 0 0 0 0-72.3968z"
                                                                          disabled={false}
                                                                          disabledColor={null}
                                                                          fill={null}
                                                                          hFlip={false}
                                                                          height={null}
                                                                          innerRef={[Function]}
                                                                          name={null}
                                                                          size={17}
                                                                          stroke={null}
                                                                          strokeCap="round"
                                                                          strokeDash={
                                                                            Array [
                                                                              0,
                                                                              0,
                                                                            ]
                                                                          }
                                                                          strokeJoin="round"
                                                                          strokeWidth={1}
                                                                          style={
                                                                            Array [
                                                                              Object {},
                                                                              false,
                                                                            ]
                                                                          }
                                                                          vFlip={false}
                                                                          viewBox="0 0 1024 1024"
                                                                          width={null}
                                                                        >
                                                                          <View
                                                                            style={
                                                                              Array [
                                                                                Object {
                                                                                  "flexDirection": "row",
                                                                                },
                                                                                Object {
                                                                                  "height": 17,
                                                                                  "width": 17,
                                                                                },
                                                                                false,
                                                                                Array [
                                                                                  Object {},
                                                                                  false,
                                                                                ],
                                                                              ]
                                                                            }
                                                                          >
                                                                            <View
                                                                              style={
                                                                                Array [
                                                                                  Object {
                                                                                    "flexDirection": "row",
                                                                                  },
                                                                                  Object {
                                                                                    "height": 17,
                                                                                    "width": 17,
                                                                                  },
                                                                                  false,
                                                                                  Array [
                                                                                    Object {},
                                                                                    false,
                                                                                  ],
                                                                                ]
                                                                              }
                                                                            >
                                                                              <Svg
                                                                                height={17}
                                                                                key="0"
                                                                                preserveAspectRatio="xMidYMid meet"
                                                                                viewBox="0 0 1024 1024"
                                                                                width={17}
                                                                              >
                                                                                <_class
                                                                                  align="xMidYMid"
                                                                                  meetOrSlice={0}
                                                                                  minX={0}
                                                                                  minY={0}
                                                                                  style={
                                                                                    Array [
                                                                                      Object {
                                                                                        "backgroundColor": "transparent",
                                                                                      },
                                                                                      undefined,
                                                                                      false,
                                                                                      Object {
                                                                                        "flex": 0,
                                                                                        "height": 17,
                                                                                        "width": 17,
                                                                                      },
                                                                                    ]
                                                                                  }
                                                                                  vbHeight={1024}
                                                                                  vbWidth={1024}
                                                                                >
                                                                                  <RNSVGSvgView
                                                                                    align="xMidYMid"
                                                                                    meetOrSlice={0}
                                                                                    minX={0}
                                                                                    minY={0}
                                                                                    style={
                                                                                      Array [
                                                                                        Object {
                                                                                          "backgroundColor": "transparent",
                                                                                        },
                                                                                        undefined,
                                                                                        false,
                                                                                        Object {
                                                                                          "flex": 0,
                                                                                          "height": 17,
                                                                                          "width": 17,
                                                                                        },
                                                                                      ]
                                                                                    }
                                                                                    vbHeight={1024}
                                                                                    vbWidth={1024}
                                                                                  >
                                                                                    <Path
                                                                                      activeColor={null}
                                                                                      d="M512 0c282.7776 0 512 229.2224 512 512s-229.2224 512-512 512S0 794.7776 0 512 229.2224 0 512 0z m279.04 362.8032a51.2 51.2 0 0 0-72.3968 0l-253.44 253.3888-108.6464-108.544a51.2 51.2 0 0 0-72.3968 72.3456l144.2304 144.1792 0.6144 0.6656a51.2 51.2 0 0 0 72.3968 0L791.04 435.2a51.2 51.2 0 0 0 0-72.3968z"
                                                                                      disabled={false}
                                                                                      disabledColor={null}
                                                                                      fill="#3388FF"
                                                                                      height={null}
                                                                                      innerRef={[Function]}
                                                                                      stroke="#3388FF"
                                                                                      strokeCap="round"
                                                                                      strokeDash={
                                                                                        Array [
                                                                                          0,
                                                                                          0,
                                                                                        ]
                                                                                      }
                                                                                      strokeJoin="round"
                                                                                      strokeWidth={1}
                                                                                      width={null}
                                                                                    >
                                                                                      <RNSVGPath
                                                                                        d="M512 0c282.7776 0 512 229.2224 512 512s-229.2224 512-512 512S0 794.7776 0 512 229.2224 0 512 0z m279.04 362.8032a51.2 51.2 0 0 0-72.3968 0l-253.44 253.3888-108.6464-108.544a51.2 51.2 0 0 0-72.3968 72.3456l144.2304 144.1792 0.6144 0.6656a51.2 51.2 0 0 0 72.3968 0L791.04 435.2a51.2 51.2 0 0 0 0-72.3968z"
                                                                                        fill={
                                                                                          Array [
                                                                                            0,
                                                                                            0.2,
                                                                                            0.5333333333333333,
                                                                                            1,
                                                                                            1,
                                                                                          ]
                                                                                        }
                                                                                        fillOpacity={1}
                                                                                        fillRule={1}
                                                                                        matrix={
                                                                                          Array [
                                                                                            1,
                                                                                            0,
                                                                                            0,
                                                                                            1,
                                                                                            0,
                                                                                            0,
                                                                                          ]
                                                                                        }
                                                                                        opacity={1}
                                                                                        propList={
                                                                                          Array [
                                                                                            "stroke",
                                                                                            "strokeWidth",
                                                                                            "fill",
                                                                                          ]
                                                                                        }
                                                                                        stroke={
                                                                                          Array [
                                                                                            0,
                                                                                            0.2,
                                                                                            0.5333333333333333,
                                                                                            1,
                                                                                            1,
                                                                                          ]
                                                                                        }
                                                                                        strokeDasharray={null}
                                                                                        strokeDashoffset={null}
                                                                                        strokeLinecap={0}
                                                                                        strokeLinejoin={0}
                                                                                        strokeMiterlimit={4}
                                                                                        strokeOpacity={1}
                                                                                        strokeWidth={1}
                                                                                      />
                                                                                    </Path>
                                                                                  </RNSVGSvgView>
                                                                                </_class>
                                                                              </Svg>
                                                                            </View>
                                                                          </View>
                                                                        </IconFont>
                                                                      </Component>
                                                                    </Styled(Component)>
                                                                  </View>
                                                                </View>
                                                              </View>
                                                            </View>
                                                          </AnimatedComponent>
                                                        </TouchableOpacity>
                                                      </Styled(TouchableOpacity)>
                                                    </Checkbox>
                                                  </View>
                                                </View>
                                              </Styled(View)>
                                              <Styled(View)>
                                                <View
                                                  style={
                                                    Array [
                                                      Object {
                                                        "flexBasis": 0,
                                                        "flexGrow": 1,
                                                        "flexShrink": 1,
                                                        "justifyContent": "center",
                                                      },
                                                      undefined,
                                                    ]
                                                  }
                                                >
                                                  <View
                                                    style={
                                                      Array [
                                                        Object {
                                                          "flexBasis": 0,
                                                          "flexGrow": 1,
                                                          "flexShrink": 1,
                                                          "justifyContent": "center",
                                                        },
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <Styled(TYText)
                                                      style={
                                                        Array [
                                                          undefined,
                                                          undefined,
                                                        ]
                                                      }
                                                    >
                                                      <TYText
                                                        align={null}
                                                        color={null}
                                                        size="small"
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "#333",
                                                            },
                                                            Array [
                                                              undefined,
                                                              undefined,
                                                            ],
                                                          ]
                                                        }
                                                        type="title"
                                                        weight={null}
                                                      >
                                                        <Styled(Text)
                                                          align={null}
                                                          allowFontScaling={false}
                                                          color={null}
                                                          size="small"
                                                          style={
                                                            Array [
                                                              Object {
                                                                "color": "#333",
                                                              },
                                                              Array [
                                                                undefined,
                                                                undefined,
                                                              ],
                                                            ]
                                                          }
                                                          type="title"
                                                          weight={null}
                                                        >
                                                          <Text
                                                            accessible={true}
                                                            align={null}
                                                            allowFontScaling={false}
                                                            color={null}
                                                            ellipsizeMode="tail"
                                                            size="small"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "backgroundColor": "transparent",
                                                                  "color": "#333",
                                                                  "fontSize": 17,
                                                                  "lineHeight": 24,
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "#333",
                                                                  },
                                                                  Array [
                                                                    undefined,
                                                                    undefined,
                                                                  ],
                                                                ],
                                                              ]
                                                            }
                                                            type="title"
                                                            weight={null}
                                                          >
                                                            <Text
                                                              accessible={true}
                                                              align={null}
                                                              allowFontScaling={false}
                                                              color={null}
                                                              ellipsizeMode="tail"
                                                              size="small"
                                                              style={
                                                                Array [
                                                                  Object {
                                                                    "backgroundColor": "transparent",
                                                                    "color": "#333",
                                                                    "fontSize": 17,
                                                                    "lineHeight": 24,
                                                                  },
                                                                  Array [
                                                                    Object {
                                                                      "color": "#333",
                                                                    },
                                                                    Array [
                                                                      undefined,
                                                                      undefined,
                                                                    ],
                                                                  ],
                                                                ]
                                                              }
                                                              type="title"
                                                              weight={null}
                                                            >
                                                              title_2
                                                            </Text>
                                                          </Text>
                                                        </Styled(Text)>
                                                      </TYText>
                                                    </Styled(TYText)>
                                                    <Styled(TYText)
                                                      style={
                                                        Array [
                                                          undefined,
                                                          undefined,
                                                        ]
                                                      }
                                                    >
                                                      <TYText
                                                        align={null}
                                                        color={null}
                                                        size="large"
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(51, 51, 51, 0.5)",
                                                              "marginTop": 4,
                                                            },
                                                            Array [
                                                              undefined,
                                                              undefined,
                                                            ],
                                                          ]
                                                        }
                                                        type="paragraph"
                                                        weight={null}
                                                      >
                                                        <Styled(Text)
                                                          align={null}
                                                          allowFontScaling={false}
                                                          color={null}
                                                          size="large"
                                                          style={
                                                            Array [
                                                              Object {
                                                                "color": "rgba(51, 51, 51, 0.5)",
                                                                "marginTop": 4,
                                                              },
                                                              Array [
                                                                undefined,
                                                                undefined,
                                                              ],
                                                            ]
                                                          }
                                                          type="paragraph"
                                                          weight={null}
                                                        >
                                                          <Text
                                                            accessible={true}
                                                            align={null}
                                                            allowFontScaling={false}
                                                            color={null}
                                                            ellipsizeMode="tail"
                                                            size="large"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "backgroundColor": "transparent",
                                                                  "color": "#333",
                                                                  "fontSize": 17,
                                                                  "lineHeight": 24,
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "rgba(51, 51, 51, 0.5)",
                                                                    "marginTop": 4,
                                                                  },
                                                                  Array [
                                                                    undefined,
                                                                    undefined,
                                                                  ],
                                                                ],
                                                              ]
                                                            }
                                                            type="paragraph"
                                                            weight={null}
                                                          >
                                                            <Text
                                                              accessible={true}
                                                              align={null}
                                                              allowFontScaling={false}
                                                              color={null}
                                                              ellipsizeMode="tail"
                                                              size="large"
                                                              style={
                                                                Array [
                                                                  Object {
                                                                    "backgroundColor": "transparent",
                                                                    "color": "#333",
                                                                    "fontSize": 17,
                                                                    "lineHeight": 24,
                                                                  },
                                                                  Array [
                                                                    Object {
                                                                      "color": "rgba(51, 51, 51, 0.5)",
                                                                      "marginTop": 4,
                                                                    },
                                                                    Array [
                                                                      undefined,
                                                                      undefined,
                                                                    ],
                                                                  ],
                                                                ]
                                                              }
                                                              type="paragraph"
                                                              weight={null}
                                                            >
                                                              清扫 0平方米 | 工作 5分钟
                                                            </Text>
                                                          </Text>
                                                        </Styled(Text)>
                                                      </TYText>
                                                    </Styled(TYText)>
                                                  </View>
                                                </View>
                                              </Styled(View)>
                                              <Styled(TouchableOpacity)
                                                activeOpacity={0.8}
                                                disabled={false}
                                                onPress={[Function]}
                                              >
                                                <TouchableOpacity
                                                  activeOpacity={0.8}
                                                  disabled={false}
                                                  onPress={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginLeft": 20,
                                                      },
                                                      undefined,
                                                    ]
                                                  }
                                                >
                                                  <AnimatedComponent
                                                    accessible={true}
                                                    isTVSelectable={true}
                                                    onResponderGrant={[Function]}
                                                    onResponderMove={[Function]}
                                                    onResponderRelease={[Function]}
                                                    onResponderTerminate={[Function]}
                                                    onResponderTerminationRequest={[Function]}
                                                    onStartShouldSetResponder={[Function]}
                                                    style={
                                                      Array [
                                                        Array [
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginLeft": 20,
                                                          },
                                                          undefined,
                                                        ],
                                                        Object {
                                                          "opacity": 1,
                                                        },
                                                      ]
                                                    }
                                                  >
                                                    <View
                                                      accessible={true}
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Object {
                                                          "alignItems": "center",
                                                          "flexDirection": "row",
                                                          "marginLeft": 20,
                                                          "opacity": 1,
                                                        }
                                                      }
                                                    >
                                                      <View
                                                        accessible={true}
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginLeft": 20,
                                                            "opacity": 1,
                                                          }
                                                        }
                                                      >
                                                        <Styled(TYText)
                                                          style={
                                                            Array [
                                                              Object {
                                                                "color": "#7ED321",
                                                              },
                                                              undefined,
                                                            ]
                                                          }
                                                        >
                                                          <TYText
                                                            align={null}
                                                            color={null}
                                                            size="large"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "color": "rgba(51, 51, 51, 0.5)",
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "#7ED321",
                                                                  },
                                                                  undefined,
                                                                ],
                                                              ]
                                                            }
                                                            type="paragraph"
                                                            weight={null}
                                                          >
                                                            <Styled(Text)
                                                              align={null}
                                                              allowFontScaling={false}
                                                              color={null}
                                                              size="large"
                                                              style={
                                                                Array [
                                                                  Object {
                                                                    "color": "rgba(51, 51, 51, 0.5)",
                                                                  },
                                                                  Array [
                                                                    Object {
                                                                      "color": "#7ED321",
                                                                    },
                                                                    undefined,
                                                                  ],
                                                                ]
                                                              }
                                                              type="paragraph"
                                                              weight={null}
                                                            >
                                                              <Text
                                                                accessible={true}
                                                                align={null}
                                                                allowFontScaling={false}
                                                                color={null}
                                                                ellipsizeMode="tail"
                                                                size="large"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "color": "#333",
                                                                      "fontSize": 17,
                                                                      "lineHeight": 24,
                                                                    },
                                                                    Array [
                                                                      Object {
                                                                        "color": "rgba(51, 51, 51, 0.5)",
                                                                      },
                                                                      Array [
                                                                        Object {
                                                                          "color": "#7ED321",
                                                                        },
                                                                        undefined,
                                                                      ],
                                                                    ],
                                                                  ]
                                                                }
                                                                type="paragraph"
                                                                weight={null}
                                                              >
                                                                <Text
                                                                  accessible={true}
                                                                  align={null}
                                                                  allowFontScaling={false}
                                                                  color={null}
                                                                  ellipsizeMode="tail"
                                                                  size="large"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "color": "#333",
                                                                        "fontSize": 17,
                                                                        "lineHeight": 24,
                                                                      },
                                                                      Array [
                                                                        Object {
                                                                          "color": "rgba(51, 51, 51, 0.5)",
                                                                        },
                                                                        Array [
                                                                          Object {
                                                                            "color": "#7ED321",
                                                                          },
                                                                          undefined,
                                                                        ],
                                                                      ],
                                                                    ]
                                                                  }
                                                                  type="paragraph"
                                                                  weight={null}
                                                                >
                                                                  清扫成功
                                                                </Text>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TYText>
                                                        </Styled(TYText)>
                                                      </View>
                                                    </View>
                                                  </AnimatedComponent>
                                                </TouchableOpacity>
                                              </Styled(TouchableOpacity)>
                                            </View>
                                          </View>
                                        </Styled(View)>
                                      </View>
                                    </View>
                                  </AnimatedComponent>
                                </TouchableOpacity>
                              </Styled(TouchableOpacity)>
                            </TYListItem>
                          </CheckboxItem>
                        </View>
                      </View>
                    </CellRenderer>
                  </View>
                </View>
              </RCTScrollView>
            </_class>
          </ScrollViewMock>
        </VirtualizedList>
      </FlatList>
    </ThemeConsumer>
  </WithTheme(ThemeConsumer)>
</TYFlatList>
`;

exports[`TYList basic render value != undefined 1`] = `
<TYFlatList
  data={
    Array [
      Object {
        "Action": "清扫成功",
        "key": 1,
        "onChange": [MockFunction],
        "subTitle": "清扫 0平方米 | 工作 5分钟",
        "theme": Object {
          "descFontColor": "#7ED321",
        },
        "title": "title_1",
        "value": 1,
      },
      Object {
        "Action": "清扫成功",
        "key": 2,
        "onChange": [MockFunction],
        "subTitle": "清扫 0平方米 | 工作 5分钟",
        "theme": Object {
          "descFontColor": "#7ED321",
        },
        "title": "title_2",
        "value": 1,
      },
    ]
  }
  flatListRef={null}
  separatorStyle={null}
  useART={false}
>
  <WithTheme(ThemeConsumer)>
    <ThemeConsumer
      theme={null}
    >
      <FlatList
        ItemSeparatorComponent={[Function]}
        contentContainerStyle={
          Array [
            Object {
              "backgroundColor": "#f8f8f8",
            },
            undefined,
          ]
        }
        data={
          Array [
            Object {
              "Action": "清扫成功",
              "key": 1,
              "onChange": [MockFunction],
              "subTitle": "清扫 0平方米 | 工作 5分钟",
              "theme": Object {
                "descFontColor": "#7ED321",
              },
              "title": "title_1",
              "value": 1,
            },
            Object {
              "Action": "清扫成功",
              "key": 2,
              "onChange": [MockFunction],
              "subTitle": "清扫 0平方米 | 工作 5分钟",
              "theme": Object {
                "descFontColor": "#7ED321",
              },
              "title": "title_2",
              "value": 1,
            },
          ]
        }
        disableVirtualization={false}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        renderItem={[Function]}
        scrollEventThrottle={50}
        showsVerticalScrollIndicator={false}
        updateCellsBatchingPeriod={50}
        useART={false}
        windowSize={21}
      >
        <VirtualizedList
          ItemSeparatorComponent={[Function]}
          contentContainerStyle={
            Array [
              Object {
                "backgroundColor": "#f8f8f8",
              },
              undefined,
            ]
          }
          data={
            Array [
              Object {
                "Action": "清扫成功",
                "key": 1,
                "onChange": [MockFunction],
                "subTitle": "清扫 0平方米 | 工作 5分钟",
                "theme": Object {
                  "descFontColor": "#7ED321",
                },
                "title": "title_1",
                "value": 1,
              },
              Object {
                "Action": "清扫成功",
                "key": 2,
                "onChange": [MockFunction],
                "subTitle": "清扫 0平方米 | 工作 5分钟",
                "theme": Object {
                  "descFontColor": "#7ED321",
                },
                "title": "title_2",
                "value": 1,
              },
            ]
          }
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onEndReachedThreshold={2}
          renderItem={[Function]}
          scrollEventThrottle={50}
          showsVerticalScrollIndicator={false}
          updateCellsBatchingPeriod={50}
          useART={false}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <ScrollViewMock
            ItemSeparatorComponent={[Function]}
            contentContainerStyle={
              Array [
                Object {
                  "backgroundColor": "#f8f8f8",
                },
                undefined,
              ]
            }
            data={
              Array [
                Object {
                  "Action": "清扫成功",
                  "key": 1,
                  "onChange": [MockFunction],
                  "subTitle": "清扫 0平方米 | 工作 5分钟",
                  "theme": Object {
                    "descFontColor": "#7ED321",
                  },
                  "title": "title_1",
                  "value": 1,
                },
                Object {
                  "Action": "清扫成功",
                  "key": 2,
                  "onChange": [MockFunction],
                  "subTitle": "清扫 0平方米 | 工作 5分钟",
                  "theme": Object {
                    "descFontColor": "#7ED321",
                  },
                  "title": "title_2",
                  "value": 1,
                },
              ]
            }
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            renderItem={[Function]}
            scrollEventThrottle={50}
            showsVerticalScrollIndicator={false}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            useART={false}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <_class
              ItemSeparatorComponent={[Function]}
              contentContainerStyle={
                Array [
                  Object {
                    "backgroundColor": "#f8f8f8",
                  },
                  undefined,
                ]
              }
              data={
                Array [
                  Object {
                    "Action": "清扫成功",
                    "key": 1,
                    "onChange": [MockFunction],
                    "subTitle": "清扫 0平方米 | 工作 5分钟",
                    "theme": Object {
                      "descFontColor": "#7ED321",
                    },
                    "title": "title_1",
                    "value": 1,
                  },
                  Object {
                    "Action": "清扫成功",
                    "key": 2,
                    "onChange": [MockFunction],
                    "subTitle": "清扫 0平方米 | 工作 5分钟",
                    "theme": Object {
                      "descFontColor": "#7ED321",
                    },
                    "title": "title_2",
                    "value": 1,
                  },
                ]
              }
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              numColumns={1}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={2}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              renderItem={[Function]}
              scrollEventThrottle={50}
              showsVerticalScrollIndicator={false}
              stickyHeaderIndices={Array []}
              updateCellsBatchingPeriod={50}
              useART={false}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <RCTScrollView
                ItemSeparatorComponent={[Function]}
                contentContainerStyle={
                  Array [
                    Object {
                      "backgroundColor": "#f8f8f8",
                    },
                    undefined,
                  ]
                }
                data={
                  Array [
                    Object {
                      "Action": "清扫成功",
                      "key": 1,
                      "onChange": [MockFunction],
                      "subTitle": "清扫 0平方米 | 工作 5分钟",
                      "theme": Object {
                        "descFontColor": "#7ED321",
                      },
                      "title": "title_1",
                      "value": 1,
                    },
                    Object {
                      "Action": "清扫成功",
                      "key": 2,
                      "onChange": [MockFunction],
                      "subTitle": "清扫 0平方米 | 工作 5分钟",
                      "theme": Object {
                        "descFontColor": "#7ED321",
                      },
                      "title": "title_2",
                      "value": 1,
                    },
                  ]
                }
                disableVirtualization={false}
                getItem={[Function]}
                getItemCount={[Function]}
                horizontal={false}
                initialNumToRender={10}
                keyExtractor={[Function]}
                maxToRenderPerBatch={10}
                numColumns={1}
                onContentSizeChange={[Function]}
                onEndReachedThreshold={2}
                onLayout={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                renderItem={[Function]}
                scrollEventThrottle={50}
                showsVerticalScrollIndicator={false}
                stickyHeaderIndices={Array []}
                updateCellsBatchingPeriod={50}
                useART={false}
                viewabilityConfigCallbackPairs={Array []}
                windowSize={21}
              >
                <View>
                  <View>
                    <CellRenderer
                      ItemSeparatorComponent={[Function]}
                      cellKey={1}
                      fillRateHelper={
                        FillRateHelper {
                          "_anyBlankStartTime": null,
                          "_enabled": false,
                          "_getFrameMetrics": [Function],
                          "_info": Info {
                            "any_blank_count": 0,
                            "any_blank_ms": 0,
                            "any_blank_speed_sum": 0,
                            "mostly_blank_count": 0,
                            "mostly_blank_ms": 0,
                            "pixels_blank": 0,
                            "pixels_sampled": 0,
                            "pixels_scrolled": 0,
                            "sample_count": 0,
                            "total_time_spent": 0,
                          },
                          "_mostlyBlankStartTime": null,
                          "_samplesStartTime": null,
                        }
                      }
                      horizontal={false}
                      index={0}
                      inversionStyle={null}
                      item={
                        Object {
                          "Action": "清扫成功",
                          "key": 1,
                          "onChange": [MockFunction],
                          "subTitle": "清扫 0平方米 | 工作 5分钟",
                          "theme": Object {
                            "descFontColor": "#7ED321",
                          },
                          "title": "title_1",
                          "value": 1,
                        }
                      }
                      key="1"
                      onLayout={[Function]}
                      onUnmount={[Function]}
                      onUpdateSeparators={[Function]}
                      parentProps={
                        Object {
                          "ItemSeparatorComponent": [Function],
                          "contentContainerStyle": Array [
                            Object {
                              "backgroundColor": "#f8f8f8",
                            },
                            undefined,
                          ],
                          "data": Array [
                            Object {
                              "Action": "清扫成功",
                              "key": 1,
                              "onChange": [MockFunction],
                              "subTitle": "清扫 0平方米 | 工作 5分钟",
                              "theme": Object {
                                "descFontColor": "#7ED321",
                              },
                              "title": "title_1",
                              "value": 1,
                            },
                            Object {
                              "Action": "清扫成功",
                              "key": 2,
                              "onChange": [MockFunction],
                              "subTitle": "清扫 0平方米 | 工作 5分钟",
                              "theme": Object {
                                "descFontColor": "#7ED321",
                              },
                              "title": "title_2",
                              "value": 1,
                            },
                          ],
                          "disableVirtualization": false,
                          "getItem": [Function],
                          "getItemCount": [Function],
                          "horizontal": false,
                          "initialNumToRender": 10,
                          "keyExtractor": [Function],
                          "maxToRenderPerBatch": 10,
                          "numColumns": 1,
                          "onEndReachedThreshold": 2,
                          "renderItem": [Function],
                          "scrollEventThrottle": 50,
                          "showsVerticalScrollIndicator": false,
                          "updateCellsBatchingPeriod": 50,
                          "useART": false,
                          "viewabilityConfigCallbackPairs": Array [],
                          "windowSize": 21,
                        }
                      }
                    >
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <TYListItem
                            Action={
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  }
                                }
                              >
                                <Styled(TYText)
                                  style={
                                    Array [
                                      Object {
                                        "color": "#7ED321",
                                      },
                                      undefined,
                                    ]
                                  }
                                >
                                  1
                                </Styled(TYText)>
                                清扫成功
                              </View>
                            }
                            Icon={null}
                            actionDisabled={false}
                            actionType="auto"
                            arrow={false}
                            arrowColor={null}
                            arrowUseIcon={false}
                            disabled={false}
                            iconColor={null}
                            iconSize={null}
                            iconType="auto"
                            imageFollowIconColor={true}
                            key="1"
                            needUpdate={true}
                            onChange={[MockFunction]}
                            onPress={null}
                            styles={Object {}}
                            subTitle="清扫 0平方米 | 工作 5分钟"
                            theme={
                              Object {
                                "descFontColor": "#7ED321",
                              }
                            }
                            title="title_1"
                            useART={false}
                          >
                            <Styled(TouchableOpacity)
                              Action={
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Styled(TYText)
                                    style={
                                      Array [
                                        Object {
                                          "color": "#7ED321",
                                        },
                                        undefined,
                                      ]
                                    }
                                  >
                                    1
                                  </Styled(TYText)>
                                  清扫成功
                                </View>
                              }
                              Icon={null}
                              actionType="auto"
                              activeOpacity={0.8}
                              arrow={false}
                              arrowColor={null}
                              arrowUseIcon={false}
                              disabled={false}
                              iconColor={null}
                              iconSize={null}
                              iconType="auto"
                              imageFollowIconColor={true}
                              needUpdate={true}
                              onChange={[MockFunction]}
                              onPress={null}
                              style={
                                Array [
                                  false,
                                  undefined,
                                  undefined,
                                  undefined,
                                ]
                              }
                              useART={false}
                            >
                              <TouchableOpacity
                                Action={
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      }
                                    }
                                  >
                                    <Styled(TYText)
                                      style={
                                        Array [
                                          Object {
                                            "color": "#7ED321",
                                          },
                                          undefined,
                                        ]
                                      }
                                    >
                                      1
                                    </Styled(TYText)>
                                    清扫成功
                                  </View>
                                }
                                Icon={null}
                                actionType="auto"
                                activeOpacity={0.8}
                                arrow={false}
                                arrowColor={null}
                                arrowUseIcon={false}
                                disabled={false}
                                iconColor={null}
                                iconSize={null}
                                iconType="auto"
                                imageFollowIconColor={true}
                                needUpdate={true}
                                onChange={[MockFunction]}
                                onPress={null}
                                style={
                                  Array [
                                    Object {
                                      "alignSelf": "stretch",
                                      "backgroundColor": "#fff",
                                      "borderRadius": 0,
                                      "flexGrow": 0,
                                      "marginBottom": 0,
                                      "marginLeft": 0,
                                      "marginRight": 0,
                                      "marginTop": 0,
                                      "minHeight": 48,
                                    },
                                    Array [
                                      false,
                                      undefined,
                                      undefined,
                                      undefined,
                                    ],
                                  ]
                                }
                                useART={false}
                              >
                                <AnimatedComponent
                                  accessible={true}
                                  isTVSelectable={true}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Array [
                                      Array [
                                        Object {
                                          "alignSelf": "stretch",
                                          "backgroundColor": "#fff",
                                          "borderRadius": 0,
                                          "flexGrow": 0,
                                          "marginBottom": 0,
                                          "marginLeft": 0,
                                          "marginRight": 0,
                                          "marginTop": 0,
                                          "minHeight": 48,
                                        },
                                        Array [
                                          false,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                      ],
                                      Object {
                                        "opacity": 1,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    accessible={true}
                                    isTVSelectable={true}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      Object {
                                        "alignSelf": "stretch",
                                        "backgroundColor": "#fff",
                                        "borderRadius": 0,
                                        "flexGrow": 0,
                                        "marginBottom": 0,
                                        "marginLeft": 0,
                                        "marginRight": 0,
                                        "marginTop": 0,
                                        "minHeight": 48,
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <View
                                      accessible={true}
                                      isTVSelectable={true}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        Object {
                                          "alignSelf": "stretch",
                                          "backgroundColor": "#fff",
                                          "borderRadius": 0,
                                          "flexGrow": 0,
                                          "marginBottom": 0,
                                          "marginLeft": 0,
                                          "marginRight": 0,
                                          "marginTop": 0,
                                          "minHeight": 48,
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <Styled(View)
                                        disabled={false}
                                        style={
                                          Array [
                                            false,
                                            undefined,
                                            undefined,
                                          ]
                                        }
                                      >
                                        <View
                                          disabled={false}
                                          style={
                                            Array [
                                              Object {
                                                "alignItems": "center",
                                                "borderRadius": 0,
                                                "flexDirection": "row",
                                                "opacity": 1,
                                                "paddingBottom": 12,
                                                "paddingLeft": 28,
                                                "paddingRight": 28,
                                                "paddingTop": 12,
                                              },
                                              Array [
                                                false,
                                                undefined,
                                                undefined,
                                              ],
                                            ]
                                          }
                                        >
                                          <View
                                            disabled={false}
                                            style={
                                              Array [
                                                Object {
                                                  "alignItems": "center",
                                                  "borderRadius": 0,
                                                  "flexDirection": "row",
                                                  "opacity": 1,
                                                  "paddingBottom": 12,
                                                  "paddingLeft": 28,
                                                  "paddingRight": 28,
                                                  "paddingTop": 12,
                                                },
                                                Array [
                                                  false,
                                                  undefined,
                                                  undefined,
                                                ],
                                              ]
                                            }
                                          >
                                            <Styled(View)>
                                              <View
                                                style={
                                                  Array [
                                                    Object {
                                                      "flexBasis": 0,
                                                      "flexGrow": 1,
                                                      "flexShrink": 1,
                                                      "justifyContent": "center",
                                                    },
                                                    undefined,
                                                  ]
                                                }
                                              >
                                                <View
                                                  style={
                                                    Array [
                                                      Object {
                                                        "flexBasis": 0,
                                                        "flexGrow": 1,
                                                        "flexShrink": 1,
                                                        "justifyContent": "center",
                                                      },
                                                      undefined,
                                                    ]
                                                  }
                                                >
                                                  <Styled(TYText)
                                                    style={
                                                      Array [
                                                        undefined,
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <TYText
                                                      align={null}
                                                      color={null}
                                                      size="small"
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "#333",
                                                          },
                                                          Array [
                                                            undefined,
                                                            undefined,
                                                          ],
                                                        ]
                                                      }
                                                      type="title"
                                                      weight={null}
                                                    >
                                                      <Styled(Text)
                                                        align={null}
                                                        allowFontScaling={false}
                                                        color={null}
                                                        size="small"
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "#333",
                                                            },
                                                            Array [
                                                              undefined,
                                                              undefined,
                                                            ],
                                                          ]
                                                        }
                                                        type="title"
                                                        weight={null}
                                                      >
                                                        <Text
                                                          accessible={true}
                                                          align={null}
                                                          allowFontScaling={false}
                                                          color={null}
                                                          ellipsizeMode="tail"
                                                          size="small"
                                                          style={
                                                            Array [
                                                              Object {
                                                                "backgroundColor": "transparent",
                                                                "color": "#333",
                                                                "fontSize": 17,
                                                                "lineHeight": 24,
                                                              },
                                                              Array [
                                                                Object {
                                                                  "color": "#333",
                                                                },
                                                                Array [
                                                                  undefined,
                                                                  undefined,
                                                                ],
                                                              ],
                                                            ]
                                                          }
                                                          type="title"
                                                          weight={null}
                                                        >
                                                          <Text
                                                            accessible={true}
                                                            align={null}
                                                            allowFontScaling={false}
                                                            color={null}
                                                            ellipsizeMode="tail"
                                                            size="small"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "backgroundColor": "transparent",
                                                                  "color": "#333",
                                                                  "fontSize": 17,
                                                                  "lineHeight": 24,
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "#333",
                                                                  },
                                                                  Array [
                                                                    undefined,
                                                                    undefined,
                                                                  ],
                                                                ],
                                                              ]
                                                            }
                                                            type="title"
                                                            weight={null}
                                                          >
                                                            title_1
                                                          </Text>
                                                        </Text>
                                                      </Styled(Text)>
                                                    </TYText>
                                                  </Styled(TYText)>
                                                  <Styled(TYText)
                                                    style={
                                                      Array [
                                                        undefined,
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <TYText
                                                      align={null}
                                                      color={null}
                                                      size="large"
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(51, 51, 51, 0.5)",
                                                            "marginTop": 4,
                                                          },
                                                          Array [
                                                            undefined,
                                                            undefined,
                                                          ],
                                                        ]
                                                      }
                                                      type="paragraph"
                                                      weight={null}
                                                    >
                                                      <Styled(Text)
                                                        align={null}
                                                        allowFontScaling={false}
                                                        color={null}
                                                        size="large"
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(51, 51, 51, 0.5)",
                                                              "marginTop": 4,
                                                            },
                                                            Array [
                                                              undefined,
                                                              undefined,
                                                            ],
                                                          ]
                                                        }
                                                        type="paragraph"
                                                        weight={null}
                                                      >
                                                        <Text
                                                          accessible={true}
                                                          align={null}
                                                          allowFontScaling={false}
                                                          color={null}
                                                          ellipsizeMode="tail"
                                                          size="large"
                                                          style={
                                                            Array [
                                                              Object {
                                                                "backgroundColor": "transparent",
                                                                "color": "#333",
                                                                "fontSize": 17,
                                                                "lineHeight": 24,
                                                              },
                                                              Array [
                                                                Object {
                                                                  "color": "rgba(51, 51, 51, 0.5)",
                                                                  "marginTop": 4,
                                                                },
                                                                Array [
                                                                  undefined,
                                                                  undefined,
                                                                ],
                                                              ],
                                                            ]
                                                          }
                                                          type="paragraph"
                                                          weight={null}
                                                        >
                                                          <Text
                                                            accessible={true}
                                                            align={null}
                                                            allowFontScaling={false}
                                                            color={null}
                                                            ellipsizeMode="tail"
                                                            size="large"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "backgroundColor": "transparent",
                                                                  "color": "#333",
                                                                  "fontSize": 17,
                                                                  "lineHeight": 24,
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "rgba(51, 51, 51, 0.5)",
                                                                    "marginTop": 4,
                                                                  },
                                                                  Array [
                                                                    undefined,
                                                                    undefined,
                                                                  ],
                                                                ],
                                                              ]
                                                            }
                                                            type="paragraph"
                                                            weight={null}
                                                          >
                                                            清扫 0平方米 | 工作 5分钟
                                                          </Text>
                                                        </Text>
                                                      </Styled(Text)>
                                                    </TYText>
                                                  </Styled(TYText)>
                                                </View>
                                              </View>
                                            </Styled(View)>
                                            <Styled(TouchableOpacity)
                                              activeOpacity={0.8}
                                              disabled={false}
                                              onPress={null}
                                            >
                                              <TouchableOpacity
                                                activeOpacity={0.8}
                                                disabled={false}
                                                onPress={null}
                                                style={
                                                  Array [
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginLeft": 20,
                                                    },
                                                    undefined,
                                                  ]
                                                }
                                              >
                                                <AnimatedComponent
                                                  accessible={true}
                                                  isTVSelectable={true}
                                                  onResponderGrant={[Function]}
                                                  onResponderMove={[Function]}
                                                  onResponderRelease={[Function]}
                                                  onResponderTerminate={[Function]}
                                                  onResponderTerminationRequest={[Function]}
                                                  onStartShouldSetResponder={[Function]}
                                                  style={
                                                    Array [
                                                      Array [
                                                        Object {
                                                          "alignItems": "center",
                                                          "flexDirection": "row",
                                                          "marginLeft": 20,
                                                        },
                                                        undefined,
                                                      ],
                                                      Object {
                                                        "opacity": 1,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <View
                                                    accessible={true}
                                                    isTVSelectable={true}
                                                    onResponderGrant={[Function]}
                                                    onResponderMove={[Function]}
                                                    onResponderRelease={[Function]}
                                                    onResponderTerminate={[Function]}
                                                    onResponderTerminationRequest={[Function]}
                                                    onStartShouldSetResponder={[Function]}
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginLeft": 20,
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    <View
                                                      accessible={true}
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Object {
                                                          "alignItems": "center",
                                                          "flexDirection": "row",
                                                          "marginLeft": 20,
                                                          "opacity": 1,
                                                        }
                                                      }
                                                    >
                                                      <View
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                          }
                                                        }
                                                      >
                                                        <View
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                            }
                                                          }
                                                        >
                                                          <Styled(TYText)
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "color": "#7ED321",
                                                                },
                                                                undefined,
                                                              ]
                                                            }
                                                          >
                                                            <TYText
                                                              align={null}
                                                              color={null}
                                                              size="large"
                                                              style={
                                                                Array [
                                                                  Object {
                                                                    "color": "rgba(51, 51, 51, 0.5)",
                                                                  },
                                                                  Array [
                                                                    Object {
                                                                      "color": "#7ED321",
                                                                    },
                                                                    undefined,
                                                                  ],
                                                                ]
                                                              }
                                                              type="paragraph"
                                                              weight={null}
                                                            >
                                                              <Styled(Text)
                                                                align={null}
                                                                allowFontScaling={false}
                                                                color={null}
                                                                size="large"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "color": "rgba(51, 51, 51, 0.5)",
                                                                    },
                                                                    Array [
                                                                      Object {
                                                                        "color": "#7ED321",
                                                                      },
                                                                      undefined,
                                                                    ],
                                                                  ]
                                                                }
                                                                type="paragraph"
                                                                weight={null}
                                                              >
                                                                <Text
                                                                  accessible={true}
                                                                  align={null}
                                                                  allowFontScaling={false}
                                                                  color={null}
                                                                  ellipsizeMode="tail"
                                                                  size="large"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "color": "#333",
                                                                        "fontSize": 17,
                                                                        "lineHeight": 24,
                                                                      },
                                                                      Array [
                                                                        Object {
                                                                          "color": "rgba(51, 51, 51, 0.5)",
                                                                        },
                                                                        Array [
                                                                          Object {
                                                                            "color": "#7ED321",
                                                                          },
                                                                          undefined,
                                                                        ],
                                                                      ],
                                                                    ]
                                                                  }
                                                                  type="paragraph"
                                                                  weight={null}
                                                                >
                                                                  <Text
                                                                    accessible={true}
                                                                    align={null}
                                                                    allowFontScaling={false}
                                                                    color={null}
                                                                    ellipsizeMode="tail"
                                                                    size="large"
                                                                    style={
                                                                      Array [
                                                                        Object {
                                                                          "backgroundColor": "transparent",
                                                                          "color": "#333",
                                                                          "fontSize": 17,
                                                                          "lineHeight": 24,
                                                                        },
                                                                        Array [
                                                                          Object {
                                                                            "color": "rgba(51, 51, 51, 0.5)",
                                                                          },
                                                                          Array [
                                                                            Object {
                                                                              "color": "#7ED321",
                                                                            },
                                                                            undefined,
                                                                          ],
                                                                        ],
                                                                      ]
                                                                    }
                                                                    type="paragraph"
                                                                    weight={null}
                                                                  >
                                                                    1
                                                                  </Text>
                                                                </Text>
                                                              </Styled(Text)>
                                                            </TYText>
                                                          </Styled(TYText)>
                                                          清扫成功
                                                        </View>
                                                      </View>
                                                    </View>
                                                  </View>
                                                </AnimatedComponent>
                                              </TouchableOpacity>
                                            </Styled(TouchableOpacity)>
                                          </View>
                                        </View>
                                      </Styled(View)>
                                    </View>
                                  </View>
                                </AnimatedComponent>
                              </TouchableOpacity>
                            </Styled(TouchableOpacity)>
                          </TYListItem>
                          <ItemSeparatorComponent
                            highlighted={false}
                            leadingItem={
                              Object {
                                "Action": "清扫成功",
                                "key": 1,
                                "onChange": [MockFunction],
                                "subTitle": "清扫 0平方米 | 工作 5分钟",
                                "theme": Object {
                                  "descFontColor": "#7ED321",
                                },
                                "title": "title_1",
                                "value": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(51, 51, 51, 0.1)",
                                    "height": 0.5,
                                    "marginLeft": 32,
                                  },
                                  null,
                                ]
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "rgba(51, 51, 51, 0.1)",
                                      "height": 0.5,
                                      "marginLeft": 32,
                                    },
                                    null,
                                  ]
                                }
                              />
                            </View>
                          </ItemSeparatorComponent>
                        </View>
                      </View>
                    </CellRenderer>
                    <CellRenderer
                      cellKey={2}
                      fillRateHelper={
                        FillRateHelper {
                          "_anyBlankStartTime": null,
                          "_enabled": false,
                          "_getFrameMetrics": [Function],
                          "_info": Info {
                            "any_blank_count": 0,
                            "any_blank_ms": 0,
                            "any_blank_speed_sum": 0,
                            "mostly_blank_count": 0,
                            "mostly_blank_ms": 0,
                            "pixels_blank": 0,
                            "pixels_sampled": 0,
                            "pixels_scrolled": 0,
                            "sample_count": 0,
                            "total_time_spent": 0,
                          },
                          "_mostlyBlankStartTime": null,
                          "_samplesStartTime": null,
                        }
                      }
                      horizontal={false}
                      index={1}
                      inversionStyle={null}
                      item={
                        Object {
                          "Action": "清扫成功",
                          "key": 2,
                          "onChange": [MockFunction],
                          "subTitle": "清扫 0平方米 | 工作 5分钟",
                          "theme": Object {
                            "descFontColor": "#7ED321",
                          },
                          "title": "title_2",
                          "value": 1,
                        }
                      }
                      key="2"
                      onLayout={[Function]}
                      onUnmount={[Function]}
                      onUpdateSeparators={[Function]}
                      parentProps={
                        Object {
                          "ItemSeparatorComponent": [Function],
                          "contentContainerStyle": Array [
                            Object {
                              "backgroundColor": "#f8f8f8",
                            },
                            undefined,
                          ],
                          "data": Array [
                            Object {
                              "Action": "清扫成功",
                              "key": 1,
                              "onChange": [MockFunction],
                              "subTitle": "清扫 0平方米 | 工作 5分钟",
                              "theme": Object {
                                "descFontColor": "#7ED321",
                              },
                              "title": "title_1",
                              "value": 1,
                            },
                            Object {
                              "Action": "清扫成功",
                              "key": 2,
                              "onChange": [MockFunction],
                              "subTitle": "清扫 0平方米 | 工作 5分钟",
                              "theme": Object {
                                "descFontColor": "#7ED321",
                              },
                              "title": "title_2",
                              "value": 1,
                            },
                          ],
                          "disableVirtualization": false,
                          "getItem": [Function],
                          "getItemCount": [Function],
                          "horizontal": false,
                          "initialNumToRender": 10,
                          "keyExtractor": [Function],
                          "maxToRenderPerBatch": 10,
                          "numColumns": 1,
                          "onEndReachedThreshold": 2,
                          "renderItem": [Function],
                          "scrollEventThrottle": 50,
                          "showsVerticalScrollIndicator": false,
                          "updateCellsBatchingPeriod": 50,
                          "useART": false,
                          "viewabilityConfigCallbackPairs": Array [],
                          "windowSize": 21,
                        }
                      }
                      prevCellKey={1}
                    >
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <TYListItem
                            Action={
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  }
                                }
                              >
                                <Styled(TYText)
                                  style={
                                    Array [
                                      Object {
                                        "color": "#7ED321",
                                      },
                                      undefined,
                                    ]
                                  }
                                >
                                  1
                                </Styled(TYText)>
                                清扫成功
                              </View>
                            }
                            Icon={null}
                            actionDisabled={false}
                            actionType="auto"
                            arrow={false}
                            arrowColor={null}
                            arrowUseIcon={false}
                            disabled={false}
                            iconColor={null}
                            iconSize={null}
                            iconType="auto"
                            imageFollowIconColor={true}
                            key="2"
                            needUpdate={true}
                            onChange={[MockFunction]}
                            onPress={null}
                            styles={Object {}}
                            subTitle="清扫 0平方米 | 工作 5分钟"
                            theme={
                              Object {
                                "descFontColor": "#7ED321",
                              }
                            }
                            title="title_2"
                            useART={false}
                          >
                            <Styled(TouchableOpacity)
                              Action={
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Styled(TYText)
                                    style={
                                      Array [
                                        Object {
                                          "color": "#7ED321",
                                        },
                                        undefined,
                                      ]
                                    }
                                  >
                                    1
                                  </Styled(TYText)>
                                  清扫成功
                                </View>
                              }
                              Icon={null}
                              actionType="auto"
                              activeOpacity={0.8}
                              arrow={false}
                              arrowColor={null}
                              arrowUseIcon={false}
                              disabled={false}
                              iconColor={null}
                              iconSize={null}
                              iconType="auto"
                              imageFollowIconColor={true}
                              needUpdate={true}
                              onChange={[MockFunction]}
                              onPress={null}
                              style={
                                Array [
                                  false,
                                  undefined,
                                  undefined,
                                  undefined,
                                ]
                              }
                              useART={false}
                            >
                              <TouchableOpacity
                                Action={
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      }
                                    }
                                  >
                                    <Styled(TYText)
                                      style={
                                        Array [
                                          Object {
                                            "color": "#7ED321",
                                          },
                                          undefined,
                                        ]
                                      }
                                    >
                                      1
                                    </Styled(TYText)>
                                    清扫成功
                                  </View>
                                }
                                Icon={null}
                                actionType="auto"
                                activeOpacity={0.8}
                                arrow={false}
                                arrowColor={null}
                                arrowUseIcon={false}
                                disabled={false}
                                iconColor={null}
                                iconSize={null}
                                iconType="auto"
                                imageFollowIconColor={true}
                                needUpdate={true}
                                onChange={[MockFunction]}
                                onPress={null}
                                style={
                                  Array [
                                    Object {
                                      "alignSelf": "stretch",
                                      "backgroundColor": "#fff",
                                      "borderRadius": 0,
                                      "flexGrow": 0,
                                      "marginBottom": 0,
                                      "marginLeft": 0,
                                      "marginRight": 0,
                                      "marginTop": 0,
                                      "minHeight": 48,
                                    },
                                    Array [
                                      false,
                                      undefined,
                                      undefined,
                                      undefined,
                                    ],
                                  ]
                                }
                                useART={false}
                              >
                                <AnimatedComponent
                                  accessible={true}
                                  isTVSelectable={true}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Array [
                                      Array [
                                        Object {
                                          "alignSelf": "stretch",
                                          "backgroundColor": "#fff",
                                          "borderRadius": 0,
                                          "flexGrow": 0,
                                          "marginBottom": 0,
                                          "marginLeft": 0,
                                          "marginRight": 0,
                                          "marginTop": 0,
                                          "minHeight": 48,
                                        },
                                        Array [
                                          false,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                      ],
                                      Object {
                                        "opacity": 1,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    accessible={true}
                                    isTVSelectable={true}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      Object {
                                        "alignSelf": "stretch",
                                        "backgroundColor": "#fff",
                                        "borderRadius": 0,
                                        "flexGrow": 0,
                                        "marginBottom": 0,
                                        "marginLeft": 0,
                                        "marginRight": 0,
                                        "marginTop": 0,
                                        "minHeight": 48,
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <View
                                      accessible={true}
                                      isTVSelectable={true}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        Object {
                                          "alignSelf": "stretch",
                                          "backgroundColor": "#fff",
                                          "borderRadius": 0,
                                          "flexGrow": 0,
                                          "marginBottom": 0,
                                          "marginLeft": 0,
                                          "marginRight": 0,
                                          "marginTop": 0,
                                          "minHeight": 48,
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <Styled(View)
                                        disabled={false}
                                        style={
                                          Array [
                                            false,
                                            undefined,
                                            undefined,
                                          ]
                                        }
                                      >
                                        <View
                                          disabled={false}
                                          style={
                                            Array [
                                              Object {
                                                "alignItems": "center",
                                                "borderRadius": 0,
                                                "flexDirection": "row",
                                                "opacity": 1,
                                                "paddingBottom": 12,
                                                "paddingLeft": 28,
                                                "paddingRight": 28,
                                                "paddingTop": 12,
                                              },
                                              Array [
                                                false,
                                                undefined,
                                                undefined,
                                              ],
                                            ]
                                          }
                                        >
                                          <View
                                            disabled={false}
                                            style={
                                              Array [
                                                Object {
                                                  "alignItems": "center",
                                                  "borderRadius": 0,
                                                  "flexDirection": "row",
                                                  "opacity": 1,
                                                  "paddingBottom": 12,
                                                  "paddingLeft": 28,
                                                  "paddingRight": 28,
                                                  "paddingTop": 12,
                                                },
                                                Array [
                                                  false,
                                                  undefined,
                                                  undefined,
                                                ],
                                              ]
                                            }
                                          >
                                            <Styled(View)>
                                              <View
                                                style={
                                                  Array [
                                                    Object {
                                                      "flexBasis": 0,
                                                      "flexGrow": 1,
                                                      "flexShrink": 1,
                                                      "justifyContent": "center",
                                                    },
                                                    undefined,
                                                  ]
                                                }
                                              >
                                                <View
                                                  style={
                                                    Array [
                                                      Object {
                                                        "flexBasis": 0,
                                                        "flexGrow": 1,
                                                        "flexShrink": 1,
                                                        "justifyContent": "center",
                                                      },
                                                      undefined,
                                                    ]
                                                  }
                                                >
                                                  <Styled(TYText)
                                                    style={
                                                      Array [
                                                        undefined,
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <TYText
                                                      align={null}
                                                      color={null}
                                                      size="small"
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "#333",
                                                          },
                                                          Array [
                                                            undefined,
                                                            undefined,
                                                          ],
                                                        ]
                                                      }
                                                      type="title"
                                                      weight={null}
                                                    >
                                                      <Styled(Text)
                                                        align={null}
                                                        allowFontScaling={false}
                                                        color={null}
                                                        size="small"
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "#333",
                                                            },
                                                            Array [
                                                              undefined,
                                                              undefined,
                                                            ],
                                                          ]
                                                        }
                                                        type="title"
                                                        weight={null}
                                                      >
                                                        <Text
                                                          accessible={true}
                                                          align={null}
                                                          allowFontScaling={false}
                                                          color={null}
                                                          ellipsizeMode="tail"
                                                          size="small"
                                                          style={
                                                            Array [
                                                              Object {
                                                                "backgroundColor": "transparent",
                                                                "color": "#333",
                                                                "fontSize": 17,
                                                                "lineHeight": 24,
                                                              },
                                                              Array [
                                                                Object {
                                                                  "color": "#333",
                                                                },
                                                                Array [
                                                                  undefined,
                                                                  undefined,
                                                                ],
                                                              ],
                                                            ]
                                                          }
                                                          type="title"
                                                          weight={null}
                                                        >
                                                          <Text
                                                            accessible={true}
                                                            align={null}
                                                            allowFontScaling={false}
                                                            color={null}
                                                            ellipsizeMode="tail"
                                                            size="small"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "backgroundColor": "transparent",
                                                                  "color": "#333",
                                                                  "fontSize": 17,
                                                                  "lineHeight": 24,
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "#333",
                                                                  },
                                                                  Array [
                                                                    undefined,
                                                                    undefined,
                                                                  ],
                                                                ],
                                                              ]
                                                            }
                                                            type="title"
                                                            weight={null}
                                                          >
                                                            title_2
                                                          </Text>
                                                        </Text>
                                                      </Styled(Text)>
                                                    </TYText>
                                                  </Styled(TYText)>
                                                  <Styled(TYText)
                                                    style={
                                                      Array [
                                                        undefined,
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <TYText
                                                      align={null}
                                                      color={null}
                                                      size="large"
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(51, 51, 51, 0.5)",
                                                            "marginTop": 4,
                                                          },
                                                          Array [
                                                            undefined,
                                                            undefined,
                                                          ],
                                                        ]
                                                      }
                                                      type="paragraph"
                                                      weight={null}
                                                    >
                                                      <Styled(Text)
                                                        align={null}
                                                        allowFontScaling={false}
                                                        color={null}
                                                        size="large"
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(51, 51, 51, 0.5)",
                                                              "marginTop": 4,
                                                            },
                                                            Array [
                                                              undefined,
                                                              undefined,
                                                            ],
                                                          ]
                                                        }
                                                        type="paragraph"
                                                        weight={null}
                                                      >
                                                        <Text
                                                          accessible={true}
                                                          align={null}
                                                          allowFontScaling={false}
                                                          color={null}
                                                          ellipsizeMode="tail"
                                                          size="large"
                                                          style={
                                                            Array [
                                                              Object {
                                                                "backgroundColor": "transparent",
                                                                "color": "#333",
                                                                "fontSize": 17,
                                                                "lineHeight": 24,
                                                              },
                                                              Array [
                                                                Object {
                                                                  "color": "rgba(51, 51, 51, 0.5)",
                                                                  "marginTop": 4,
                                                                },
                                                                Array [
                                                                  undefined,
                                                                  undefined,
                                                                ],
                                                              ],
                                                            ]
                                                          }
                                                          type="paragraph"
                                                          weight={null}
                                                        >
                                                          <Text
                                                            accessible={true}
                                                            align={null}
                                                            allowFontScaling={false}
                                                            color={null}
                                                            ellipsizeMode="tail"
                                                            size="large"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "backgroundColor": "transparent",
                                                                  "color": "#333",
                                                                  "fontSize": 17,
                                                                  "lineHeight": 24,
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "rgba(51, 51, 51, 0.5)",
                                                                    "marginTop": 4,
                                                                  },
                                                                  Array [
                                                                    undefined,
                                                                    undefined,
                                                                  ],
                                                                ],
                                                              ]
                                                            }
                                                            type="paragraph"
                                                            weight={null}
                                                          >
                                                            清扫 0平方米 | 工作 5分钟
                                                          </Text>
                                                        </Text>
                                                      </Styled(Text)>
                                                    </TYText>
                                                  </Styled(TYText)>
                                                </View>
                                              </View>
                                            </Styled(View)>
                                            <Styled(TouchableOpacity)
                                              activeOpacity={0.8}
                                              disabled={false}
                                              onPress={null}
                                            >
                                              <TouchableOpacity
                                                activeOpacity={0.8}
                                                disabled={false}
                                                onPress={null}
                                                style={
                                                  Array [
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginLeft": 20,
                                                    },
                                                    undefined,
                                                  ]
                                                }
                                              >
                                                <AnimatedComponent
                                                  accessible={true}
                                                  isTVSelectable={true}
                                                  onResponderGrant={[Function]}
                                                  onResponderMove={[Function]}
                                                  onResponderRelease={[Function]}
                                                  onResponderTerminate={[Function]}
                                                  onResponderTerminationRequest={[Function]}
                                                  onStartShouldSetResponder={[Function]}
                                                  style={
                                                    Array [
                                                      Array [
                                                        Object {
                                                          "alignItems": "center",
                                                          "flexDirection": "row",
                                                          "marginLeft": 20,
                                                        },
                                                        undefined,
                                                      ],
                                                      Object {
                                                        "opacity": 1,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <View
                                                    accessible={true}
                                                    isTVSelectable={true}
                                                    onResponderGrant={[Function]}
                                                    onResponderMove={[Function]}
                                                    onResponderRelease={[Function]}
                                                    onResponderTerminate={[Function]}
                                                    onResponderTerminationRequest={[Function]}
                                                    onStartShouldSetResponder={[Function]}
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginLeft": 20,
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    <View
                                                      accessible={true}
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Object {
                                                          "alignItems": "center",
                                                          "flexDirection": "row",
                                                          "marginLeft": 20,
                                                          "opacity": 1,
                                                        }
                                                      }
                                                    >
                                                      <View
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                          }
                                                        }
                                                      >
                                                        <View
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                            }
                                                          }
                                                        >
                                                          <Styled(TYText)
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "color": "#7ED321",
                                                                },
                                                                undefined,
                                                              ]
                                                            }
                                                          >
                                                            <TYText
                                                              align={null}
                                                              color={null}
                                                              size="large"
                                                              style={
                                                                Array [
                                                                  Object {
                                                                    "color": "rgba(51, 51, 51, 0.5)",
                                                                  },
                                                                  Array [
                                                                    Object {
                                                                      "color": "#7ED321",
                                                                    },
                                                                    undefined,
                                                                  ],
                                                                ]
                                                              }
                                                              type="paragraph"
                                                              weight={null}
                                                            >
                                                              <Styled(Text)
                                                                align={null}
                                                                allowFontScaling={false}
                                                                color={null}
                                                                size="large"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "color": "rgba(51, 51, 51, 0.5)",
                                                                    },
                                                                    Array [
                                                                      Object {
                                                                        "color": "#7ED321",
                                                                      },
                                                                      undefined,
                                                                    ],
                                                                  ]
                                                                }
                                                                type="paragraph"
                                                                weight={null}
                                                              >
                                                                <Text
                                                                  accessible={true}
                                                                  align={null}
                                                                  allowFontScaling={false}
                                                                  color={null}
                                                                  ellipsizeMode="tail"
                                                                  size="large"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "color": "#333",
                                                                        "fontSize": 17,
                                                                        "lineHeight": 24,
                                                                      },
                                                                      Array [
                                                                        Object {
                                                                          "color": "rgba(51, 51, 51, 0.5)",
                                                                        },
                                                                        Array [
                                                                          Object {
                                                                            "color": "#7ED321",
                                                                          },
                                                                          undefined,
                                                                        ],
                                                                      ],
                                                                    ]
                                                                  }
                                                                  type="paragraph"
                                                                  weight={null}
                                                                >
                                                                  <Text
                                                                    accessible={true}
                                                                    align={null}
                                                                    allowFontScaling={false}
                                                                    color={null}
                                                                    ellipsizeMode="tail"
                                                                    size="large"
                                                                    style={
                                                                      Array [
                                                                        Object {
                                                                          "backgroundColor": "transparent",
                                                                          "color": "#333",
                                                                          "fontSize": 17,
                                                                          "lineHeight": 24,
                                                                        },
                                                                        Array [
                                                                          Object {
                                                                            "color": "rgba(51, 51, 51, 0.5)",
                                                                          },
                                                                          Array [
                                                                            Object {
                                                                              "color": "#7ED321",
                                                                            },
                                                                            undefined,
                                                                          ],
                                                                        ],
                                                                      ]
                                                                    }
                                                                    type="paragraph"
                                                                    weight={null}
                                                                  >
                                                                    1
                                                                  </Text>
                                                                </Text>
                                                              </Styled(Text)>
                                                            </TYText>
                                                          </Styled(TYText)>
                                                          清扫成功
                                                        </View>
                                                      </View>
                                                    </View>
                                                  </View>
                                                </AnimatedComponent>
                                              </TouchableOpacity>
                                            </Styled(TouchableOpacity)>
                                          </View>
                                        </View>
                                      </Styled(View)>
                                    </View>
                                  </View>
                                </AnimatedComponent>
                              </TouchableOpacity>
                            </Styled(TouchableOpacity)>
                          </TYListItem>
                        </View>
                      </View>
                    </CellRenderer>
                  </View>
                </View>
              </RCTScrollView>
            </_class>
          </ScrollViewMock>
        </VirtualizedList>
      </FlatList>
    </ThemeConsumer>
  </WithTheme(ThemeConsumer)>
</TYFlatList>
`;

exports[`TYList basic render value = undefined 1`] = `
<TYFlatList
  data={
    Array [
      Object {
        "Action": "清扫成功",
        "key": 1,
        "onChange": [MockFunction],
        "subTitle": "清扫 0平方米 | 工作 5分钟",
        "theme": Object {
          "descFontColor": "#7ED321",
        },
        "title": "title_1",
        "value": undefined,
      },
      Object {
        "Action": "清扫成功",
        "key": 2,
        "onChange": [MockFunction],
        "subTitle": "清扫 0平方米 | 工作 5分钟",
        "theme": Object {
          "descFontColor": "#7ED321",
        },
        "title": "title_2",
        "value": undefined,
      },
    ]
  }
  flatListRef={null}
  separatorStyle={null}
  useART={false}
>
  <WithTheme(ThemeConsumer)>
    <ThemeConsumer
      theme={null}
    >
      <FlatList
        ItemSeparatorComponent={[Function]}
        contentContainerStyle={
          Array [
            Object {
              "backgroundColor": "#f8f8f8",
            },
            undefined,
          ]
        }
        data={
          Array [
            Object {
              "Action": "清扫成功",
              "key": 1,
              "onChange": [MockFunction],
              "subTitle": "清扫 0平方米 | 工作 5分钟",
              "theme": Object {
                "descFontColor": "#7ED321",
              },
              "title": "title_1",
              "value": undefined,
            },
            Object {
              "Action": "清扫成功",
              "key": 2,
              "onChange": [MockFunction],
              "subTitle": "清扫 0平方米 | 工作 5分钟",
              "theme": Object {
                "descFontColor": "#7ED321",
              },
              "title": "title_2",
              "value": undefined,
            },
          ]
        }
        disableVirtualization={false}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        renderItem={[Function]}
        scrollEventThrottle={50}
        showsVerticalScrollIndicator={false}
        updateCellsBatchingPeriod={50}
        useART={false}
        windowSize={21}
      >
        <VirtualizedList
          ItemSeparatorComponent={[Function]}
          contentContainerStyle={
            Array [
              Object {
                "backgroundColor": "#f8f8f8",
              },
              undefined,
            ]
          }
          data={
            Array [
              Object {
                "Action": "清扫成功",
                "key": 1,
                "onChange": [MockFunction],
                "subTitle": "清扫 0平方米 | 工作 5分钟",
                "theme": Object {
                  "descFontColor": "#7ED321",
                },
                "title": "title_1",
                "value": undefined,
              },
              Object {
                "Action": "清扫成功",
                "key": 2,
                "onChange": [MockFunction],
                "subTitle": "清扫 0平方米 | 工作 5分钟",
                "theme": Object {
                  "descFontColor": "#7ED321",
                },
                "title": "title_2",
                "value": undefined,
              },
            ]
          }
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onEndReachedThreshold={2}
          renderItem={[Function]}
          scrollEventThrottle={50}
          showsVerticalScrollIndicator={false}
          updateCellsBatchingPeriod={50}
          useART={false}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <ScrollViewMock
            ItemSeparatorComponent={[Function]}
            contentContainerStyle={
              Array [
                Object {
                  "backgroundColor": "#f8f8f8",
                },
                undefined,
              ]
            }
            data={
              Array [
                Object {
                  "Action": "清扫成功",
                  "key": 1,
                  "onChange": [MockFunction],
                  "subTitle": "清扫 0平方米 | 工作 5分钟",
                  "theme": Object {
                    "descFontColor": "#7ED321",
                  },
                  "title": "title_1",
                  "value": undefined,
                },
                Object {
                  "Action": "清扫成功",
                  "key": 2,
                  "onChange": [MockFunction],
                  "subTitle": "清扫 0平方米 | 工作 5分钟",
                  "theme": Object {
                    "descFontColor": "#7ED321",
                  },
                  "title": "title_2",
                  "value": undefined,
                },
              ]
            }
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            renderItem={[Function]}
            scrollEventThrottle={50}
            showsVerticalScrollIndicator={false}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            useART={false}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <_class
              ItemSeparatorComponent={[Function]}
              contentContainerStyle={
                Array [
                  Object {
                    "backgroundColor": "#f8f8f8",
                  },
                  undefined,
                ]
              }
              data={
                Array [
                  Object {
                    "Action": "清扫成功",
                    "key": 1,
                    "onChange": [MockFunction],
                    "subTitle": "清扫 0平方米 | 工作 5分钟",
                    "theme": Object {
                      "descFontColor": "#7ED321",
                    },
                    "title": "title_1",
                    "value": undefined,
                  },
                  Object {
                    "Action": "清扫成功",
                    "key": 2,
                    "onChange": [MockFunction],
                    "subTitle": "清扫 0平方米 | 工作 5分钟",
                    "theme": Object {
                      "descFontColor": "#7ED321",
                    },
                    "title": "title_2",
                    "value": undefined,
                  },
                ]
              }
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              numColumns={1}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={2}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              renderItem={[Function]}
              scrollEventThrottle={50}
              showsVerticalScrollIndicator={false}
              stickyHeaderIndices={Array []}
              updateCellsBatchingPeriod={50}
              useART={false}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <RCTScrollView
                ItemSeparatorComponent={[Function]}
                contentContainerStyle={
                  Array [
                    Object {
                      "backgroundColor": "#f8f8f8",
                    },
                    undefined,
                  ]
                }
                data={
                  Array [
                    Object {
                      "Action": "清扫成功",
                      "key": 1,
                      "onChange": [MockFunction],
                      "subTitle": "清扫 0平方米 | 工作 5分钟",
                      "theme": Object {
                        "descFontColor": "#7ED321",
                      },
                      "title": "title_1",
                      "value": undefined,
                    },
                    Object {
                      "Action": "清扫成功",
                      "key": 2,
                      "onChange": [MockFunction],
                      "subTitle": "清扫 0平方米 | 工作 5分钟",
                      "theme": Object {
                        "descFontColor": "#7ED321",
                      },
                      "title": "title_2",
                      "value": undefined,
                    },
                  ]
                }
                disableVirtualization={false}
                getItem={[Function]}
                getItemCount={[Function]}
                horizontal={false}
                initialNumToRender={10}
                keyExtractor={[Function]}
                maxToRenderPerBatch={10}
                numColumns={1}
                onContentSizeChange={[Function]}
                onEndReachedThreshold={2}
                onLayout={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                renderItem={[Function]}
                scrollEventThrottle={50}
                showsVerticalScrollIndicator={false}
                stickyHeaderIndices={Array []}
                updateCellsBatchingPeriod={50}
                useART={false}
                viewabilityConfigCallbackPairs={Array []}
                windowSize={21}
              >
                <View>
                  <View>
                    <CellRenderer
                      ItemSeparatorComponent={[Function]}
                      cellKey={1}
                      fillRateHelper={
                        FillRateHelper {
                          "_anyBlankStartTime": null,
                          "_enabled": false,
                          "_getFrameMetrics": [Function],
                          "_info": Info {
                            "any_blank_count": 0,
                            "any_blank_ms": 0,
                            "any_blank_speed_sum": 0,
                            "mostly_blank_count": 0,
                            "mostly_blank_ms": 0,
                            "pixels_blank": 0,
                            "pixels_sampled": 0,
                            "pixels_scrolled": 0,
                            "sample_count": 0,
                            "total_time_spent": 0,
                          },
                          "_mostlyBlankStartTime": null,
                          "_samplesStartTime": null,
                        }
                      }
                      horizontal={false}
                      index={0}
                      inversionStyle={null}
                      item={
                        Object {
                          "Action": "清扫成功",
                          "key": 1,
                          "onChange": [MockFunction],
                          "subTitle": "清扫 0平方米 | 工作 5分钟",
                          "theme": Object {
                            "descFontColor": "#7ED321",
                          },
                          "title": "title_1",
                          "value": undefined,
                        }
                      }
                      key="1"
                      onLayout={[Function]}
                      onUnmount={[Function]}
                      onUpdateSeparators={[Function]}
                      parentProps={
                        Object {
                          "ItemSeparatorComponent": [Function],
                          "contentContainerStyle": Array [
                            Object {
                              "backgroundColor": "#f8f8f8",
                            },
                            undefined,
                          ],
                          "data": Array [
                            Object {
                              "Action": "清扫成功",
                              "key": 1,
                              "onChange": [MockFunction],
                              "subTitle": "清扫 0平方米 | 工作 5分钟",
                              "theme": Object {
                                "descFontColor": "#7ED321",
                              },
                              "title": "title_1",
                              "value": undefined,
                            },
                            Object {
                              "Action": "清扫成功",
                              "key": 2,
                              "onChange": [MockFunction],
                              "subTitle": "清扫 0平方米 | 工作 5分钟",
                              "theme": Object {
                                "descFontColor": "#7ED321",
                              },
                              "title": "title_2",
                              "value": undefined,
                            },
                          ],
                          "disableVirtualization": false,
                          "getItem": [Function],
                          "getItemCount": [Function],
                          "horizontal": false,
                          "initialNumToRender": 10,
                          "keyExtractor": [Function],
                          "maxToRenderPerBatch": 10,
                          "numColumns": 1,
                          "onEndReachedThreshold": 2,
                          "renderItem": [Function],
                          "scrollEventThrottle": 50,
                          "showsVerticalScrollIndicator": false,
                          "updateCellsBatchingPeriod": 50,
                          "useART": false,
                          "viewabilityConfigCallbackPairs": Array [],
                          "windowSize": 21,
                        }
                      }
                    >
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <TYListItem
                            Action="清扫成功"
                            Icon={null}
                            actionDisabled={false}
                            actionType="auto"
                            arrow={false}
                            arrowColor={null}
                            arrowUseIcon={false}
                            disabled={false}
                            iconColor={null}
                            iconSize={null}
                            iconType="auto"
                            imageFollowIconColor={true}
                            key="1"
                            needUpdate={true}
                            onChange={[MockFunction]}
                            onPress={null}
                            styles={Object {}}
                            subTitle="清扫 0平方米 | 工作 5分钟"
                            theme={
                              Object {
                                "descFontColor": "#7ED321",
                              }
                            }
                            title="title_1"
                            useART={false}
                          >
                            <Styled(TouchableOpacity)
                              Action="清扫成功"
                              Icon={null}
                              actionType="auto"
                              activeOpacity={0.8}
                              arrow={false}
                              arrowColor={null}
                              arrowUseIcon={false}
                              disabled={false}
                              iconColor={null}
                              iconSize={null}
                              iconType="auto"
                              imageFollowIconColor={true}
                              needUpdate={true}
                              onChange={[MockFunction]}
                              onPress={null}
                              style={
                                Array [
                                  false,
                                  undefined,
                                  undefined,
                                  undefined,
                                ]
                              }
                              useART={false}
                            >
                              <TouchableOpacity
                                Action="清扫成功"
                                Icon={null}
                                actionType="auto"
                                activeOpacity={0.8}
                                arrow={false}
                                arrowColor={null}
                                arrowUseIcon={false}
                                disabled={false}
                                iconColor={null}
                                iconSize={null}
                                iconType="auto"
                                imageFollowIconColor={true}
                                needUpdate={true}
                                onChange={[MockFunction]}
                                onPress={null}
                                style={
                                  Array [
                                    Object {
                                      "alignSelf": "stretch",
                                      "backgroundColor": "#fff",
                                      "borderRadius": 0,
                                      "flexGrow": 0,
                                      "marginBottom": 0,
                                      "marginLeft": 0,
                                      "marginRight": 0,
                                      "marginTop": 0,
                                      "minHeight": 48,
                                    },
                                    Array [
                                      false,
                                      undefined,
                                      undefined,
                                      undefined,
                                    ],
                                  ]
                                }
                                useART={false}
                              >
                                <AnimatedComponent
                                  accessible={true}
                                  isTVSelectable={true}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Array [
                                      Array [
                                        Object {
                                          "alignSelf": "stretch",
                                          "backgroundColor": "#fff",
                                          "borderRadius": 0,
                                          "flexGrow": 0,
                                          "marginBottom": 0,
                                          "marginLeft": 0,
                                          "marginRight": 0,
                                          "marginTop": 0,
                                          "minHeight": 48,
                                        },
                                        Array [
                                          false,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                      ],
                                      Object {
                                        "opacity": 1,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    accessible={true}
                                    isTVSelectable={true}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      Object {
                                        "alignSelf": "stretch",
                                        "backgroundColor": "#fff",
                                        "borderRadius": 0,
                                        "flexGrow": 0,
                                        "marginBottom": 0,
                                        "marginLeft": 0,
                                        "marginRight": 0,
                                        "marginTop": 0,
                                        "minHeight": 48,
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <View
                                      accessible={true}
                                      isTVSelectable={true}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        Object {
                                          "alignSelf": "stretch",
                                          "backgroundColor": "#fff",
                                          "borderRadius": 0,
                                          "flexGrow": 0,
                                          "marginBottom": 0,
                                          "marginLeft": 0,
                                          "marginRight": 0,
                                          "marginTop": 0,
                                          "minHeight": 48,
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <Styled(View)
                                        disabled={false}
                                        style={
                                          Array [
                                            false,
                                            undefined,
                                            undefined,
                                          ]
                                        }
                                      >
                                        <View
                                          disabled={false}
                                          style={
                                            Array [
                                              Object {
                                                "alignItems": "center",
                                                "borderRadius": 0,
                                                "flexDirection": "row",
                                                "opacity": 1,
                                                "paddingBottom": 12,
                                                "paddingLeft": 28,
                                                "paddingRight": 28,
                                                "paddingTop": 12,
                                              },
                                              Array [
                                                false,
                                                undefined,
                                                undefined,
                                              ],
                                            ]
                                          }
                                        >
                                          <View
                                            disabled={false}
                                            style={
                                              Array [
                                                Object {
                                                  "alignItems": "center",
                                                  "borderRadius": 0,
                                                  "flexDirection": "row",
                                                  "opacity": 1,
                                                  "paddingBottom": 12,
                                                  "paddingLeft": 28,
                                                  "paddingRight": 28,
                                                  "paddingTop": 12,
                                                },
                                                Array [
                                                  false,
                                                  undefined,
                                                  undefined,
                                                ],
                                              ]
                                            }
                                          >
                                            <Styled(View)>
                                              <View
                                                style={
                                                  Array [
                                                    Object {
                                                      "flexBasis": 0,
                                                      "flexGrow": 1,
                                                      "flexShrink": 1,
                                                      "justifyContent": "center",
                                                    },
                                                    undefined,
                                                  ]
                                                }
                                              >
                                                <View
                                                  style={
                                                    Array [
                                                      Object {
                                                        "flexBasis": 0,
                                                        "flexGrow": 1,
                                                        "flexShrink": 1,
                                                        "justifyContent": "center",
                                                      },
                                                      undefined,
                                                    ]
                                                  }
                                                >
                                                  <Styled(TYText)
                                                    style={
                                                      Array [
                                                        undefined,
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <TYText
                                                      align={null}
                                                      color={null}
                                                      size="small"
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "#333",
                                                          },
                                                          Array [
                                                            undefined,
                                                            undefined,
                                                          ],
                                                        ]
                                                      }
                                                      type="title"
                                                      weight={null}
                                                    >
                                                      <Styled(Text)
                                                        align={null}
                                                        allowFontScaling={false}
                                                        color={null}
                                                        size="small"
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "#333",
                                                            },
                                                            Array [
                                                              undefined,
                                                              undefined,
                                                            ],
                                                          ]
                                                        }
                                                        type="title"
                                                        weight={null}
                                                      >
                                                        <Text
                                                          accessible={true}
                                                          align={null}
                                                          allowFontScaling={false}
                                                          color={null}
                                                          ellipsizeMode="tail"
                                                          size="small"
                                                          style={
                                                            Array [
                                                              Object {
                                                                "backgroundColor": "transparent",
                                                                "color": "#333",
                                                                "fontSize": 17,
                                                                "lineHeight": 24,
                                                              },
                                                              Array [
                                                                Object {
                                                                  "color": "#333",
                                                                },
                                                                Array [
                                                                  undefined,
                                                                  undefined,
                                                                ],
                                                              ],
                                                            ]
                                                          }
                                                          type="title"
                                                          weight={null}
                                                        >
                                                          <Text
                                                            accessible={true}
                                                            align={null}
                                                            allowFontScaling={false}
                                                            color={null}
                                                            ellipsizeMode="tail"
                                                            size="small"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "backgroundColor": "transparent",
                                                                  "color": "#333",
                                                                  "fontSize": 17,
                                                                  "lineHeight": 24,
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "#333",
                                                                  },
                                                                  Array [
                                                                    undefined,
                                                                    undefined,
                                                                  ],
                                                                ],
                                                              ]
                                                            }
                                                            type="title"
                                                            weight={null}
                                                          >
                                                            title_1
                                                          </Text>
                                                        </Text>
                                                      </Styled(Text)>
                                                    </TYText>
                                                  </Styled(TYText)>
                                                  <Styled(TYText)
                                                    style={
                                                      Array [
                                                        undefined,
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <TYText
                                                      align={null}
                                                      color={null}
                                                      size="large"
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(51, 51, 51, 0.5)",
                                                            "marginTop": 4,
                                                          },
                                                          Array [
                                                            undefined,
                                                            undefined,
                                                          ],
                                                        ]
                                                      }
                                                      type="paragraph"
                                                      weight={null}
                                                    >
                                                      <Styled(Text)
                                                        align={null}
                                                        allowFontScaling={false}
                                                        color={null}
                                                        size="large"
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(51, 51, 51, 0.5)",
                                                              "marginTop": 4,
                                                            },
                                                            Array [
                                                              undefined,
                                                              undefined,
                                                            ],
                                                          ]
                                                        }
                                                        type="paragraph"
                                                        weight={null}
                                                      >
                                                        <Text
                                                          accessible={true}
                                                          align={null}
                                                          allowFontScaling={false}
                                                          color={null}
                                                          ellipsizeMode="tail"
                                                          size="large"
                                                          style={
                                                            Array [
                                                              Object {
                                                                "backgroundColor": "transparent",
                                                                "color": "#333",
                                                                "fontSize": 17,
                                                                "lineHeight": 24,
                                                              },
                                                              Array [
                                                                Object {
                                                                  "color": "rgba(51, 51, 51, 0.5)",
                                                                  "marginTop": 4,
                                                                },
                                                                Array [
                                                                  undefined,
                                                                  undefined,
                                                                ],
                                                              ],
                                                            ]
                                                          }
                                                          type="paragraph"
                                                          weight={null}
                                                        >
                                                          <Text
                                                            accessible={true}
                                                            align={null}
                                                            allowFontScaling={false}
                                                            color={null}
                                                            ellipsizeMode="tail"
                                                            size="large"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "backgroundColor": "transparent",
                                                                  "color": "#333",
                                                                  "fontSize": 17,
                                                                  "lineHeight": 24,
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "rgba(51, 51, 51, 0.5)",
                                                                    "marginTop": 4,
                                                                  },
                                                                  Array [
                                                                    undefined,
                                                                    undefined,
                                                                  ],
                                                                ],
                                                              ]
                                                            }
                                                            type="paragraph"
                                                            weight={null}
                                                          >
                                                            清扫 0平方米 | 工作 5分钟
                                                          </Text>
                                                        </Text>
                                                      </Styled(Text)>
                                                    </TYText>
                                                  </Styled(TYText)>
                                                </View>
                                              </View>
                                            </Styled(View)>
                                            <Styled(TouchableOpacity)
                                              activeOpacity={0.8}
                                              disabled={false}
                                              onPress={null}
                                            >
                                              <TouchableOpacity
                                                activeOpacity={0.8}
                                                disabled={false}
                                                onPress={null}
                                                style={
                                                  Array [
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginLeft": 20,
                                                    },
                                                    undefined,
                                                  ]
                                                }
                                              >
                                                <AnimatedComponent
                                                  accessible={true}
                                                  isTVSelectable={true}
                                                  onResponderGrant={[Function]}
                                                  onResponderMove={[Function]}
                                                  onResponderRelease={[Function]}
                                                  onResponderTerminate={[Function]}
                                                  onResponderTerminationRequest={[Function]}
                                                  onStartShouldSetResponder={[Function]}
                                                  style={
                                                    Array [
                                                      Array [
                                                        Object {
                                                          "alignItems": "center",
                                                          "flexDirection": "row",
                                                          "marginLeft": 20,
                                                        },
                                                        undefined,
                                                      ],
                                                      Object {
                                                        "opacity": 1,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <View
                                                    accessible={true}
                                                    isTVSelectable={true}
                                                    onResponderGrant={[Function]}
                                                    onResponderMove={[Function]}
                                                    onResponderRelease={[Function]}
                                                    onResponderTerminate={[Function]}
                                                    onResponderTerminationRequest={[Function]}
                                                    onStartShouldSetResponder={[Function]}
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginLeft": 20,
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    <View
                                                      accessible={true}
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Object {
                                                          "alignItems": "center",
                                                          "flexDirection": "row",
                                                          "marginLeft": 20,
                                                          "opacity": 1,
                                                        }
                                                      }
                                                    >
                                                      <Styled(TYText)
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "#7ED321",
                                                            },
                                                            undefined,
                                                          ]
                                                        }
                                                      >
                                                        <TYText
                                                          align={null}
                                                          color={null}
                                                          size="large"
                                                          style={
                                                            Array [
                                                              Object {
                                                                "color": "rgba(51, 51, 51, 0.5)",
                                                              },
                                                              Array [
                                                                Object {
                                                                  "color": "#7ED321",
                                                                },
                                                                undefined,
                                                              ],
                                                            ]
                                                          }
                                                          type="paragraph"
                                                          weight={null}
                                                        >
                                                          <Styled(Text)
                                                            align={null}
                                                            allowFontScaling={false}
                                                            color={null}
                                                            size="large"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "color": "rgba(51, 51, 51, 0.5)",
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "#7ED321",
                                                                  },
                                                                  undefined,
                                                                ],
                                                              ]
                                                            }
                                                            type="paragraph"
                                                            weight={null}
                                                          >
                                                            <Text
                                                              accessible={true}
                                                              align={null}
                                                              allowFontScaling={false}
                                                              color={null}
                                                              ellipsizeMode="tail"
                                                              size="large"
                                                              style={
                                                                Array [
                                                                  Object {
                                                                    "backgroundColor": "transparent",
                                                                    "color": "#333",
                                                                    "fontSize": 17,
                                                                    "lineHeight": 24,
                                                                  },
                                                                  Array [
                                                                    Object {
                                                                      "color": "rgba(51, 51, 51, 0.5)",
                                                                    },
                                                                    Array [
                                                                      Object {
                                                                        "color": "#7ED321",
                                                                      },
                                                                      undefined,
                                                                    ],
                                                                  ],
                                                                ]
                                                              }
                                                              type="paragraph"
                                                              weight={null}
                                                            >
                                                              <Text
                                                                accessible={true}
                                                                align={null}
                                                                allowFontScaling={false}
                                                                color={null}
                                                                ellipsizeMode="tail"
                                                                size="large"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "color": "#333",
                                                                      "fontSize": 17,
                                                                      "lineHeight": 24,
                                                                    },
                                                                    Array [
                                                                      Object {
                                                                        "color": "rgba(51, 51, 51, 0.5)",
                                                                      },
                                                                      Array [
                                                                        Object {
                                                                          "color": "#7ED321",
                                                                        },
                                                                        undefined,
                                                                      ],
                                                                    ],
                                                                  ]
                                                                }
                                                                type="paragraph"
                                                                weight={null}
                                                              >
                                                                清扫成功
                                                              </Text>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TYText>
                                                      </Styled(TYText)>
                                                    </View>
                                                  </View>
                                                </AnimatedComponent>
                                              </TouchableOpacity>
                                            </Styled(TouchableOpacity)>
                                          </View>
                                        </View>
                                      </Styled(View)>
                                    </View>
                                  </View>
                                </AnimatedComponent>
                              </TouchableOpacity>
                            </Styled(TouchableOpacity)>
                          </TYListItem>
                          <ItemSeparatorComponent
                            highlighted={false}
                            leadingItem={
                              Object {
                                "Action": "清扫成功",
                                "key": 1,
                                "onChange": [MockFunction],
                                "subTitle": "清扫 0平方米 | 工作 5分钟",
                                "theme": Object {
                                  "descFontColor": "#7ED321",
                                },
                                "title": "title_1",
                                "value": undefined,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(51, 51, 51, 0.1)",
                                    "height": 0.5,
                                    "marginLeft": 32,
                                  },
                                  null,
                                ]
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "rgba(51, 51, 51, 0.1)",
                                      "height": 0.5,
                                      "marginLeft": 32,
                                    },
                                    null,
                                  ]
                                }
                              />
                            </View>
                          </ItemSeparatorComponent>
                        </View>
                      </View>
                    </CellRenderer>
                    <CellRenderer
                      cellKey={2}
                      fillRateHelper={
                        FillRateHelper {
                          "_anyBlankStartTime": null,
                          "_enabled": false,
                          "_getFrameMetrics": [Function],
                          "_info": Info {
                            "any_blank_count": 0,
                            "any_blank_ms": 0,
                            "any_blank_speed_sum": 0,
                            "mostly_blank_count": 0,
                            "mostly_blank_ms": 0,
                            "pixels_blank": 0,
                            "pixels_sampled": 0,
                            "pixels_scrolled": 0,
                            "sample_count": 0,
                            "total_time_spent": 0,
                          },
                          "_mostlyBlankStartTime": null,
                          "_samplesStartTime": null,
                        }
                      }
                      horizontal={false}
                      index={1}
                      inversionStyle={null}
                      item={
                        Object {
                          "Action": "清扫成功",
                          "key": 2,
                          "onChange": [MockFunction],
                          "subTitle": "清扫 0平方米 | 工作 5分钟",
                          "theme": Object {
                            "descFontColor": "#7ED321",
                          },
                          "title": "title_2",
                          "value": undefined,
                        }
                      }
                      key="2"
                      onLayout={[Function]}
                      onUnmount={[Function]}
                      onUpdateSeparators={[Function]}
                      parentProps={
                        Object {
                          "ItemSeparatorComponent": [Function],
                          "contentContainerStyle": Array [
                            Object {
                              "backgroundColor": "#f8f8f8",
                            },
                            undefined,
                          ],
                          "data": Array [
                            Object {
                              "Action": "清扫成功",
                              "key": 1,
                              "onChange": [MockFunction],
                              "subTitle": "清扫 0平方米 | 工作 5分钟",
                              "theme": Object {
                                "descFontColor": "#7ED321",
                              },
                              "title": "title_1",
                              "value": undefined,
                            },
                            Object {
                              "Action": "清扫成功",
                              "key": 2,
                              "onChange": [MockFunction],
                              "subTitle": "清扫 0平方米 | 工作 5分钟",
                              "theme": Object {
                                "descFontColor": "#7ED321",
                              },
                              "title": "title_2",
                              "value": undefined,
                            },
                          ],
                          "disableVirtualization": false,
                          "getItem": [Function],
                          "getItemCount": [Function],
                          "horizontal": false,
                          "initialNumToRender": 10,
                          "keyExtractor": [Function],
                          "maxToRenderPerBatch": 10,
                          "numColumns": 1,
                          "onEndReachedThreshold": 2,
                          "renderItem": [Function],
                          "scrollEventThrottle": 50,
                          "showsVerticalScrollIndicator": false,
                          "updateCellsBatchingPeriod": 50,
                          "useART": false,
                          "viewabilityConfigCallbackPairs": Array [],
                          "windowSize": 21,
                        }
                      }
                      prevCellKey={1}
                    >
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <TYListItem
                            Action="清扫成功"
                            Icon={null}
                            actionDisabled={false}
                            actionType="auto"
                            arrow={false}
                            arrowColor={null}
                            arrowUseIcon={false}
                            disabled={false}
                            iconColor={null}
                            iconSize={null}
                            iconType="auto"
                            imageFollowIconColor={true}
                            key="2"
                            needUpdate={true}
                            onChange={[MockFunction]}
                            onPress={null}
                            styles={Object {}}
                            subTitle="清扫 0平方米 | 工作 5分钟"
                            theme={
                              Object {
                                "descFontColor": "#7ED321",
                              }
                            }
                            title="title_2"
                            useART={false}
                          >
                            <Styled(TouchableOpacity)
                              Action="清扫成功"
                              Icon={null}
                              actionType="auto"
                              activeOpacity={0.8}
                              arrow={false}
                              arrowColor={null}
                              arrowUseIcon={false}
                              disabled={false}
                              iconColor={null}
                              iconSize={null}
                              iconType="auto"
                              imageFollowIconColor={true}
                              needUpdate={true}
                              onChange={[MockFunction]}
                              onPress={null}
                              style={
                                Array [
                                  false,
                                  undefined,
                                  undefined,
                                  undefined,
                                ]
                              }
                              useART={false}
                            >
                              <TouchableOpacity
                                Action="清扫成功"
                                Icon={null}
                                actionType="auto"
                                activeOpacity={0.8}
                                arrow={false}
                                arrowColor={null}
                                arrowUseIcon={false}
                                disabled={false}
                                iconColor={null}
                                iconSize={null}
                                iconType="auto"
                                imageFollowIconColor={true}
                                needUpdate={true}
                                onChange={[MockFunction]}
                                onPress={null}
                                style={
                                  Array [
                                    Object {
                                      "alignSelf": "stretch",
                                      "backgroundColor": "#fff",
                                      "borderRadius": 0,
                                      "flexGrow": 0,
                                      "marginBottom": 0,
                                      "marginLeft": 0,
                                      "marginRight": 0,
                                      "marginTop": 0,
                                      "minHeight": 48,
                                    },
                                    Array [
                                      false,
                                      undefined,
                                      undefined,
                                      undefined,
                                    ],
                                  ]
                                }
                                useART={false}
                              >
                                <AnimatedComponent
                                  accessible={true}
                                  isTVSelectable={true}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Array [
                                      Array [
                                        Object {
                                          "alignSelf": "stretch",
                                          "backgroundColor": "#fff",
                                          "borderRadius": 0,
                                          "flexGrow": 0,
                                          "marginBottom": 0,
                                          "marginLeft": 0,
                                          "marginRight": 0,
                                          "marginTop": 0,
                                          "minHeight": 48,
                                        },
                                        Array [
                                          false,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                      ],
                                      Object {
                                        "opacity": 1,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    accessible={true}
                                    isTVSelectable={true}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      Object {
                                        "alignSelf": "stretch",
                                        "backgroundColor": "#fff",
                                        "borderRadius": 0,
                                        "flexGrow": 0,
                                        "marginBottom": 0,
                                        "marginLeft": 0,
                                        "marginRight": 0,
                                        "marginTop": 0,
                                        "minHeight": 48,
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <View
                                      accessible={true}
                                      isTVSelectable={true}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        Object {
                                          "alignSelf": "stretch",
                                          "backgroundColor": "#fff",
                                          "borderRadius": 0,
                                          "flexGrow": 0,
                                          "marginBottom": 0,
                                          "marginLeft": 0,
                                          "marginRight": 0,
                                          "marginTop": 0,
                                          "minHeight": 48,
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <Styled(View)
                                        disabled={false}
                                        style={
                                          Array [
                                            false,
                                            undefined,
                                            undefined,
                                          ]
                                        }
                                      >
                                        <View
                                          disabled={false}
                                          style={
                                            Array [
                                              Object {
                                                "alignItems": "center",
                                                "borderRadius": 0,
                                                "flexDirection": "row",
                                                "opacity": 1,
                                                "paddingBottom": 12,
                                                "paddingLeft": 28,
                                                "paddingRight": 28,
                                                "paddingTop": 12,
                                              },
                                              Array [
                                                false,
                                                undefined,
                                                undefined,
                                              ],
                                            ]
                                          }
                                        >
                                          <View
                                            disabled={false}
                                            style={
                                              Array [
                                                Object {
                                                  "alignItems": "center",
                                                  "borderRadius": 0,
                                                  "flexDirection": "row",
                                                  "opacity": 1,
                                                  "paddingBottom": 12,
                                                  "paddingLeft": 28,
                                                  "paddingRight": 28,
                                                  "paddingTop": 12,
                                                },
                                                Array [
                                                  false,
                                                  undefined,
                                                  undefined,
                                                ],
                                              ]
                                            }
                                          >
                                            <Styled(View)>
                                              <View
                                                style={
                                                  Array [
                                                    Object {
                                                      "flexBasis": 0,
                                                      "flexGrow": 1,
                                                      "flexShrink": 1,
                                                      "justifyContent": "center",
                                                    },
                                                    undefined,
                                                  ]
                                                }
                                              >
                                                <View
                                                  style={
                                                    Array [
                                                      Object {
                                                        "flexBasis": 0,
                                                        "flexGrow": 1,
                                                        "flexShrink": 1,
                                                        "justifyContent": "center",
                                                      },
                                                      undefined,
                                                    ]
                                                  }
                                                >
                                                  <Styled(TYText)
                                                    style={
                                                      Array [
                                                        undefined,
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <TYText
                                                      align={null}
                                                      color={null}
                                                      size="small"
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "#333",
                                                          },
                                                          Array [
                                                            undefined,
                                                            undefined,
                                                          ],
                                                        ]
                                                      }
                                                      type="title"
                                                      weight={null}
                                                    >
                                                      <Styled(Text)
                                                        align={null}
                                                        allowFontScaling={false}
                                                        color={null}
                                                        size="small"
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "#333",
                                                            },
                                                            Array [
                                                              undefined,
                                                              undefined,
                                                            ],
                                                          ]
                                                        }
                                                        type="title"
                                                        weight={null}
                                                      >
                                                        <Text
                                                          accessible={true}
                                                          align={null}
                                                          allowFontScaling={false}
                                                          color={null}
                                                          ellipsizeMode="tail"
                                                          size="small"
                                                          style={
                                                            Array [
                                                              Object {
                                                                "backgroundColor": "transparent",
                                                                "color": "#333",
                                                                "fontSize": 17,
                                                                "lineHeight": 24,
                                                              },
                                                              Array [
                                                                Object {
                                                                  "color": "#333",
                                                                },
                                                                Array [
                                                                  undefined,
                                                                  undefined,
                                                                ],
                                                              ],
                                                            ]
                                                          }
                                                          type="title"
                                                          weight={null}
                                                        >
                                                          <Text
                                                            accessible={true}
                                                            align={null}
                                                            allowFontScaling={false}
                                                            color={null}
                                                            ellipsizeMode="tail"
                                                            size="small"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "backgroundColor": "transparent",
                                                                  "color": "#333",
                                                                  "fontSize": 17,
                                                                  "lineHeight": 24,
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "#333",
                                                                  },
                                                                  Array [
                                                                    undefined,
                                                                    undefined,
                                                                  ],
                                                                ],
                                                              ]
                                                            }
                                                            type="title"
                                                            weight={null}
                                                          >
                                                            title_2
                                                          </Text>
                                                        </Text>
                                                      </Styled(Text)>
                                                    </TYText>
                                                  </Styled(TYText)>
                                                  <Styled(TYText)
                                                    style={
                                                      Array [
                                                        undefined,
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <TYText
                                                      align={null}
                                                      color={null}
                                                      size="large"
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(51, 51, 51, 0.5)",
                                                            "marginTop": 4,
                                                          },
                                                          Array [
                                                            undefined,
                                                            undefined,
                                                          ],
                                                        ]
                                                      }
                                                      type="paragraph"
                                                      weight={null}
                                                    >
                                                      <Styled(Text)
                                                        align={null}
                                                        allowFontScaling={false}
                                                        color={null}
                                                        size="large"
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(51, 51, 51, 0.5)",
                                                              "marginTop": 4,
                                                            },
                                                            Array [
                                                              undefined,
                                                              undefined,
                                                            ],
                                                          ]
                                                        }
                                                        type="paragraph"
                                                        weight={null}
                                                      >
                                                        <Text
                                                          accessible={true}
                                                          align={null}
                                                          allowFontScaling={false}
                                                          color={null}
                                                          ellipsizeMode="tail"
                                                          size="large"
                                                          style={
                                                            Array [
                                                              Object {
                                                                "backgroundColor": "transparent",
                                                                "color": "#333",
                                                                "fontSize": 17,
                                                                "lineHeight": 24,
                                                              },
                                                              Array [
                                                                Object {
                                                                  "color": "rgba(51, 51, 51, 0.5)",
                                                                  "marginTop": 4,
                                                                },
                                                                Array [
                                                                  undefined,
                                                                  undefined,
                                                                ],
                                                              ],
                                                            ]
                                                          }
                                                          type="paragraph"
                                                          weight={null}
                                                        >
                                                          <Text
                                                            accessible={true}
                                                            align={null}
                                                            allowFontScaling={false}
                                                            color={null}
                                                            ellipsizeMode="tail"
                                                            size="large"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "backgroundColor": "transparent",
                                                                  "color": "#333",
                                                                  "fontSize": 17,
                                                                  "lineHeight": 24,
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "rgba(51, 51, 51, 0.5)",
                                                                    "marginTop": 4,
                                                                  },
                                                                  Array [
                                                                    undefined,
                                                                    undefined,
                                                                  ],
                                                                ],
                                                              ]
                                                            }
                                                            type="paragraph"
                                                            weight={null}
                                                          >
                                                            清扫 0平方米 | 工作 5分钟
                                                          </Text>
                                                        </Text>
                                                      </Styled(Text)>
                                                    </TYText>
                                                  </Styled(TYText)>
                                                </View>
                                              </View>
                                            </Styled(View)>
                                            <Styled(TouchableOpacity)
                                              activeOpacity={0.8}
                                              disabled={false}
                                              onPress={null}
                                            >
                                              <TouchableOpacity
                                                activeOpacity={0.8}
                                                disabled={false}
                                                onPress={null}
                                                style={
                                                  Array [
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginLeft": 20,
                                                    },
                                                    undefined,
                                                  ]
                                                }
                                              >
                                                <AnimatedComponent
                                                  accessible={true}
                                                  isTVSelectable={true}
                                                  onResponderGrant={[Function]}
                                                  onResponderMove={[Function]}
                                                  onResponderRelease={[Function]}
                                                  onResponderTerminate={[Function]}
                                                  onResponderTerminationRequest={[Function]}
                                                  onStartShouldSetResponder={[Function]}
                                                  style={
                                                    Array [
                                                      Array [
                                                        Object {
                                                          "alignItems": "center",
                                                          "flexDirection": "row",
                                                          "marginLeft": 20,
                                                        },
                                                        undefined,
                                                      ],
                                                      Object {
                                                        "opacity": 1,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <View
                                                    accessible={true}
                                                    isTVSelectable={true}
                                                    onResponderGrant={[Function]}
                                                    onResponderMove={[Function]}
                                                    onResponderRelease={[Function]}
                                                    onResponderTerminate={[Function]}
                                                    onResponderTerminationRequest={[Function]}
                                                    onStartShouldSetResponder={[Function]}
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginLeft": 20,
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    <View
                                                      accessible={true}
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Object {
                                                          "alignItems": "center",
                                                          "flexDirection": "row",
                                                          "marginLeft": 20,
                                                          "opacity": 1,
                                                        }
                                                      }
                                                    >
                                                      <Styled(TYText)
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "#7ED321",
                                                            },
                                                            undefined,
                                                          ]
                                                        }
                                                      >
                                                        <TYText
                                                          align={null}
                                                          color={null}
                                                          size="large"
                                                          style={
                                                            Array [
                                                              Object {
                                                                "color": "rgba(51, 51, 51, 0.5)",
                                                              },
                                                              Array [
                                                                Object {
                                                                  "color": "#7ED321",
                                                                },
                                                                undefined,
                                                              ],
                                                            ]
                                                          }
                                                          type="paragraph"
                                                          weight={null}
                                                        >
                                                          <Styled(Text)
                                                            align={null}
                                                            allowFontScaling={false}
                                                            color={null}
                                                            size="large"
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "color": "rgba(51, 51, 51, 0.5)",
                                                                },
                                                                Array [
                                                                  Object {
                                                                    "color": "#7ED321",
                                                                  },
                                                                  undefined,
                                                                ],
                                                              ]
                                                            }
                                                            type="paragraph"
                                                            weight={null}
                                                          >
                                                            <Text
                                                              accessible={true}
                                                              align={null}
                                                              allowFontScaling={false}
                                                              color={null}
                                                              ellipsizeMode="tail"
                                                              size="large"
                                                              style={
                                                                Array [
                                                                  Object {
                                                                    "backgroundColor": "transparent",
                                                                    "color": "#333",
                                                                    "fontSize": 17,
                                                                    "lineHeight": 24,
                                                                  },
                                                                  Array [
                                                                    Object {
                                                                      "color": "rgba(51, 51, 51, 0.5)",
                                                                    },
                                                                    Array [
                                                                      Object {
                                                                        "color": "#7ED321",
                                                                      },
                                                                      undefined,
                                                                    ],
                                                                  ],
                                                                ]
                                                              }
                                                              type="paragraph"
                                                              weight={null}
                                                            >
                                                              <Text
                                                                accessible={true}
                                                                align={null}
                                                                allowFontScaling={false}
                                                                color={null}
                                                                ellipsizeMode="tail"
                                                                size="large"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "color": "#333",
                                                                      "fontSize": 17,
                                                                      "lineHeight": 24,
                                                                    },
                                                                    Array [
                                                                      Object {
                                                                        "color": "rgba(51, 51, 51, 0.5)",
                                                                      },
                                                                      Array [
                                                                        Object {
                                                                          "color": "#7ED321",
                                                                        },
                                                                        undefined,
                                                                      ],
                                                                    ],
                                                                  ]
                                                                }
                                                                type="paragraph"
                                                                weight={null}
                                                              >
                                                                清扫成功
                                                              </Text>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TYText>
                                                      </Styled(TYText)>
                                                    </View>
                                                  </View>
                                                </AnimatedComponent>
                                              </TouchableOpacity>
                                            </Styled(TouchableOpacity)>
                                          </View>
                                        </View>
                                      </Styled(View)>
                                    </View>
                                  </View>
                                </AnimatedComponent>
                              </TouchableOpacity>
                            </Styled(TouchableOpacity)>
                          </TYListItem>
                        </View>
                      </View>
                    </CellRenderer>
                  </View>
                </View>
              </RCTScrollView>
            </_class>
          </ScrollViewMock>
        </VirtualizedList>
      </FlatList>
    </ThemeConsumer>
  </WithTheme(ThemeConsumer)>
</TYFlatList>
`;
