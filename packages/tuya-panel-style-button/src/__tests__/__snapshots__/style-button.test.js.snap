// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StyleButton AcrylicButton 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 28,
      "justifyContent": "center",
      "opacity": 1,
      "width": 240,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        },
        Object {
          "paddingBottom": 24,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 24,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FE7862",
            "height": 128,
            "width": 128,
          },
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 64,
              "display": "flex",
              "height": 128,
              "justifyContent": "center",
              "overflow": "hidden",
              "width": 128,
            },
            Object {},
          ],
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            Object {
              "height": 38,
              "width": 38,
            },
            false,
            null,
          ]
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
              false,
              Object {
                "flex": 0,
                "height": 38,
                "width": 38,
              },
            ]
          }
          vbHeight={1024}
          vbWidth={1024}
        >
          <RNSVGPath
            d="M512 0C794.760533 0 1024 229.239467 1024 512S794.760533 1024 512 1024 0 794.760533 0 512 229.239467 0 512 0z m185.048178 327.0656a26.988089 26.988089 0 0 0-38.183822 38.183822 207.712711 207.712711 0 1 1-293.728712 0 26.988089 26.988089 0 1 0-38.183822-38.183822c-102.172444 102.1952-102.172444 267.901156 0 370.096356 102.1952 102.172444 267.901156 102.172444 370.096356 0 102.172444-102.1952 102.172444-267.901156 0-370.096356zM511.886222 227.555556a27.079111 27.079111 0 0 0-26.919822 24.302933l-0.136533 2.776178v196.152889a27.079111 27.079111 0 0 0 53.998933 2.776177l0.136533-2.776177v-196.152889a27.079111 27.079111 0 0 0-27.079111-27.079111z"
            fill={
              Array [
                0,
                0.08235294117647059,
                0.5490196078431373,
                0.984313725490196,
                1,
              ]
            }
            fillOpacity={1}
            fillRule={1}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            opacity={1}
            propList={
              Array [
                "stroke",
                "strokeWidth",
                "fill",
              ]
            }
            stroke={
              Array [
                0,
                0.08235294117647059,
                0.5490196078431373,
                0.984313725490196,
                1,
              ]
            }
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={0}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth={1}
          />
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</View>
`;

exports[`StyleButton ClassicButton 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#FFF",
      "borderRadius": 28,
      "justifyContent": "center",
      "opacity": 1,
      "width": 240,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        },
        Object {
          "paddingBottom": 24,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 24,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0, 159, 255, 0.1)",
            "height": 96,
            "width": 96,
          },
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 48,
              "display": "flex",
              "height": 96,
              "justifyContent": "center",
              "overflow": "hidden",
              "width": 96,
            },
            Object {},
          ],
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            Object {
              "height": 48,
              "width": 48,
            },
            false,
            null,
          ]
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
              false,
              Object {
                "flex": 0,
                "height": 48,
                "width": 48,
              },
            ]
          }
          vbHeight={1024}
          vbWidth={1024}
        >
          <RNSVGPath
            d="M512 0C794.760533 0 1024 229.239467 1024 512S794.760533 1024 512 1024 0 794.760533 0 512 229.239467 0 512 0z m185.048178 327.0656a26.988089 26.988089 0 0 0-38.183822 38.183822 207.712711 207.712711 0 1 1-293.728712 0 26.988089 26.988089 0 1 0-38.183822-38.183822c-102.172444 102.1952-102.172444 267.901156 0 370.096356 102.1952 102.172444 267.901156 102.172444 370.096356 0 102.172444-102.1952 102.172444-267.901156 0-370.096356zM511.886222 227.555556a27.079111 27.079111 0 0 0-26.919822 24.302933l-0.136533 2.776178v196.152889a27.079111 27.079111 0 0 0 53.998933 2.776177l0.136533-2.776177v-196.152889a27.079111 27.079111 0 0 0-27.079111-27.079111z"
            fill={
              Array [
                0,
                0.08235294117647059,
                0.5490196078431373,
                0.984313725490196,
                1,
              ]
            }
            fillOpacity={1}
            fillRule={1}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            opacity={1}
            propList={
              Array [
                "stroke",
                "strokeWidth",
                "fill",
              ]
            }
            stroke={
              Array [
                0,
                0.08235294117647059,
                0.5490196078431373,
                0.984313725490196,
                1,
              ]
            }
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={0}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth={1}
          />
        </RNSVGSvgView>
      </View>
    </View>
    <Text
      accessible={true}
      align={null}
      allowFontScaling={false}
      color="rgba(61, 61, 61, 0.5)"
      ellipsizeMode="tail"
      size={20}
      style={
        Array [
          false,
          Array [
            false,
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "rgba(61, 61, 61, 0.5)",
                "fontSize": 20,
                "fontWeight": "400",
              },
              Array [
                Object {
                  "marginTop": 16,
                },
                undefined,
              ],
            ],
          ],
        ]
      }
      type={null}
      weight="400"
    >
      开关
    </Text>
  </View>
</View>
`;

exports[`StyleButton NordicButton 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 28,
      "justifyContent": "center",
      "opacity": 1,
      "width": 240,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#ff0",
        "height": 25,
        "width": 25,
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        },
        Object {
          "paddingBottom": 24,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 24,
        },
      ]
    }
  />
</View>
`;
