// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NumberSelector Component basic render 1`] = `
<View
  style={
    Object {
      "transform": Array [
        Object {
          "translateY": 1334,
        },
      ],
    }
  }
>
  <View
    accessible={true}
    isTVSelectable={true}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#f8f8f8",
        "borderBottomLeftRadius": 0,
        "borderBottomRightRadius": 0,
        "borderTopLeftRadius": 16,
        "borderTopRightRadius": 16,
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "flexDirection": "row",
            "height": 56,
            "justifyContent": "center",
          },
          Array [
            Object {
              "backgroundColor": "#ffffff",
              "borderTopLeftRadius": 16,
              "borderTopRightRadius": 16,
              "height": 56,
              "justifyContent": "space-around",
              "paddingBottom": 0,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 0,
            },
            Array [
              null,
              "",
            ],
          ],
        ]
      }
    >
      <Text
        accessible={true}
        align={null}
        allowFontScaling={false}
        color={null}
        ellipsizeMode="tail"
        size={14}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#333",
              "fontSize": 14,
            },
            Array [
              Object {
                "color": "rgba(0,0,0,0.9)",
                "fontSize": 14,
              },
              null,
            ],
          ]
        }
        type={null}
        weight={null}
      >
        温度调节
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#fff",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.1)",
              "height": 0.5,
            },
            undefined,
          ]
        }
      />
    </View>
    <View
      pointerEvents="auto"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 32,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 32,
            },
            null,
          ]
        }
      >
        <View
          onLayout={[Function]}
          stretch={false}
          style={
            Array [
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "justifyContent": "center",
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
              },
              Array [
                false,
                undefined,
              ],
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "flexDirection": "column",
                "justifyContent": "center",
                "opacity": 1,
              }
            }
          >
            <View
              onLayout={[Function]}
              size="noSet"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "justifyContent": "center",
                    "overflow": "hidden",
                  },
                  Array [
                    false,
                    false,
                    false,
                    undefined,
                    Array [
                      Object {
                        "opacity": 1,
                      },
                      undefined,
                    ],
                  ],
                ]
              }
              type="normal"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    Object {
                      "height": 26,
                      "width": 26,
                    },
                    false,
                    Array [
                      undefined,
                      Object {
                        "opacity": 1,
                      },
                    ],
                  ]
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      undefined,
                      false,
                      Object {
                        "flex": 0,
                        "height": 26,
                        "width": 26,
                      },
                    ]
                  }
                  vbHeight={1024}
                  vbWidth={1024}
                >
                  <RNSVGPath
                    d="M85.333333 469.333333m42.666667 0l768 0q42.666667 0 42.666667 42.666667l0 0q0 42.666667-42.666667 42.666667l-768 0q-42.666667 0-42.666667-42.666667l0 0q0-42.666667 42.666667-42.666667Z"
                    fill={
                      Array [
                        0,
                        0.2,
                        0.2,
                        0.2,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    opacity={1}
                    propList={
                      Array [
                        "stroke",
                        "strokeWidth",
                        "fill",
                      ]
                    }
                    stroke={
                      Array [
                        0,
                        0.2,
                        0.2,
                        0.2,
                        1,
                      ]
                    }
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth={1}
                  />
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
        <Text
          accessible={true}
          align={null}
          allowFontScaling={false}
          color={null}
          ellipsizeMode="tail"
          numberOfLines={1}
          size={56}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#333",
                "fontSize": 56,
              },
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "rgba(0,0,0,0.9)",
                  "fontSize": 56,
                  "fontWeight": "500",
                  "textAlign": "center",
                  "width": 400,
                },
                Array [
                  Object {
                    "opacity": 1,
                  },
                  null,
                ],
              ],
            ]
          }
          type={null}
          weight={null}
        >
          34
        </Text>
        <View
          onLayout={[Function]}
          stretch={false}
          style={
            Array [
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "justifyContent": "center",
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
              },
              Array [
                false,
                undefined,
              ],
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "flexDirection": "column",
                "justifyContent": "center",
                "opacity": 1,
              }
            }
          >
            <View
              onLayout={[Function]}
              size="noSet"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "justifyContent": "center",
                    "overflow": "hidden",
                  },
                  Array [
                    false,
                    false,
                    false,
                    undefined,
                    Array [
                      Object {
                        "opacity": 1,
                      },
                      undefined,
                    ],
                  ],
                ]
              }
              type="normal"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    Object {
                      "height": 26,
                      "width": 26,
                    },
                    false,
                    Array [
                      undefined,
                      Object {
                        "opacity": 1,
                      },
                    ],
                  ]
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      undefined,
                      false,
                      Object {
                        "flex": 0,
                        "height": 26,
                        "width": 26,
                      },
                    ]
                  }
                  vbHeight={1024}
                  vbWidth={1024}
                >
                  <RNSVGPath
                    d="M512 85.333333a42.666667 42.666667 0 0 1 42.666667 42.666667v341.333333h341.333333a42.666667 42.666667 0 0 1 0 85.333334h-341.376L554.666667 896a42.666667 42.666667 0 0 1-85.333334 0l-0.042666-341.333333H128a42.666667 42.666667 0 0 1 0-85.333334h341.333333V128a42.666667 42.666667 0 0 1 42.666667-42.666667z"
                    fill={
                      Array [
                        0,
                        0.2,
                        0.2,
                        0.2,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    opacity={1}
                    propList={
                      Array [
                        "stroke",
                        "strokeWidth",
                        "fill",
                      ]
                    }
                    stroke={
                      Array [
                        0,
                        0.2,
                        0.2,
                        0.2,
                        1,
                      ]
                    }
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth={1}
                  />
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "flexDirection": "row",
            "height": 56,
            "justifyContent": "center",
          },
          Array [
            Object {
              "borderBottomLeftRadius": 0,
              "borderBottomRightRadius": 0,
              "height": 76,
              "marginTop": 12,
              "paddingBottom": 20,
            },
            null,
          ],
        ]
      }
    >
      <View
        accessibilityLabel="Popup_Cancel"
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 12,
          }
        }
      >
        <Text
          accessible={true}
          align={null}
          allowFontScaling={false}
          color={null}
          ellipsizeMode="tail"
          single={false}
          size={16}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#333",
                "fontSize": 16,
              },
              Array [
                Object {
                  "color": "rgba(0,0,0,0.7)",
                  "fontSize": 16,
                },
                null,
              ],
            ]
          }
          type={null}
          weight={null}
        >
          取消
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.1)",
              "height": 24,
              "width": 0.5,
            },
            undefined,
          ]
        }
      />
      <View
        accessibilityLabel="Popup_Confirm"
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRightColor": "rgba(0, 0, 0, 0.1)",
            "borderRightWidth": 0,
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 12,
          }
        }
      >
        <Text
          accessible={true}
          align={null}
          allowFontScaling={false}
          color={null}
          ellipsizeMode="tail"
          size={16}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#333",
                "fontSize": 16,
              },
              Array [
                Object {
                  "color": "#FF4800",
                  "fontSize": 16,
                  "fontWeight": "bold",
                },
                null,
              ],
            ]
          }
          type={null}
          weight={null}
        >
          确认
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`NumberSelector Component basic render type 1`] = `
<View
  style={
    Object {
      "transform": Array [
        Object {
          "translateY": 1334,
        },
      ],
    }
  }
>
  <View
    accessible={true}
    isTVSelectable={true}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#f8f8f8",
        "borderBottomLeftRadius": 0,
        "borderBottomRightRadius": 0,
        "borderTopLeftRadius": 16,
        "borderTopRightRadius": 16,
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "flexDirection": "row",
            "height": 56,
            "justifyContent": "center",
          },
          Array [
            Object {
              "backgroundColor": "#ffffff",
              "borderTopLeftRadius": 16,
              "borderTopRightRadius": 16,
              "height": 56,
              "justifyContent": "space-around",
              "paddingBottom": 0,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 0,
            },
            Array [
              null,
              "",
            ],
          ],
        ]
      }
    >
      <Text
        accessible={true}
        align={null}
        allowFontScaling={false}
        color={null}
        ellipsizeMode="tail"
        size={14}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#333",
              "fontSize": 14,
            },
            Array [
              Object {
                "color": "rgba(0,0,0,0.9)",
                "fontSize": 14,
              },
              null,
            ],
          ]
        }
        type={null}
        weight={null}
      >
        温度调节
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#fff",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.1)",
              "height": 0.5,
            },
            undefined,
          ]
        }
      />
    </View>
    <View
      pointerEvents="auto"
    >
      <View
        flexDirection="column"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 32,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 32,
            },
            Array [
              Object {
                "flexDirection": "column",
              },
              null,
            ],
          ]
        }
      >
        <Text
          accessible={true}
          align={null}
          allowFontScaling={false}
          color={null}
          ellipsizeMode="tail"
          numberOfLines={1}
          size={56}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#333",
                "fontSize": 56,
              },
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "rgba(0,0,0,0.9)",
                  "fontSize": 56,
                  "fontWeight": "500",
                  "textAlign": "center",
                  "width": 400,
                },
                Array [
                  Object {
                    "opacity": 1,
                  },
                  null,
                ],
              ],
            ]
          }
          type={null}
          weight={null}
        >
          34
        </Text>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 56,
                "justifyContent": "center",
                "marginTop": 16,
              },
              undefined,
            ]
          }
        >
          <View
            onLayout={[Function]}
            stretch={false}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "justifyContent": "center",
                  "marginBottom": 0,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 0,
                },
                Array [
                  false,
                  undefined,
                ],
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "flexDirection": "column",
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
            >
              <View
                onLayout={[Function]}
                size="noSet"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                      "overflow": "hidden",
                    },
                    Array [
                      false,
                      false,
                      false,
                      undefined,
                      Array [
                        Object {
                          "opacity": 1,
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
                type="normal"
              >
                <View
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                      },
                      Object {
                        "height": 18,
                        "width": 18,
                      },
                      false,
                      Array [
                        undefined,
                        Object {
                          "opacity": 1,
                        },
                      ],
                    ]
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        undefined,
                        false,
                        Object {
                          "flex": 0,
                          "height": 18,
                          "width": 18,
                        },
                      ]
                    }
                    vbHeight={1024}
                    vbWidth={1024}
                  >
                    <RNSVGPath
                      d="M85.333333 469.333333m42.666667 0l768 0q42.666667 0 42.666667 42.666667l0 0q0 42.666667-42.666667 42.666667l-768 0q-42.666667 0-42.666667-42.666667l0 0q0-42.666667 42.666667-42.666667Z"
                      fill={
                        Array [
                          0,
                          0.2,
                          0.2,
                          0.2,
                          1,
                        ]
                      }
                      fillOpacity={1}
                      fillRule={1}
                      matrix={
                        Array [
                          1,
                          0,
                          0,
                          1,
                          0,
                          0,
                        ]
                      }
                      opacity={1}
                      propList={
                        Array [
                          "stroke",
                          "strokeWidth",
                          "fill",
                        ]
                      }
                      stroke={
                        Array [
                          0,
                          0.2,
                          0.2,
                          0.2,
                          1,
                        ]
                      }
                      strokeDasharray={null}
                      strokeDashoffset={null}
                      strokeLinecap={0}
                      strokeLinejoin={0}
                      strokeMiterlimit={4}
                      strokeOpacity={1}
                      strokeWidth={1}
                    />
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
          </View>
          <View
            accessibilityLabel="Slider"
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "column",
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "column",
                  "height": 40,
                },
                Array [
                  Object {
                    "marginBottom": 0,
                    "marginLeft": 12,
                    "marginRight": 12,
                    "marginTop": 0,
                    "width": 440,
                  },
                  Object {
                    "opacity": 1,
                  },
                ],
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "#b3b3b3",
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 2,
                    "height": 4,
                  },
                  Object {
                    "borderRadius": undefined,
                    "height": undefined,
                  },
                ]
              }
            />
            <View
              style={
                Object {
                  "backgroundColor": "#0B7CFF",
                  "borderRadius": undefined,
                  "height": undefined,
                  "justifyContent": "center",
                  "opacity": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                }
              }
            />
            <View
              onLayout={[Function]}
              renderToHardwareTextureAndroid={true}
              style={
                Object {
                  "backgroundColor": "#343434",
                  "borderRadius": undefined,
                  "elevation": 2,
                  "height": undefined,
                  "opacity": 0,
                  "position": "absolute",
                  "shadowColor": "rgba(0,0,0,0.3)",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 2,
                  },
                  "shadowOpacity": 1,
                  "shadowRadius": 2,
                  "width": undefined,
                }
              }
            />
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {},
                ]
              }
            />
          </View>
          <View
            onLayout={[Function]}
            stretch={false}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "justifyContent": "center",
                  "marginBottom": 0,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 0,
                },
                Array [
                  false,
                  undefined,
                ],
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "flexDirection": "column",
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
            >
              <View
                onLayout={[Function]}
                size="noSet"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                      "overflow": "hidden",
                    },
                    Array [
                      false,
                      false,
                      false,
                      undefined,
                      Array [
                        Object {
                          "opacity": 1,
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
                type="normal"
              >
                <View
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                      },
                      Object {
                        "height": 18,
                        "width": 18,
                      },
                      false,
                      Array [
                        undefined,
                        Object {
                          "opacity": 1,
                        },
                      ],
                    ]
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        undefined,
                        false,
                        Object {
                          "flex": 0,
                          "height": 18,
                          "width": 18,
                        },
                      ]
                    }
                    vbHeight={1024}
                    vbWidth={1024}
                  >
                    <RNSVGPath
                      d="M512 85.333333a42.666667 42.666667 0 0 1 42.666667 42.666667v341.333333h341.333333a42.666667 42.666667 0 0 1 0 85.333334h-341.376L554.666667 896a42.666667 42.666667 0 0 1-85.333334 0l-0.042666-341.333333H128a42.666667 42.666667 0 0 1 0-85.333334h341.333333V128a42.666667 42.666667 0 0 1 42.666667-42.666667z"
                      fill={
                        Array [
                          0,
                          0.2,
                          0.2,
                          0.2,
                          1,
                        ]
                      }
                      fillOpacity={1}
                      fillRule={1}
                      matrix={
                        Array [
                          1,
                          0,
                          0,
                          1,
                          0,
                          0,
                        ]
                      }
                      opacity={1}
                      propList={
                        Array [
                          "stroke",
                          "strokeWidth",
                          "fill",
                        ]
                      }
                      stroke={
                        Array [
                          0,
                          0.2,
                          0.2,
                          0.2,
                          1,
                        ]
                      }
                      strokeDasharray={null}
                      strokeDashoffset={null}
                      strokeLinecap={0}
                      strokeLinejoin={0}
                      strokeMiterlimit={4}
                      strokeOpacity={1}
                      strokeWidth={1}
                    />
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "flexDirection": "row",
            "height": 56,
            "justifyContent": "center",
          },
          Array [
            Object {
              "borderBottomLeftRadius": 0,
              "borderBottomRightRadius": 0,
              "height": 76,
              "marginTop": 12,
              "paddingBottom": 20,
            },
            null,
          ],
        ]
      }
    >
      <View
        accessibilityLabel="Popup_Cancel"
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 12,
          }
        }
      >
        <Text
          accessible={true}
          align={null}
          allowFontScaling={false}
          color={null}
          ellipsizeMode="tail"
          single={false}
          size={16}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#333",
                "fontSize": 16,
              },
              Array [
                Object {
                  "color": "rgba(0,0,0,0.7)",
                  "fontSize": 16,
                },
                null,
              ],
            ]
          }
          type={null}
          weight={null}
        >
          取消
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.1)",
              "height": 24,
              "width": 0.5,
            },
            undefined,
          ]
        }
      />
      <View
        accessibilityLabel="Popup_Confirm"
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderRightColor": "rgba(0, 0, 0, 0.1)",
            "borderRightWidth": 0,
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 12,
          }
        }
      >
        <Text
          accessible={true}
          align={null}
          allowFontScaling={false}
          color={null}
          ellipsizeMode="tail"
          size={16}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#333",
                "fontSize": 16,
              },
              Array [
                Object {
                  "color": "#FF4800",
                  "fontSize": 16,
                  "fontWeight": "bold",
                },
                null,
              ],
            ]
          }
          type={null}
          weight={null}
        >
          确认
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Popup Component basic render 1`] = `null`;
